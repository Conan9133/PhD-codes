(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    989052,      20089]
NotebookOptionsPosition[    974384,      19834]
NotebookOutlinePosition[    974758,      19850]
CellTagsIndexPosition[    974715,      19847]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"EQ1", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["r", "2"], "-", 
      SuperscriptBox["p", "2"]}], ")"}], 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"U", "[", "\[Xi]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Xi]", ",", "2"}], "}"}]}], "]"}]}], " ", "-", 
   RowBox[{
    SuperscriptBox["g", "2"], " ", 
    SuperscriptBox["l", "2"], 
    RowBox[{"U", "[", "\[Xi]", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"V", "[", "\[Xi]", "]"}], "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.8453986601966324`*^9, 3.8453986823287673`*^9}, {
  3.8454079784742627`*^9, 3.845408075301081*^9}, {3.845408111120386*^9, 
  3.8454081163316584`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"95d984f9-0dda-4720-9dae-c7cf8695aad6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["g", "2"]}], " ", 
   SuperscriptBox["l", "2"], " ", 
   RowBox[{"U", "[", "\[Xi]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"V", "[", "\[Xi]", "]"}], "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p", "2"]}], "+", 
     SuperscriptBox["r", "2"]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["U", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "\[Xi]", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.8454081018089666`*^9, 3.8454081177846813`*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"e58f35f3-eaa1-4a2d-a10a-45bdd5a95b17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EQ2", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["r", "2"], "-", 
      SuperscriptBox["p", "2"]}], ")"}], 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"V", "[", "\[Xi]", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Xi]", ",", "2"}], "}"}]}], "]"}]}], " ", "-", 
   RowBox[{
    SuperscriptBox["g", "2"], " ", 
    SuperscriptBox["k", "2"], 
    RowBox[{"V", "[", "\[Xi]", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"U", "[", "\[Xi]", "]"}], "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.8454081206542325`*^9, 3.845408145133989*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"b49c15a8-2100-47a7-9ce7-35131234f9c5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["g", "2"]}], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox[
    RowBox[{"U", "[", "\[Xi]", "]"}], "2"], " ", 
   RowBox[{"V", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p", "2"]}], "+", 
     SuperscriptBox["r", "2"]}], ")"}], " ", 
   RowBox[{
    SuperscriptBox["V", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "\[Xi]", "]"}]}]}]], "Output",
 CellChangeTimes->{3.8454081463506985`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"1a8e305f-b773-44d9-aabd-1cee592137ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coth-Cosech method", "Section",
 CellChangeTimes->{
  3.8474874484156795`*^9},ExpressionUUID->"ec05e4a8-dbf5-4d63-96c3-\
6f76c41c8ade"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"U", "[", "\[Xi]_", "]"}], "=", " ", 
  RowBox[{"a0", " ", "+", 
   RowBox[{"a1", " ", 
    RowBox[{"Coth", "[", 
     RowBox[{"I", " ", "\[Xi]"}], "]"}]}], "+", 
   RowBox[{"b1", " ", 
    RowBox[{"Csch", "[", 
     RowBox[{"I", " ", "\[Xi]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.845408149076084*^9, 3.8454081888421583`*^9}, {
  3.845408231737731*^9, 3.845408239480337*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"ade036d4-f74e-4abd-b1bd-518e796987b2"],

Cell[BoxData[
 RowBox[{"a0", "-", 
  RowBox[{"\[ImaginaryI]", " ", "a1", " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}]}]], "Output",
 CellChangeTimes->{3.845408243293206*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"4713df2b-c3d2-4e04-9fc9-ef41ff0daef5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"V", "[", "\[Xi]_", "]"}], "=", " ", 
  RowBox[{"A0", " ", "+", 
   RowBox[{"A1", " ", 
    RowBox[{"Coth", "[", 
     RowBox[{"I", " ", "\[Xi]"}], "]"}]}], " ", "+", " ", 
   RowBox[{"B1", " ", 
    RowBox[{"Csch", "[", 
     RowBox[{"I", " ", "\[Xi]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.845408246187791*^9, 3.8454082831203995`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"42d20e93-6361-42b1-a0db-d0c9557a4b9e"],

Cell[BoxData[
 RowBox[{"A0", "-", 
  RowBox[{"\[ImaginaryI]", " ", "A1", " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}]}]], "Output",
 CellChangeTimes->{3.8454082840842996`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"1fea7a75-ac6c-4e2f-9573-fbe4c32c7dd6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["EQ1"], "Input",
 CellChangeTimes->{{3.8454082889378705`*^9, 3.845408290850562*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"d067fce1-c0d5-4ce9-baf0-e1af2ec28600"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["g", "2"]}], " ", 
   SuperscriptBox["l", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"a0", "-", 
     RowBox[{"\[ImaginaryI]", " ", "a1", " ", 
      RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
      RowBox[{"Csc", "[", "\[Xi]", "]"}]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"A0", "-", 
      RowBox[{"\[ImaginaryI]", " ", "A1", " ", 
       RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
       RowBox[{"Csc", "[", "\[Xi]", "]"}]}]}], ")"}], "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p", "2"]}], "+", 
     SuperscriptBox["r", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "b1", " ", 
      SuperscriptBox[
       RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
      RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "a1", " ", 
      RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Xi]", "]"}], "3"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.845408292703945*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"6fdc57e1-895d-4f26-baff-51aedaa175e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EQ11", "=", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["g", "2"]}], " ", 
     SuperscriptBox["l", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"a0", "-", 
       RowBox[{"\[ImaginaryI]", " ", "a1", " ", 
        RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
        RowBox[{"Csc", "[", "\[Xi]", "]"}]}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"A0", "-", 
        RowBox[{"\[ImaginaryI]", " ", "A1", " ", 
         RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
         RowBox[{"Csc", "[", "\[Xi]", "]"}]}]}], ")"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p", "2"]}], "+", 
       SuperscriptBox["r", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "b1", " ", 
        SuperscriptBox[
         RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
        RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "a1", " ", 
        RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Xi]", "]"}], "3"]}]}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8454083418168545`*^9, 3.8454083455379105`*^9}},
 NumberMarks->False,
 CellLabel->"In[11]:=",ExpressionUUID->"f2b98706-463e-4a6f-8029-5d751adc59e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "a0"}], " ", 
   SuperscriptBox["A0", "2"], " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["A0", "2"], " ", "a1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "a0", " ", "A0", " ", "A1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"2", " ", "A0", " ", "a1", " ", "A1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"]}], "+", 
  RowBox[{"a0", " ", 
   SuperscriptBox["A1", "2"], " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "a1", " ", 
   SuperscriptBox["A1", "2"], " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "3"]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["A0", "2"], " ", "b1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "a0", " ", "A0", " ", "B1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"2", " ", "A0", " ", "A1", " ", "b1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"2", " ", "A0", " ", "a1", " ", "B1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"2", " ", "a0", " ", "A1", " ", "B1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["A1", "2"], " ", "b1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "a1", " ", "A1", " ", "B1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
   SuperscriptBox["p", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
   SuperscriptBox["r", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"2", " ", "A0", " ", "b1", " ", "B1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "+", 
  RowBox[{"a0", " ", 
   SuperscriptBox["B1", "2"], " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "A1", " ", "b1", " ", "B1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "a1", " ", 
   SuperscriptBox["B1", "2"], " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "a1", " ", 
   SuperscriptBox["p", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "a1", " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
   SuperscriptBox["B1", "2"], " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "3"]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
   SuperscriptBox["p", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "3"]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
   SuperscriptBox["r", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "3"]}]}]], "Output",
 CellChangeTimes->{{3.845408318226445*^9, 3.8454083465008945`*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"76334ea6-9aa1-4a53-89fe-b56c89561828"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"EQ11", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cot", "[", "\[Xi]", "]"}], ",", 
     SuperscriptBox[
      RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], ",", 
     SuperscriptBox[
      RowBox[{"Cot", "[", "\[Xi]", "]"}], "3"], ",", 
     RowBox[{"Csc", "[", "\[Xi]", "]"}], ",", 
     RowBox[{
      RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
      RowBox[{"Csc", "[", "\[Xi]", "]"}]}], ",", " ", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
      RowBox[{"Csc", "[", "\[Xi]", "]"}]}], ",", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"], ",", 
     RowBox[{
      RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], ",", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Xi]", "]"}], "3"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8454084135364113`*^9, {3.8454320428807597`*^9, 3.8454321502173414`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"b8f6a77b-f222-473e-803c-9e5bf4d72ad0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "a0"}], " ", 
   SuperscriptBox["A0", "2"], " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["A0", "2"], " ", "a1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "a0", " ", "A0", " ", "A1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}]}], ")"}], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "A0", " ", "a1", " ", "A1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "+", 
     RowBox[{"a0", " ", 
      SuperscriptBox["A1", "2"], " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "a1", " ", 
   SuperscriptBox["A1", "2"], " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "3"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["A0", "2"], " ", "b1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "a0", " ", "A0", " ", "B1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}]}], ")"}], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "A0", " ", "A1", " ", "b1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "+", 
     RowBox[{"2", " ", "A0", " ", "a1", " ", "B1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "+", 
     RowBox[{"2", " ", "a0", " ", "A1", " ", "B1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}]}], ")"}], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["A1", "2"], " ", "b1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "a1", " ", "A1", " ", "B1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
      SuperscriptBox["p", "2"]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
      SuperscriptBox["r", "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "A0", " ", "b1", " ", "B1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "+", 
     RowBox[{"a0", " ", 
      SuperscriptBox["B1", "2"], " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "A1", " ", "b1", " ", 
      "B1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "a1", " ", 
      SuperscriptBox["B1", "2"], " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "a1", " ", 
      SuperscriptBox["p", "2"]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "a1", " ", 
      SuperscriptBox["r", "2"]}]}], ")"}], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "b1", " ", 
      SuperscriptBox["B1", "2"], " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
      SuperscriptBox["p", "2"]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
      SuperscriptBox["r", "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "3"]}]}]], "Output",
 CellChangeTimes->{3.8454322051222134`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"e2ce3317-b8a0-47b5-aa2b-c5c6e741e8bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["EQ2"], "Input",
 CellChangeTimes->{{3.845408302646139*^9, 3.8454083034621706`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"1017ceb3-e77b-4813-8206-4d4b27691701"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["g", "2"]}], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"a0", "-", 
      RowBox[{"\[ImaginaryI]", " ", "a1", " ", 
       RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
       RowBox[{"Csc", "[", "\[Xi]", "]"}]}]}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"A0", "-", 
     RowBox[{"\[ImaginaryI]", " ", "A1", " ", 
      RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
      RowBox[{"Csc", "[", "\[Xi]", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["p", "2"]}], "+", 
     SuperscriptBox["r", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "B1", " ", 
      SuperscriptBox[
       RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
      RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "A1", " ", 
      RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Xi]", "]"}], "3"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8454083343081813`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"da73116e-7c75-47da-b85b-71e90a83bab9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EQ22", "=", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["g", "2"]}], " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"a0", "-", 
        RowBox[{"\[ImaginaryI]", " ", "a1", " ", 
         RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "-", 
        RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
         RowBox[{"Csc", "[", "\[Xi]", "]"}]}]}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{"A0", "-", 
       RowBox[{"\[ImaginaryI]", " ", "A1", " ", 
        RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
        RowBox[{"Csc", "[", "\[Xi]", "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["p", "2"]}], "+", 
       SuperscriptBox["r", "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "B1", " ", 
        SuperscriptBox[
         RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
        RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "-", 
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "A1", " ", 
        RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "-", 
       RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", "\[Xi]", "]"}], "3"]}]}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.84540834962423*^9, 3.8454083516839666`*^9}},
 NumberMarks->False,
 CellLabel->"In[12]:=",ExpressionUUID->"9ec617f4-959f-4ea5-bb70-287108cb95a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["a0", "2"]}], " ", "A0", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "a0", " ", "A0", " ", "a1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["a0", "2"], " ", "A1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"A0", " ", 
   SuperscriptBox["a1", "2"], " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", "a0", " ", "a1", " ", "A1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["a1", "2"], " ", "A1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "3"]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "a0", " ", "A0", " ", "b1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["a0", "2"], " ", "B1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"2", " ", "A0", " ", "a1", " ", "b1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"2", " ", "a0", " ", "A1", " ", "b1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"2", " ", "a0", " ", "a1", " ", "B1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "a1", " ", "A1", " ", "b1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["a1", "2"], " ", "B1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
   SuperscriptBox["p", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
   SuperscriptBox["r", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{"A0", " ", 
   SuperscriptBox["b1", "2"], " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", "a0", " ", "b1", " ", "B1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "A1", " ", 
   SuperscriptBox["b1", "2"], " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "a1", " ", "b1", " ", "B1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "A1", " ", 
   SuperscriptBox["p", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "A1", " ", 
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["b1", "2"], " ", "B1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "3"]}], "+", 
  RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
   SuperscriptBox["p", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "3"]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
   SuperscriptBox["r", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "3"]}]}]], "Output",
 CellChangeTimes->{{3.84540833675095*^9, 3.84540835246653*^9}},
 CellLabel->"Out[12]=",ExpressionUUID->"5ab55a5e-22ff-4921-88d7-2d1e0c503de5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"EQ22", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cot", "[", "\[Xi]", "]"}], ",", 
     SuperscriptBox[
      RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], ",", 
     SuperscriptBox[
      RowBox[{"Cot", "[", "\[Xi]", "]"}], "3"], ",", 
     RowBox[{"Csc", "[", "\[Xi]", "]"}], ",", 
     RowBox[{
      RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
      RowBox[{"Csc", "[", "\[Xi]", "]"}]}], ",", " ", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
      RowBox[{"Csc", "[", "\[Xi]", "]"}]}], ",", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"], ",", 
     RowBox[{
      RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], ",", 
     SuperscriptBox[
      RowBox[{"Csc", "[", "\[Xi]", "]"}], "3"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8454322408481627`*^9, 3.845432241733704*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"0013b9bf-6e5c-4c0b-936c-11d51f03520f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["a0", "2"]}], " ", "A0", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "a0", " ", "A0", " ", "a1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["a0", "2"], " ", "A1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}]}], ")"}], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"A0", " ", 
      SuperscriptBox["a1", "2"], " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}], "+", 
     RowBox[{"2", " ", "a0", " ", "a1", " ", "A1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SuperscriptBox["a1", "2"], " ", "A1", " ", 
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["k", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "3"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "a0", " ", "A0", " ", "b1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["a0", "2"], " ", "B1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}]}], ")"}], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "A0", " ", "a1", " ", "b1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}], "+", 
     RowBox[{"2", " ", "a0", " ", "A1", " ", "b1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}], "+", 
     RowBox[{"2", " ", "a0", " ", "a1", " ", "B1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}]}], ")"}], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a1", " ", "A1", " ", 
      "b1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", 
      SuperscriptBox["a1", "2"], " ", "B1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
      SuperscriptBox["p", "2"]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
      SuperscriptBox["r", "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Cot", "[", "\[Xi]", "]"}], "2"], " ", 
   RowBox[{"Csc", "[", "\[Xi]", "]"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"A0", " ", 
      SuperscriptBox["b1", "2"], " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}], "+", 
     RowBox[{"2", " ", "a0", " ", "b1", " ", "B1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "A1", " ", 
      SuperscriptBox["b1", "2"], " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "a1", " ", "b1", " ", "B1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}], "+", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "A1", " ", 
      SuperscriptBox["p", "2"]}], "-", 
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "A1", " ", 
      SuperscriptBox["r", "2"]}]}], ")"}], " ", 
   RowBox[{"Cot", "[", "\[Xi]", "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", 
      SuperscriptBox["b1", "2"], " ", "B1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}], "+", 
     RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
      SuperscriptBox["p", "2"]}], "-", 
     RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
      SuperscriptBox["r", "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"Csc", "[", "\[Xi]", "]"}], "3"]}]}]], "Output",
 CellChangeTimes->{3.8454322451804147`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"42075a6e-4a44-4273-8b2a-ce4b8e69d1d1"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.845408363684316*^9, 
  3.845408407477335*^9}},ExpressionUUID->"2fc9fb69-46bb-43b6-a11f-\
410e2fc290c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["a0", "2"]}], " ", "A0", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a0", " ", "A0", " ", "a1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["a0", "2"], " ", "A1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"A0", " ", 
       SuperscriptBox["a1", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "+", 
      RowBox[{"2", " ", "a0", " ", "a1", " ", "A1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      SuperscriptBox["a1", "2"], " ", "A1", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}], " ", "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a0", " ", "A0", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["a0", "2"], " ", "B1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "A0", " ", "a1", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "+", 
      RowBox[{"2", " ", "a0", " ", "A1", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "+", 
      RowBox[{"2", " ", "a0", " ", "a1", " ", "B1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}]}], "\[Equal]", "0"}], " ", "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a1", " ", "A1", " ", 
       "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["a1", "2"], " ", "B1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
       SuperscriptBox["p", "2"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
       SuperscriptBox["r", "2"]}]}], "\[Equal]", "0"}], " ", "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"A0", " ", 
       SuperscriptBox["b1", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "+", 
      RowBox[{"2", " ", "a0", " ", "b1", " ", "B1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}]}], "\[Equal]", "0"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "A1", " ", 
       SuperscriptBox["b1", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a1", " ", "b1", " ", "B1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "A1", " ", 
       SuperscriptBox["p", "2"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "A1", " ", 
       SuperscriptBox["r", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       SuperscriptBox["b1", "2"], " ", "B1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
       SuperscriptBox["p", "2"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "B1", " ", 
       SuperscriptBox["r", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "a0"}], " ", 
      SuperscriptBox["A0", "2"], " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["A0", "2"], " ", "a1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a0", " ", "A0", " ", "A1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "A0", " ", "a1", " ", "A1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"a0", " ", 
       SuperscriptBox["A1", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"a1", " ", 
      SuperscriptBox["A1", "2"], " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "\[Equal]", "0"}], "&&", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["A0", "2"], " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a0", " ", "A0", " ", "B1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}]}], "\[Equal]", "0"}], "&&", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "A0", " ", "A1", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"2", " ", "A0", " ", "a1", " ", "B1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"2", " ", "a0", " ", "A1", " ", "B1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       SuperscriptBox["A1", "2"], " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a1", " ", "A1", " ", "B1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
       SuperscriptBox["p", "2"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
       SuperscriptBox["r", "2"]}]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "A0", " ", "b1", " ", "B1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"a0", " ", 
       SuperscriptBox["B1", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "A1", " ", "b1", " ", 
       "B1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "a1", " ", 
       SuperscriptBox["B1", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a1", " ", 
       SuperscriptBox["p", "2"]}], "-", 
      RowBox[{"2", " ", "\[ImaginaryI]", " ", "a1", " ", 
       SuperscriptBox["r", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "b1", " ", 
       SuperscriptBox["B1", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
       SuperscriptBox["p", "2"]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "b1", " ", 
       SuperscriptBox["r", "2"]}]}], "\[Equal]", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a0", ",", "a1", ",", "b1", ",", "A0", ",", "A1", ",", "B1"}], 
    "}"}], ",", 
   RowBox[{"MaxExtraConditions", "\[Rule]", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8454327851389165`*^9, 3.845433211544097*^9}, 
   3.845433331367509*^9, {3.8454333661354628`*^9, 3.845433374152388*^9}, {
   3.845433492386857*^9, 3.845433615811142*^9}, 3.8455655805683174`*^9, {
   3.8474661805466614`*^9, 3.847466198368298*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"ec3f2250-60e6-4130-b80a-18adcefd242b"],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   46,12,28981363816223930761,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.845433027770327*^9, 3.8454332138297253`*^9, {3.845433318576024*^9, 
   3.8454333334608107`*^9}, 3.8454333762528095`*^9, {3.8454334951747212`*^9, 
   3.845433568252127*^9}, {3.84543360234379*^9, 3.8454336184852033`*^9}, 
   3.8455655822833705`*^9, 3.8474661993990355`*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"569808e5-58df-48ab-a515-4271d6c6dd53"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tanh method", "Section",
 CellChangeTimes->{
  3.847487469879459*^9},ExpressionUUID->"8f921653-f8ca-4d0c-905e-\
cda0437f2ebc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"U", "[", "Y_", "]"}], "=", 
  RowBox[{"a0", "+", 
   RowBox[{"a1", " ", "Y"}]}]}]], "Input",
 CellChangeTimes->{{3.845473478444312*^9, 3.8454734784634247`*^9}, {
   3.845473689332799*^9, 3.8454737578286734`*^9}, {3.8454738238955956`*^9, 
   3.845473830750654*^9}, {3.8455526817622585`*^9, 3.845552719645241*^9}, {
   3.845552752276373*^9, 3.845552756775402*^9}, 3.8456420452629876`*^9, {
   3.8474622084497557`*^9, 3.847462212943139*^9}, 3.8474652242796793`*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"b00a09fd-53fe-4996-bf6d-37880b5c1e80"],

Cell[BoxData[
 RowBox[{"a0", "+", 
  RowBox[{"a1", " ", "Y"}]}]], "Output",
 CellChangeTimes->{3.8454738331381454`*^9, 3.8455527585237546`*^9, 
  3.8456420469939475`*^9, 3.8474622145170364`*^9, 3.847465225180154*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"a14828e8-304a-4f0a-9103-1239e7037308"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"V", "[", "Y_", "]"}], "=", 
  RowBox[{"b0", "+", 
   RowBox[{"b1", " ", "Y"}], " ", "+", 
   RowBox[{"b2", " ", 
    SuperscriptBox["Y", "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.845473843598138*^9, 3.8454738502051077`*^9}, {
   3.8455527624592915`*^9, 3.845552778255383*^9}, 3.847465230094657*^9, {
   3.847465943260643*^9, 3.8474659473978214`*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"620de2c9-bc01-48d4-b661-201d1d1f32cd"],

Cell[BoxData[
 RowBox[{"b0", "+", 
  RowBox[{"b1", " ", "Y"}], "+", 
  RowBox[{"b2", " ", 
   SuperscriptBox["Y", "2"]}]}]], "Output",
 CellChangeTimes->{3.845473855213126*^9, 3.845552784063661*^9, 
  3.845642049474785*^9, 3.847462221136942*^9, 3.8474652309216638`*^9, 
  3.8474659491407795`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"3114bde7-2020-4a0d-a1f5-bc8acc4a8aab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq1", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Alpha]", "2"], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Beta]", "2"], "-", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["Y", "2"]}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "Y", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"U", "[", "Y", "]"}], ",", "Y"}], "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["Y", "2"]}], ")"}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"U", "[", "Y", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Y", ",", "2"}], "}"}]}], "]"}]}]}], " ", ")"}]}], "-", 
   RowBox[{
    SuperscriptBox["g", "2"], " ", 
    SuperscriptBox["l", "2"], 
    RowBox[{"U", "[", "Y", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"V", "[", "Y", "]"}], "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.8454738585794535`*^9, 3.8454739125307274`*^9}, {
  3.845552830807352*^9, 3.845552935152233*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"3ea4b716-6ebf-4503-a213-3fcdcac07276"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"a0", "+", 
      RowBox[{"a1", " ", "Y"}]}], ")"}]}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"b0", "+", 
      RowBox[{"b1", " ", "Y"}], "+", 
      RowBox[{"b2", " ", 
       SuperscriptBox["Y", "2"]}]}], ")"}], "2"]}], "-", 
  RowBox[{"2", " ", "a1", " ", "Y", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox["Y", "2"]}], ")"}], " ", 
   SuperscriptBox["\[Alpha]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[Beta]", "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.845473913432008*^9, 3.8455529504369965`*^9, 
  3.845642055108919*^9, 3.847462473149093*^9, 3.84746523321293*^9, 
  3.847465952478337*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"f2afa0ba-e197-477b-8849-68d89b045cf2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq11", "=", 
  RowBox[{"Expand", "[", "Eq1", "]"}]}]], "Input",
 CellChangeTimes->{{3.845473970050107*^9, 3.845473988938175*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"abb6bc3a-69a0-4ebd-8521-2f78077fe342"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "a0"}], " ", 
   SuperscriptBox["b0", "2"]}], "-", 
  RowBox[{"a1", " ", 
   SuperscriptBox["b0", "2"], " ", "Y"}], "-", 
  RowBox[{"2", " ", "a0", " ", "b0", " ", "b1", " ", "Y"}], "-", 
  RowBox[{"2", " ", "a1", " ", "b0", " ", "b1", " ", 
   SuperscriptBox["Y", "2"]}], "-", 
  RowBox[{"a0", " ", 
   SuperscriptBox["b1", "2"], " ", 
   SuperscriptBox["Y", "2"]}], "-", 
  RowBox[{"2", " ", "a0", " ", "b0", " ", "b2", " ", 
   SuperscriptBox["Y", "2"]}], "-", 
  RowBox[{"a1", " ", 
   SuperscriptBox["b1", "2"], " ", 
   SuperscriptBox["Y", "3"]}], "-", 
  RowBox[{"2", " ", "a1", " ", "b0", " ", "b2", " ", 
   SuperscriptBox["Y", "3"]}], "-", 
  RowBox[{"2", " ", "a0", " ", "b1", " ", "b2", " ", 
   SuperscriptBox["Y", "3"]}], "-", 
  RowBox[{"2", " ", "a1", " ", "b1", " ", "b2", " ", 
   SuperscriptBox["Y", "4"]}], "-", 
  RowBox[{"a0", " ", 
   SuperscriptBox["b2", "2"], " ", 
   SuperscriptBox["Y", "4"]}], "-", 
  RowBox[{"a1", " ", 
   SuperscriptBox["b2", "2"], " ", 
   SuperscriptBox["Y", "5"]}], "+", 
  RowBox[{"2", " ", "a1", " ", "Y", " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "-", 
  RowBox[{"2", " ", "a1", " ", 
   SuperscriptBox["Y", "3"], " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "-", 
  RowBox[{"2", " ", "a1", " ", "Y", " ", 
   SuperscriptBox["\[Alpha]", "2"], " ", 
   SuperscriptBox["\[Beta]", "2"]}], "+", 
  RowBox[{"2", " ", "a1", " ", 
   SuperscriptBox["Y", "3"], " ", 
   SuperscriptBox["\[Alpha]", "2"], " ", 
   SuperscriptBox["\[Beta]", "2"]}]}]], "Output",
 CellChangeTimes->{{3.8454739789172792`*^9, 3.845473989862217*^9}, 
   3.8455529624915123`*^9, 3.8456420589494505`*^9, 3.8474625213715577`*^9, 
   3.8474652353633766`*^9, 3.8474659569216175`*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"c5369862-a59a-40b8-908c-dbf658972556"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"Eq11", ",", 
   RowBox[{"{", 
    RowBox[{"Y", ",", 
     SuperscriptBox["Y", "2"], ",", 
     SuperscriptBox["Y", "3"], ",", 
     SuperscriptBox["Y", "4"], ",", 
     SuperscriptBox["Y", "5"], ",", 
     SuperscriptBox["Y", "6"], ",", 
     SuperscriptBox["Y", "7"], ",", 
     SuperscriptBox["Y", "8"], ",", 
     SuperscriptBox["Y", "9"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8454740157111654`*^9, 3.845474065685133*^9}, {
  3.845552970759233*^9, 3.8455530300368795`*^9}, {3.845553098469663*^9, 
  3.845553114741994*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"b93cee57-a1e5-40a9-ae9c-10c2d2a6626c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "a0"}], " ", 
   SuperscriptBox["b0", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "a1", " ", "b0", " ", "b1"}], "-", 
     RowBox[{"a0", " ", 
      SuperscriptBox["b1", "2"]}], "-", 
     RowBox[{"2", " ", "a0", " ", "b0", " ", "b2"}]}], ")"}], " ", 
   SuperscriptBox["Y", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "a1", " ", "b1", " ", "b2"}], "-", 
     RowBox[{"a0", " ", 
      SuperscriptBox["b2", "2"]}]}], ")"}], " ", 
   SuperscriptBox["Y", "4"]}], "-", 
  RowBox[{"a1", " ", 
   SuperscriptBox["b2", "2"], " ", 
   SuperscriptBox["Y", "5"]}], "+", 
  RowBox[{"Y", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "a1"}], " ", 
      SuperscriptBox["b0", "2"]}], "-", 
     RowBox[{"2", " ", "a0", " ", "b0", " ", "b1"}], "+", 
     RowBox[{"2", " ", "a1", " ", 
      SuperscriptBox["\[Alpha]", "2"]}], "-", 
     RowBox[{"2", " ", "a1", " ", 
      SuperscriptBox["\[Alpha]", "2"], " ", 
      SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["Y", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "a1"}], " ", 
      SuperscriptBox["b1", "2"]}], "-", 
     RowBox[{"2", " ", "a1", " ", "b0", " ", "b2"}], "-", 
     RowBox[{"2", " ", "a0", " ", "b1", " ", "b2"}], "-", 
     RowBox[{"2", " ", "a1", " ", 
      SuperscriptBox["\[Alpha]", "2"]}], "+", 
     RowBox[{"2", " ", "a1", " ", 
      SuperscriptBox["\[Alpha]", "2"], " ", 
      SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.8454740673844814`*^9, 3.8455530317057104`*^9, {3.8455531026261272`*^9, 
   3.845553115492549*^9}, 3.845642063080249*^9, 3.8474625246256657`*^9, 
   3.8474652378542643`*^9, 3.847465960028816*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"d4f01591-4f73-4e2f-9f4e-d06d3ce2fea0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq2", "=", 
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Alpha]", "2"], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Beta]", "2"], "-", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      SuperscriptBox["Y", "2"]}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], "Y", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"V", "[", "Y", "]"}], ",", "Y"}], "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         SuperscriptBox["Y", "2"]}], ")"}], 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"V", "[", "Y", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Y", ",", "2"}], "}"}]}], "]"}]}]}], " ", ")"}]}], "-", 
   RowBox[{
    SuperscriptBox["g", "2"], " ", 
    SuperscriptBox["k", "2"], 
    RowBox[{"V", "[", "Y", "]"}], " ", 
    SuperscriptBox[
     RowBox[{"U", "[", "Y", "]"}], "2"]}]}]}]], "Input",
 CellChangeTimes->{{3.845473928715164*^9, 3.8454739390046663`*^9}, {
  3.8455531326602383`*^9, 3.8455531610239706`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"fe5d4a53-075c-4aeb-88a4-03027647fd64"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "4"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"a0", "+", 
      RowBox[{"a1", " ", "Y"}]}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{"b0", "+", 
     RowBox[{"b1", " ", "Y"}], "+", 
     RowBox[{"b2", " ", 
      SuperscriptBox["Y", "2"]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "-", 
     SuperscriptBox["Y", "2"]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "Y", " ", 
      RowBox[{"(", 
       RowBox[{"b1", "+", 
        RowBox[{"2", " ", "b2", " ", "Y"}]}], ")"}]}], "+", 
     RowBox[{"2", " ", "b2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["Y", "2"]}], ")"}]}]}], ")"}], " ", 
   SuperscriptBox["\[Alpha]", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["\[Beta]", "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8454739427681923`*^9, 3.8455531630525947`*^9, 
  3.8456421165733604`*^9, 3.847462573380161*^9, 3.847465252382885*^9, 
  3.8474659705984807`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"06739559-9d78-4184-9eaf-d53c40572521"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eq22", "=", 
  RowBox[{"Expand", "[", "Eq2", "]"}]}]], "Input",
 CellChangeTimes->{{3.845473951112469*^9, 3.8454739533811955`*^9}, {
  3.8454739933873863`*^9, 3.8454740020468454`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"9bdc1c6d-233d-48f1-8601-4f5b5e629df6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "4"}], " ", 
   SuperscriptBox["a0", "2"], " ", "b0"}], "-", 
  RowBox[{"8", " ", "a0", " ", "a1", " ", "b0", " ", "Y"}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox["a0", "2"], " ", "b1", " ", "Y"}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox["a1", "2"], " ", "b0", " ", 
   SuperscriptBox["Y", "2"]}], "-", 
  RowBox[{"8", " ", "a0", " ", "a1", " ", "b1", " ", 
   SuperscriptBox["Y", "2"]}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox["a0", "2"], " ", "b2", " ", 
   SuperscriptBox["Y", "2"]}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox["a1", "2"], " ", "b1", " ", 
   SuperscriptBox["Y", "3"]}], "-", 
  RowBox[{"8", " ", "a0", " ", "a1", " ", "b2", " ", 
   SuperscriptBox["Y", "3"]}], "-", 
  RowBox[{"4", " ", 
   SuperscriptBox["a1", "2"], " ", "b2", " ", 
   SuperscriptBox["Y", "4"]}], "-", 
  RowBox[{"2", " ", "b2", " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "+", 
  RowBox[{"2", " ", "b1", " ", "Y", " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "+", 
  RowBox[{"8", " ", "b2", " ", 
   SuperscriptBox["Y", "2"], " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "-", 
  RowBox[{"2", " ", "b1", " ", 
   SuperscriptBox["Y", "3"], " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "-", 
  RowBox[{"6", " ", "b2", " ", 
   SuperscriptBox["Y", "4"], " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "+", 
  RowBox[{"2", " ", "b2", " ", 
   SuperscriptBox["\[Alpha]", "2"], " ", 
   SuperscriptBox["\[Beta]", "2"]}], "-", 
  RowBox[{"2", " ", "b1", " ", "Y", " ", 
   SuperscriptBox["\[Alpha]", "2"], " ", 
   SuperscriptBox["\[Beta]", "2"]}], "-", 
  RowBox[{"8", " ", "b2", " ", 
   SuperscriptBox["Y", "2"], " ", 
   SuperscriptBox["\[Alpha]", "2"], " ", 
   SuperscriptBox["\[Beta]", "2"]}], "+", 
  RowBox[{"2", " ", "b1", " ", 
   SuperscriptBox["Y", "3"], " ", 
   SuperscriptBox["\[Alpha]", "2"], " ", 
   SuperscriptBox["\[Beta]", "2"]}], "+", 
  RowBox[{"6", " ", "b2", " ", 
   SuperscriptBox["Y", "4"], " ", 
   SuperscriptBox["\[Alpha]", "2"], " ", 
   SuperscriptBox["\[Beta]", "2"]}]}]], "Output",
 CellChangeTimes->{3.84547400256697*^9, 3.8455531844314957`*^9, 
  3.845642119258804*^9, 3.8474625774549103`*^9, 3.847465255906007*^9, 
  3.8474659737621775`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"36cb24ee-87f1-4802-b540-de743beeb5ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"Eq22", ",", 
   RowBox[{"{", 
    RowBox[{"Y", ",", 
     SuperscriptBox["Y", "2"], ",", 
     SuperscriptBox["Y", "3"], ",", 
     SuperscriptBox["Y", "4"], ",", 
     SuperscriptBox["Y", "5"], ",", 
     SuperscriptBox["Y", "6"], ",", 
     SuperscriptBox["Y", "7"], ",", 
     SuperscriptBox["Y", "8"], ",", 
     SuperscriptBox["Y", "9"]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.84547409326976*^9, 3.845474094120405*^9}, 
   3.8455532023625965`*^9},
 CellLabel->"In[44]:=",ExpressionUUID->"8dfa1a02-d3d9-4bea-909b-26bf6a60cd37"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "4"}], " ", 
   SuperscriptBox["a0", "2"], " ", "b0"}], "-", 
  RowBox[{"2", " ", "b2", " ", 
   SuperscriptBox["\[Alpha]", "2"]}], "+", 
  RowBox[{"2", " ", "b2", " ", 
   SuperscriptBox["\[Alpha]", "2"], " ", 
   SuperscriptBox["\[Beta]", "2"]}], "+", 
  RowBox[{"Y", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "8"}], " ", "a0", " ", "a1", " ", "b0"}], "-", 
     RowBox[{"4", " ", 
      SuperscriptBox["a0", "2"], " ", "b1"}], "+", 
     RowBox[{"2", " ", "b1", " ", 
      SuperscriptBox["\[Alpha]", "2"]}], "-", 
     RowBox[{"2", " ", "b1", " ", 
      SuperscriptBox["\[Alpha]", "2"], " ", 
      SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["Y", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      SuperscriptBox["a1", "2"], " ", "b1"}], "-", 
     RowBox[{"8", " ", "a0", " ", "a1", " ", "b2"}], "-", 
     RowBox[{"2", " ", "b1", " ", 
      SuperscriptBox["\[Alpha]", "2"]}], "+", 
     RowBox[{"2", " ", "b1", " ", 
      SuperscriptBox["\[Alpha]", "2"], " ", 
      SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["Y", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      SuperscriptBox["a1", "2"], " ", "b0"}], "-", 
     RowBox[{"8", " ", "a0", " ", "a1", " ", "b1"}], "-", 
     RowBox[{"4", " ", 
      SuperscriptBox["a0", "2"], " ", "b2"}], "+", 
     RowBox[{"8", " ", "b2", " ", 
      SuperscriptBox["\[Alpha]", "2"]}], "-", 
     RowBox[{"8", " ", "b2", " ", 
      SuperscriptBox["\[Alpha]", "2"], " ", 
      SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["Y", "4"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "4"}], " ", 
      SuperscriptBox["a1", "2"], " ", "b2"}], "-", 
     RowBox[{"6", " ", "b2", " ", 
      SuperscriptBox["\[Alpha]", "2"]}], "+", 
     RowBox[{"6", " ", "b2", " ", 
      SuperscriptBox["\[Alpha]", "2"], " ", 
      SuperscriptBox["\[Beta]", "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8454741101444945`*^9, 3.8455532068633614`*^9, 
  3.845642122044269*^9, 3.847462580352886*^9, 3.8474652586432467`*^9, 
  3.84746597574045*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"a87599f1-d53e-497e-86de-c5407d23953e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", "1"}], ";", 
  RowBox[{"l", "=", "1"}], ";", 
  RowBox[{"k", "=", "2"}], ";"}]], "Input",
 CellChangeTimes->{{3.845558485871371*^9, 3.8455585060879536`*^9}, 
   3.8474625870635643`*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"334f97d4-25ac-4307-a39e-fd14a29fe2a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "a0"}], " ", 
       SuperscriptBox["b0", "2"]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "a1", " ", "b0", " ", "b1"}], "-", 
       RowBox[{"a0", " ", 
        SuperscriptBox["b1", "2"]}], "-", 
       RowBox[{"2", " ", "a0", " ", "b0", " ", "b2"}]}], "\[Equal]", "0"}], 
     ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "a1", " ", "b1", " ", "b2"}], "-", 
       RowBox[{"a0", " ", 
        SuperscriptBox["b2", "2"]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "a1"}], " ", 
       SuperscriptBox["b2", "2"]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "a1"}], " ", 
        SuperscriptBox["b0", "2"]}], "-", 
       RowBox[{"2", " ", "a0", " ", "b0", " ", "b1"}], "+", 
       RowBox[{"2", " ", "a1", " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "-", 
       RowBox[{"2", " ", "a1", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "a1"}], " ", 
        SuperscriptBox["b1", "2"]}], "-", 
       RowBox[{"2", " ", "a1", " ", "b0", " ", "b2"}], "-", 
       RowBox[{"2", " ", "a0", " ", "b1", " ", "b2"}], "-", 
       RowBox[{"2", " ", "a1", " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "+", 
       RowBox[{"2", " ", "a1", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["a0", "2"], " ", "b0"}], "-", 
       RowBox[{"2", " ", "b2", " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "+", 
       RowBox[{"2", " ", "b2", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "a0", " ", "a1", " ", "b0"}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["a0", "2"], " ", "b1"}], "+", 
       RowBox[{"2", " ", "b1", " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "-", 
       RowBox[{"2", " ", "b1", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["a1", "2"], " ", "b1"}], "-", 
       RowBox[{"8", " ", "a0", " ", "a1", " ", "b2"}], "-", 
       RowBox[{"2", " ", "b1", " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "+", 
       RowBox[{"2", " ", "b1", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["a1", "2"], " ", "b0"}], "-", 
       RowBox[{"8", " ", "a0", " ", "a1", " ", "b1"}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["a0", "2"], " ", "b2"}], "+", 
       RowBox[{"8", " ", "b2", " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "-", 
       RowBox[{"8", " ", "b2", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["a1", "2"], " ", "b2"}], "-", 
       RowBox[{"6", " ", "b2", " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "+", 
       RowBox[{"6", " ", "b2", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a0", ",", "a1", ",", "b0", ",", "b1"}], "}"}], ",", 
   RowBox[{"MaxExtraConditions", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.847465994319029*^9, 3.8474661168653927`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"946053bc-dbf7-4566-8c59-6ffa026bfde3"],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   45,11,28981363816223930761,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8474661182417974`*^9},
 CellLabel->
  "During evaluation of \
In[45]:=",ExpressionUUID->"8a90bb8e-b041-418c-a93d-2cbdc813d762"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "\[NotEqual]", "1"}]}], ")"}], "||", 
         RowBox[{"\[Beta]", "\[Equal]", 
          RowBox[{"-", "1"}]}], "||", 
         RowBox[{"\[Beta]", "\[Equal]", "1"}]}]}], "]"}]}], ",", 
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "\[NotEqual]", "1"}]}], ")"}], "||", 
         RowBox[{"\[Beta]", "\[Equal]", 
          RowBox[{"-", "1"}]}], "||", 
         RowBox[{"\[Beta]", "\[Equal]", "1"}]}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "\[NotEqual]", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", 
            RowBox[{"-", "1"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", "1"}]}], ")"}]}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "\[NotEqual]", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", 
            RowBox[{"-", "1"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", "1"}]}], ")"}]}]}], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"b2", "\[Equal]", "0"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Alpha]"}], "+", 
           RowBox[{"\[Alpha]", " ", 
            SuperscriptBox["\[Beta]", "2"]}]}], "\[NotEqual]", "0"}]}]}], 
       "]"}]}], ",", 
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"b2", "\[Equal]", "0"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Alpha]"}], "+", 
           RowBox[{"\[Alpha]", " ", 
            SuperscriptBox["\[Beta]", "2"]}]}], "\[NotEqual]", "0"}]}]}], 
       "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"b2", "\[Equal]", "0"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Alpha]"}], "+", 
           RowBox[{"\[Alpha]", " ", 
            SuperscriptBox["\[Beta]", "2"]}]}], "\[NotEqual]", "0"}]}]}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "\[NotEqual]", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "b2"}], "+", 
             RowBox[{"b2", " ", 
              SuperscriptBox["\[Beta]", "2"]}]}], "\[NotEqual]", "0"}]}], 
          ")"}], "||", 
         RowBox[{"\[Beta]", "\[Equal]", 
          RowBox[{"-", "1"}]}], "||", 
         RowBox[{"\[Beta]", "\[Equal]", "1"}]}]}], "]"}]}], ",", 
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "\[NotEqual]", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "b2"}], "+", 
             RowBox[{"b2", " ", 
              SuperscriptBox["\[Beta]", "2"]}]}], "\[NotEqual]", "0"}]}], 
          ")"}], "||", 
         RowBox[{"\[Beta]", "\[Equal]", 
          RowBox[{"-", "1"}]}], "||", 
         RowBox[{"\[Beta]", "\[Equal]", "1"}]}]}], "]"}]}], ",", 
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "\[NotEqual]", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "b2"}], "+", 
             RowBox[{"b2", " ", 
              SuperscriptBox["\[Beta]", "2"]}]}], "\[NotEqual]", "0"}]}], 
          ")"}], "||", 
         RowBox[{"\[Beta]", "\[Equal]", 
          RowBox[{"-", "1"}]}], "||", 
         RowBox[{"\[Beta]", "\[Equal]", "1"}]}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "\[NotEqual]", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", 
            RowBox[{"-", "1"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", "1"}]}], ")"}]}]}], "]"}]}], ",", 
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "\[NotEqual]", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", 
            RowBox[{"-", "1"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", "1"}]}], ")"}]}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "\[NotEqual]", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", 
            RowBox[{"-", "1"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", "1"}]}], ")"}]}]}], "]"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "\[NotEqual]", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", 
            RowBox[{"-", "1"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Alpha]"}], "+", 
             RowBox[{"\[Alpha]", " ", 
              SuperscriptBox["\[Beta]", "2"]}]}], "\[NotEqual]", "0"}]}], 
          ")"}]}]}], "]"}]}], ",", 
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "\[NotEqual]", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", 
            RowBox[{"-", "1"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Alpha]"}], "+", 
             RowBox[{"\[Alpha]", " ", 
              SuperscriptBox["\[Beta]", "2"]}]}], "\[NotEqual]", "0"}]}], 
          ")"}]}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Alpha]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "\[NotEqual]", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", 
            RowBox[{"-", "1"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{"\[Beta]", "\[Equal]", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b2", "\[Equal]", "0"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "\[Alpha]"}], "+", 
             RowBox[{"\[Alpha]", " ", 
              SuperscriptBox["\[Beta]", "2"]}]}], "\[NotEqual]", "0"}]}], 
          ")"}]}]}], "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.847466118251733*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"76ce18fe-f031-4e83-ba1e-15997c2dee5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "a0"}], " ", 
       SuperscriptBox["b0", "2"]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "a1"}], " ", 
        SuperscriptBox["b0", "2"]}], "-", 
       RowBox[{"2", " ", "a0", " ", "b0", " ", "b1"}], "+", 
       RowBox[{"2", " ", "a1", " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "-", 
       RowBox[{"2", " ", "a1", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "a1", " ", "b0", " ", "b1"}], "-", 
       RowBox[{"a0", " ", 
        SuperscriptBox["b1", "2"]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "a1"}], " ", 
        SuperscriptBox["b1", "2"]}], "-", 
       RowBox[{"2", " ", "a1", " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "+", 
       RowBox[{"2", " ", "a1", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SuperscriptBox["a0", "2"], " ", "b0"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["a1", "2"], " ", "b0"}], "-", 
       RowBox[{"8", " ", "a0", " ", "a1", " ", "b1"}]}], "\[Equal]", "0"}], 
     ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "8"}], " ", "a0", " ", "a1", " ", "b0"}], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["a0", "2"], " ", "b1"}], "+", 
       RowBox[{"2", " ", "b1", " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "-", 
       RowBox[{"2", " ", "b1", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["a1", "2"], " ", "b1"}], "-", 
       RowBox[{"2", " ", "b1", " ", 
        SuperscriptBox["\[Alpha]", "2"]}], "+", 
       RowBox[{"2", " ", "b1", " ", 
        SuperscriptBox["\[Alpha]", "2"], " ", 
        SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "a0", ",", "a1", ",", "b0", ",", "b1", ",", "\[Alpha]", ",", "\[Beta]"}], 
    "}"}], ",", 
   RowBox[{"MaxExtraConditions", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.847465268630663*^9, 3.8474654421159143`*^9}, {
  3.847465893510535*^9, 3.847465897916258*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"2b616d00-2539-4515-b7eb-a076ccaed566"],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   37,10,28981363816223930761,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.847465373826239*^9, 3.847465442994278*^9}, 
   3.8474659001871796`*^9},
 CellLabel->
  "During evaluation of \
In[37]:=",ExpressionUUID->"ca023133-f823-41d1-8bdc-80daa3cbe488"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"1", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"1", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"a1", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"a1", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"a1", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"a1", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"a1", "\[NotEqual]", "0"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"1", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"1", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          SqrtBox[
           SuperscriptBox["\[Alpha]", "2"]], "\[Alpha]"]}], ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        FractionBox[
         SqrtBox[
          SuperscriptBox["\[Alpha]", "2"]], "\[Alpha]"], ",", 
        RowBox[{
         RowBox[{"a0", "\[NotEqual]", "0"}], "&&", 
         RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"a0", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"a0", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"a0", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"a0", "\[NotEqual]", "0"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"b0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"b1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"1", ",", 
        RowBox[{"\[Alpha]", "\[NotEqual]", "0"}]}], "]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8474653738295784`*^9, 3.8474654430313015`*^9}, 
   3.8474659002281084`*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"738c3f67-81ab-41c7-aeef-7b692d6eff4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "a0"}], " ", 
       SuperscriptBox["b0", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"2", " ", "a2", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"2", " ", "a2", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "a2", " ", "b1", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"a1", " ", 
       SuperscriptBox["b2", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a2", " ", "b0", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "b1", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "b2", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}]}], "\[Equal]", "0"}], "&&", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "a2"}], " ", 
       SuperscriptBox["b2", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a2", " ", "b1", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "b2", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"a0", " ", 
       SuperscriptBox["b3", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "a2", " ", "b2", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"a1", " ", 
       SuperscriptBox["b3", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "a2"}], " ", 
      SuperscriptBox["b3", "2"], " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "a1"}], " ", 
       SuperscriptBox["b0", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "b0", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"2", " ", "a1", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "a2", " ", "b0", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"a1", " ", 
       SuperscriptBox["b1", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "b0", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "b1", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "b0", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"2", " ", "a1", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "a2"}], " ", 
       SuperscriptBox["b0", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "b0", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"a0", " ", 
       SuperscriptBox["b1", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "b0", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"8", " ", "a2", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "-", 
      RowBox[{"8", " ", "a2", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "a2"}], " ", 
       SuperscriptBox["b1", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a2", " ", "b0", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "b1", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"a0", " ", 
       SuperscriptBox["b2", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "b0", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "b1", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"6", " ", "a2", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"6", " ", "a2", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a0", "2"]}], " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "b2", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"2", " ", "b2", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a2", "2"]}], " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "a2", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["a2", "2"]}], " ", "b3", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a1", "2"]}], " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a2", " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a1", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["a0", "2"], " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "+", 
      RowBox[{"8", " ", "b2", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "-", 
      RowBox[{"8", " ", "b2", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a2", "2"]}], " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "a2", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["a1", "2"], " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a2", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a1", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"6", " ", "b2", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"6", " ", "b2", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], "&&", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "a1", " ", "a2", " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["a1", "2"], " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a2", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a1", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["a0", "2"], " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "b1", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"18", " ", "b3", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"2", " ", "b1", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}], "-", 
      RowBox[{"18", " ", "b3", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "a0", " ", "a1", " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["a0", "2"], " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "+", 
      RowBox[{"2", " ", "b1", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "-", 
      RowBox[{"6", " ", "b3", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "-", 
      RowBox[{"2", " ", "b1", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}], "+", 
      RowBox[{"6", " ", "b3", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a2", "2"]}], " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "a2", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["a1", "2"], " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a2", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"12", " ", "b3", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"12", " ", "b3", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}]}], " ", ",", 
   RowBox[{"{", 
    RowBox[{
    "a0", ",", "a1", ",", "a2", " ", ",", "a3", ",", "b0", ",", "b1", ",", 
     "b2", ",", "b3"}], "}"}], ",", 
   RowBox[{"MaxExtraConditions", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8456421362818165`*^9, 3.8456423089927125`*^9}, {
  3.8456423472110877`*^9, 3.8456424581370764`*^9}, {3.8474626490622144`*^9, 
  3.8474626498400164`*^9}, {3.8474632929432507`*^9, 3.8474632971792164`*^9}, {
  3.8474651444553256`*^9, 3.8474651631475487`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"12fe50e9-2bad-44fc-a5b6-52671b213bc8"],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   20,4,28981363816223930761,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.847465165188779*^9},
 CellLabel->
  "During evaluation of \
In[20]:=",ExpressionUUID->"9a085204-894c-495b-bd63-c73e39ec708d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8456423207668257`*^9, 3.845642459690898*^9, 
  3.847462598513228*^9, 3.8474626528230467`*^9, 3.8474633001006346`*^9, 
  3.8474651651933565`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"780c93c3-4cd5-4a2f-a954-952e42b2893f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a0", "\[Rule]", "0"}], ",", 
      RowBox[{"a1", "\[Rule]", "0"}], ",", 
      RowBox[{"a2", "\[Rule]", "0"}], ",", 
      RowBox[{"b1", "\[Rule]", "0"}], ",", 
      RowBox[{"b2", "\[Rule]", "0"}], ",", 
      RowBox[{"b3", "\[Rule]", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a1", "\[Rule]", "0"}], ",", 
      RowBox[{"a2", "\[Rule]", "0"}], ",", 
      RowBox[{"b0", "\[Rule]", "0"}], ",", 
      RowBox[{"b1", "\[Rule]", "0"}], ",", 
      RowBox[{"b2", "\[Rule]", "0"}], ",", 
      RowBox[{"b3", "\[Rule]", "0"}]}], "}"}]}], "}"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"",ExpressionUUID->"ee16ba00-86db-451f-8efe-480ac7d771b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "a0"}], " ", 
       SuperscriptBox["b0", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "-", 
      RowBox[{"2", " ", "a2", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"2", " ", "a2", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"b3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "a1", " ", "b2"}], "+", 
            RowBox[{"a0", " ", "b3"}]}], ")"}]}], "+", 
         RowBox[{"2", " ", "a3", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"b1", " ", "b2"}], "+", 
            RowBox[{"b0", " ", "b3"}]}], ")"}]}], "+", 
         RowBox[{"a2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["b2", "2"], "+", 
            RowBox[{"2", " ", "b1", " ", "b3"}]}], ")"}]}]}], ")"}]}], " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "\[Equal]", " ", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"b3", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "a2", " ", "b2"}], "+", 
         RowBox[{"a1", " ", "b3"}]}], ")"}]}], "+", 
      RowBox[{"a3", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["b2", "2"], "+", 
         RowBox[{"2", " ", "b1", " ", "b3"}]}], ")"}]}]}], "\[Equal]", "0"}], 
    "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "a3", " ", "b2"}], "+", 
      RowBox[{"a2", " ", "b3"}]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "a3"}], " ", 
      SuperscriptBox["b3", "2"], " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["l", "2"]}], "\[Equal]", "0"}], " ", "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"a1", " ", 
       SuperscriptBox["b0", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"2", " ", "a0", " ", "b0", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"2", " ", "a1", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[Beta]", "2"]}], ")"}]}], "-", 
      RowBox[{"6", " ", "a3", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[Beta]", "2"]}], ")"}]}]}], "\[Equal]", "0"}], "&&",
     " ", 
    RowBox[{
     RowBox[{
      RowBox[{"a3", " ", 
       SuperscriptBox["b0", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"2", " ", "a2", " ", "b0", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"a1", " ", 
       SuperscriptBox["b1", "2"], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"2", " ", "a1", " ", "b0", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"2", " ", "a0", " ", "b1", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"2", " ", "a0", " ", "b0", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"2", " ", "a1", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}], "+", 
      RowBox[{"18", " ", "a3", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[Beta]", "2"]}], ")"}]}]}], "\[Equal]", "0"}], "&&",
     " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "a0", " ", "b2", " ", "b3"}], "+", 
         RowBox[{"2", " ", "a2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"b1", " ", "b2"}], "+", 
            RowBox[{"b0", " ", "b3"}]}], ")"}]}], "+", 
         RowBox[{"a1", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["b2", "2"], "+", 
            RowBox[{"2", " ", "b1", " ", "b3"}]}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"a3", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["b1", "2"], " ", 
          SuperscriptBox["g", "2"], " ", 
          SuperscriptBox["l", "2"]}], "+", 
         RowBox[{"2", " ", "b0", " ", "b2", " ", 
          SuperscriptBox["g", "2"], " ", 
          SuperscriptBox["l", "2"]}], "-", 
         RowBox[{"12", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[Beta]", "2"]}], ")"}]}]}], ")"}]}]}], 
     "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "a3", " ", "b0", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "a1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"b1", " ", "b2"}], "+", 
            RowBox[{"b0", " ", "b3"}]}], ")"}]}], "+", 
         RowBox[{"a0", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["b2", "2"], "+", 
            RowBox[{"2", " ", "b1", " ", "b3"}]}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"a2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["b1", "2"], " ", 
          SuperscriptBox["g", "2"], " ", 
          SuperscriptBox["l", "2"]}], "+", 
         RowBox[{"2", " ", "b0", " ", "b2", " ", 
          SuperscriptBox["g", "2"], " ", 
          SuperscriptBox["l", "2"]}], "-", 
         RowBox[{"6", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[Beta]", "2"]}], ")"}]}]}], ")"}]}]}], 
     "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "a1", " ", "b0", " ", "b1"}], "+", 
         RowBox[{"a0", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["b1", "2"], "+", 
            RowBox[{"2", " ", "b0", " ", "b2"}]}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], "+", 
      RowBox[{"a2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["b0", "2"], " ", 
          SuperscriptBox["g", "2"], " ", 
          SuperscriptBox["l", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["\[Alpha]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[Beta]", "2"]}], ")"}]}]}], ")"}]}]}], 
     "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a0", "2"]}], " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "+", 
      RowBox[{"2", " ", "b2", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"2", " ", "b2", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a3", "2"]}], " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a2", " ", "a3", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["a2", "2"], " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "a3", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "a2", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a3", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}]}], " ", "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a3", "2"]}], " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a2", " ", "a3", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["a2", "2"], " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "a3", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a3", "2"]}], " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a2", " ", "a3", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["a3", "2"]}], " ", "b3", " ", 
      SuperscriptBox["g", "2"], " ", 
      SuperscriptBox["k", "2"]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a1", "2"]}], " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a2", " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a1", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["a0", "2"], " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "+", 
      RowBox[{"8", " ", "b2", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "-", 
      RowBox[{"8", " ", "b2", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a2", "2"]}], " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "a3", " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "a2", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a3", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["a1", "2"], " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a2", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a1", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"6", " ", "b2", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"6", " ", "b2", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], " ", "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "a1", " ", "a2", " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a3", " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["a1", "2"], " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a2", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a1", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["a0", "2"], " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "b1", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"18", " ", "b3", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"2", " ", "b1", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}], "-", 
      RowBox[{"18", " ", "b3", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "a0", " ", "a1", " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["a0", "2"], " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "+", 
      RowBox[{"2", " ", "b1", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "-", 
      RowBox[{"6", " ", "b3", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "-", 
      RowBox[{"2", " ", "b1", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}], "+", 
      RowBox[{"6", " ", "b3", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "a2", " ", "a3", " ", "b0", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["a2", "2"], " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "a3", " ", "b1", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a1", " ", "a2", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a3", " ", "b2", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{
       SuperscriptBox["a1", "2"], " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"2", " ", "a0", " ", "a2", " ", "b3", " ", 
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], "-", 
      RowBox[{"12", " ", "b3", " ", 
       SuperscriptBox["\[Alpha]", "2"]}], "+", 
      RowBox[{"12", " ", "b3", " ", 
       SuperscriptBox["\[Alpha]", "2"], " ", 
       SuperscriptBox["\[Beta]", "2"]}]}], " ", "\[Equal]", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
    "a0", ",", "a1", ",", "a2", ",", "a3", " ", ",", "b0", ",", "b1", ",", 
     "b2", ",", "b3"}], "}"}], ",", 
   RowBox[{"Method", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<UseSlicingHyperplanes\>\"", "\[Rule]", "False"}], "}"}]}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.8454741187381434`*^9, 3.845474305737502*^9}, {
   3.845553257538658*^9, 3.8455532773558445`*^9}, {3.84555337098059*^9, 
   3.845553404359568*^9}, {3.845553440616851*^9, 3.8455536316995564`*^9}, {
   3.845553669450549*^9, 3.8455537914285097`*^9}, {3.8455538223636184`*^9, 
   3.84555390447971*^9}, {3.8455539362635884`*^9, 3.8455539382190294`*^9}, {
   3.8455556579491806`*^9, 3.845555661875784*^9}, {3.8455584612197104`*^9, 
   3.845558464228733*^9}, {3.8455594763269577`*^9, 3.845559512101798*^9}, {
   3.8455596087363915`*^9, 3.8455596248189044`*^9}, {3.8455656003674107`*^9, 
   3.8455656061396914`*^9}, {3.84556572433211*^9, 3.845565736476167*^9}, {
   3.8455658193304167`*^9, 3.8455658220315313`*^9}, {3.8455658559697404`*^9, 
   3.8455658733818607`*^9}, 3.8455687624200945`*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"944232c0-af6e-41fa-ad08-4c42d1ee4aa0"],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   24,12,28968939401343944191,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.845565874340433*^9, 3.8455687632043533`*^9},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"a46a5a92-7545-40ff-b817-d649f6c44930"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8455657378085613`*^9, 3.8455658408636847`*^9, 
  3.8455658743560534`*^9, 3.8455687632356205`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"2df614a2-69fd-4489-82d2-22d071798005"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "2"}], "+", 
     RowBox[{"y", "^", "2"}]}], "\[Equal]", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", 
   RowBox[{"Method", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<UseSlicingHyperplanes\>\"", "\[Rule]", "False"}], "}"}]}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.845565713185644*^9, 
  3.845565713185644*^9}},ExpressionUUID->"770434b4-31fc-47a4-a2b4-\
ca4890d63129"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"%6", ",", 
   RowBox[{"{", 
    RowBox[{
    "a0", ",", "a1", ",", "a2", ",", "a3", ",", "b0", ",", "b1", ",", "b2", 
     ",", "b3", ",", "\[Alpha]", ",", "\[Beta]"}], "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[9]:=",ExpressionUUID->"735f7787-8510-46d1-886a-5c348ecbbc79"],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   9,6,28968939401343944191,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8455597568489075`*^9},
 CellLabel->
  "During evaluation of \
In[9]:=",ExpressionUUID->"7ad1a072-e8ae-441d-a677-23e717b081a6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a1", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{"-", "1"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", "0"}], ",", 
     RowBox[{"a2", "\[Rule]", "0"}], ",", 
     RowBox[{"a3", "\[Rule]", "0"}], ",", 
     RowBox[{"b0", "\[Rule]", "0"}], ",", 
     RowBox[{"b1", "\[Rule]", "0"}], ",", 
     RowBox[{"b2", "\[Rule]", "0"}], ",", 
     RowBox[{"b3", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Beta]", "\[Rule]", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8455597568489075`*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"70d6083e-f5e7-4ee4-8614-371c3b05a864"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bilinear method", "Section",
 CellChangeTimes->{{3.8474874900211754`*^9, 
  3.847487498152951*^9}},ExpressionUUID->"3b86efe4-139d-4dc2-9499-\
f3b1af340f43"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"F", "=", 
   RowBox[{"1", "+", 
    RowBox[{"\[Epsilon]", " ", "f1"}]}]}], ";", " ", 
  RowBox[{"G1", "=", 
   RowBox[{
    RowBox[{"\[Epsilon]", " ", "g1"}], " ", "+", " ", 
    RowBox[{
     SuperscriptBox["\[Epsilon]", "2"], " ", "g2"}]}]}], " ", ";", " ", 
  RowBox[{"G2", "=", 
   RowBox[{
    RowBox[{"\[Epsilon]", " ", "h1"}], " ", "+", " ", 
    RowBox[{
     SuperscriptBox["\[Epsilon]", "2"], " ", "h2"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Epsilon]", " ", "X"}], " ", "+", 
     RowBox[{
      SuperscriptBox["\[Epsilon]", "2"], " ", "Y"}]}], ")"}], 
   SuperscriptBox["F", 
    RowBox[{"2", " "}]]}], "-", " ", 
  RowBox[{
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", "G1", " ", 
   SuperscriptBox["G2", "2"]}]}]}], "Input",
 CellChangeTimes->{{3.84556164054996*^9, 3.8455616699651966`*^9}, {
   3.845561795626028*^9, 3.8455619161578627`*^9}, 3.8456426450750055`*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"b296da28-1634-4c3b-a866-4df983f80848"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "8"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"g1", " ", "\[Epsilon]"}], "+", 
     RowBox[{"g2", " ", 
      SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"h1", " ", "\[Epsilon]"}], "+", 
      RowBox[{"h2", " ", 
       SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"f1", " ", "\[Epsilon]"}]}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"X", " ", "\[Epsilon]"}], "+", 
     RowBox[{"Y", " ", 
      SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.845561917963676*^9, 3.8456426495887833`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"7c112290-d49b-444a-8c3e-45ca9d780b32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "8"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"g1", " ", "\[Epsilon]"}], "+", 
      RowBox[{"g2", " ", 
       SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"h1", " ", "\[Epsilon]"}], "+", 
       RowBox[{"h2", " ", 
        SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"f1", " ", "\[Epsilon]"}]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"X", " ", "\[Epsilon]"}], "+", 
      RowBox[{"Y", " ", 
       SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[16]:=",ExpressionUUID->"22c45d8b-5bc1-40fe-8c93-2af0a95d97b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"X", " ", "\[Epsilon]"}], "+", 
  RowBox[{"2", " ", "f1", " ", "X", " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "+", 
  RowBox[{"Y", " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
  RowBox[{"8", " ", "g1", " ", 
   SuperscriptBox["h1", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "+", 
  RowBox[{
   SuperscriptBox["f1", "2"], " ", "X", " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "+", 
  RowBox[{"2", " ", "f1", " ", "Y", " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "-", 
  RowBox[{"8", " ", "g2", " ", 
   SuperscriptBox["h1", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "-", 
  RowBox[{"16", " ", "g1", " ", "h1", " ", "h2", " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "+", 
  RowBox[{
   SuperscriptBox["f1", "2"], " ", "Y", " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "-", 
  RowBox[{"16", " ", "g2", " ", "h1", " ", "h2", " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "-", 
  RowBox[{"8", " ", "g1", " ", 
   SuperscriptBox["h2", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "-", 
  RowBox[{"8", " ", "g2", " ", 
   SuperscriptBox["h2", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "6"]}]}]], "Output",
 CellChangeTimes->{3.8456426596179094`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"12000e82-8340-4095-9e43-309aac6bf1d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Collect", "[", 
   RowBox[{"%", ",", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]", ",", 
      SuperscriptBox["\[Epsilon]", "2"], ",", 
      SuperscriptBox["\[Epsilon]", "3"], ",", 
      SuperscriptBox["\[Epsilon]", "4"], ",", 
      SuperscriptBox["\[Epsilon]", "5"], ",", 
      SuperscriptBox["\[Epsilon]", "6"]}], "}"}]}], "]"}], "/.", 
  RowBox[{"f2", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.8455619316802044`*^9, 3.8455619811869464`*^9}, {
  3.8455623057814074`*^9, 3.8455623329352503`*^9}, {3.8456426692232437`*^9, 
  3.8456426697545366`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"ccf5f47d-8846-4b58-8915-6c5d100ac605"],

Cell[BoxData[
 RowBox[{
  RowBox[{"X", " ", "\[Epsilon]"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "f1", " ", "X"}], "+", "Y"}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "8"}], " ", "g1", " ", 
      SuperscriptBox["h1", "2"]}], "+", 
     RowBox[{
      SuperscriptBox["f1", "2"], " ", "X"}], "+", 
     RowBox[{"2", " ", "f1", " ", "Y"}]}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "8"}], " ", "g2", " ", 
      SuperscriptBox["h1", "2"]}], "-", 
     RowBox[{"16", " ", "g1", " ", "h1", " ", "h2"}], "+", 
     RowBox[{
      SuperscriptBox["f1", "2"], " ", "Y"}]}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "16"}], " ", "g2", " ", "h1", " ", "h2"}], "-", 
     RowBox[{"8", " ", "g1", " ", 
      SuperscriptBox["h2", "2"]}]}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "-", 
  RowBox[{"8", " ", "g2", " ", 
   SuperscriptBox["h2", "2"], " ", 
   SuperscriptBox["\[Epsilon]", "6"]}]}]], "Output",
 CellChangeTimes->{
  3.8455619825491533`*^9, {3.845562316843661*^9, 3.8455623338508673`*^9}, 
   3.845642676861029*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"9c96a0b5-2693-4a86-9b00-cec1bbdbbc09"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"\[Epsilon]", " ", "W"}], "+", 
     RowBox[{
      SuperscriptBox["\[Epsilon]", "2"], " ", "P"}]}], ")"}], 
   SuperscriptBox["F", 
    RowBox[{"2", " "}]]}], "-", " ", 
  RowBox[{
   SuperscriptBox["g", "2"], " ", 
   SuperscriptBox["l", "2"], " ", 
   SuperscriptBox["G1", "2"], " ", "G2"}]}]], "Input",
 CellChangeTimes->{{3.84556204874982*^9, 3.845562070552311*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"caa3d045-d239-454a-9a68-181c72bbf5f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "8"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"g1", " ", "\[Epsilon]"}], "+", 
      RowBox[{"g2", " ", 
       SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"h1", " ", "\[Epsilon]"}], "+", 
     RowBox[{"h2", " ", 
      SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"f1", " ", "\[Epsilon]"}]}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"W", " ", "\[Epsilon]"}], "+", 
     RowBox[{"P", " ", 
      SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.845562081620849*^9, 3.8456427267041616`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"3663ec1d-fea9-4a12-9de9-74ce44205142"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "8"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"g1", " ", "\[Epsilon]"}], "+", 
       RowBox[{"g2", " ", 
        SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"h1", " ", "\[Epsilon]"}], "+", 
      RowBox[{"h2", " ", 
       SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"f1", " ", "\[Epsilon]"}]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"W", " ", "\[Epsilon]"}], "+", 
      RowBox[{"P", " ", 
       SuperscriptBox["\[Epsilon]", "2"]}]}], ")"}]}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[19]:=",ExpressionUUID->"2a7b69d9-aede-4107-ac3e-1c60521a31a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"W", " ", "\[Epsilon]"}], "+", 
  RowBox[{"P", " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "+", 
  RowBox[{"2", " ", "f1", " ", "W", " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "-", 
  RowBox[{"8", " ", 
   SuperscriptBox["g1", "2"], " ", "h1", " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "+", 
  RowBox[{"2", " ", "f1", " ", "P", " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "+", 
  RowBox[{
   SuperscriptBox["f1", "2"], " ", "W", " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "-", 
  RowBox[{"16", " ", "g1", " ", "g2", " ", "h1", " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "-", 
  RowBox[{"8", " ", 
   SuperscriptBox["g1", "2"], " ", "h2", " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "+", 
  RowBox[{
   SuperscriptBox["f1", "2"], " ", "P", " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "-", 
  RowBox[{"8", " ", 
   SuperscriptBox["g2", "2"], " ", "h1", " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "-", 
  RowBox[{"16", " ", "g1", " ", "g2", " ", "h2", " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "-", 
  RowBox[{"8", " ", 
   SuperscriptBox["g2", "2"], " ", "h2", " ", 
   SuperscriptBox["\[Epsilon]", "6"]}]}]], "Output",
 CellChangeTimes->{3.845642731748802*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"1b845ba9-10e7-42a8-8c70-bac379a87af7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Collect", "[", 
  RowBox[{"%", ",", 
   RowBox[{"{", 
    RowBox[{"\[Epsilon]", ",", 
     SuperscriptBox["\[Epsilon]", "2"], ",", 
     SuperscriptBox["\[Epsilon]", "3"], ",", 
     SuperscriptBox["\[Epsilon]", "4"], ",", 
     SuperscriptBox["\[Epsilon]", "5"], ",", 
     SuperscriptBox["\[Epsilon]", "6"]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[20]:=",ExpressionUUID->"ba62eec9-5651-4f7a-9066-c9220637bd98"],

Cell[BoxData[
 RowBox[{
  RowBox[{"W", " ", "\[Epsilon]"}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"P", "+", 
     RowBox[{"2", " ", "f1", " ", "W"}]}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "2"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "8"}], " ", 
      SuperscriptBox["g1", "2"], " ", "h1"}], "+", 
     RowBox[{"2", " ", "f1", " ", "P"}], "+", 
     RowBox[{
      SuperscriptBox["f1", "2"], " ", "W"}]}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "3"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "16"}], " ", "g1", " ", "g2", " ", "h1"}], "-", 
     RowBox[{"8", " ", 
      SuperscriptBox["g1", "2"], " ", "h2"}], "+", 
     RowBox[{
      SuperscriptBox["f1", "2"], " ", "P"}]}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "4"]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "8"}], " ", 
      SuperscriptBox["g2", "2"], " ", "h1"}], "-", 
     RowBox[{"16", " ", "g1", " ", "g2", " ", "h2"}]}], ")"}], " ", 
   SuperscriptBox["\[Epsilon]", "5"]}], "-", 
  RowBox[{"8", " ", 
   SuperscriptBox["g2", "2"], " ", "h2", " ", 
   SuperscriptBox["\[Epsilon]", "6"]}]}]], "Output",
 CellChangeTimes->{3.845562093946631*^9, 3.8456427385989313`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"f3db4768-58a5-4807-a140-cf5c7275c7f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", "f1", " ", "X"}], "+", "Y"}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "8"}], " ", "g1", " ", 
       SuperscriptBox["h1", "2"]}], "+", 
      RowBox[{
       SuperscriptBox["f1", "2"], " ", "X"}], "+", 
      RowBox[{"2", " ", "f1", " ", "Y"}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "8"}], " ", "g2", " ", 
       SuperscriptBox["h1", "2"]}], "-", 
      RowBox[{"16", " ", "g1", " ", "h1", " ", "h2"}], "+", 
      RowBox[{
       SuperscriptBox["f1", "2"], " ", "Y"}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "16"}], " ", "g2", " ", "h1", " ", "h2"}], "-", 
      RowBox[{"8", " ", "g1", " ", 
       SuperscriptBox["h2", "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "8"}], " ", "g2", " ", 
      SuperscriptBox["h2", "2"]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{"W", "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"P", "+", 
      RowBox[{"2", " ", "f1", " ", "W"}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "8"}], " ", 
       SuperscriptBox["g1", "2"], " ", "h1"}], "+", 
      RowBox[{"2", " ", "f1", " ", "P"}], "+", 
      RowBox[{
       SuperscriptBox["f1", "2"], " ", "W"}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "16"}], " ", "g1", " ", "g2", " ", "h1"}], "-", 
      RowBox[{"8", " ", 
       SuperscriptBox["g1", "2"], " ", "h2"}], "+", 
      RowBox[{
       SuperscriptBox["f1", "2"], " ", "P"}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "8"}], " ", 
       SuperscriptBox["g2", "2"], " ", "h1"}], "-", 
      RowBox[{"16", " ", "g1", " ", "g2", " ", "h2"}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "8"}], " ", 
      SuperscriptBox["g2", "2"], " ", "h2"}], "\[Equal]", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
    "X", ",", "Y", ",", "W", ",", "P", ",", "f1", ",", "f2", ",", "h1", ",", 
     "h2", ",", "g1", ",", "g2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.845642741048915*^9, 3.8456427436850433`*^9}, {
  3.845644650494482*^9, 3.8456447763013144`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"744a2732-3603-4613-aaaa-9dd27d0e18c8"],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   21,3,28969479275146748644,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.845644778536397*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"1d9b8dae-22ca-40aa-b5c2-9bb820bfb449"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", "0"}], ",", 
     RowBox[{"Y", "\[Rule]", "0"}], ",", 
     RowBox[{"W", "\[Rule]", "0"}], ",", 
     RowBox[{"P", "\[Rule]", "0"}], ",", 
     RowBox[{"g1", "\[Rule]", "0"}], ",", 
     RowBox[{"g2", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", "0"}], ",", 
     RowBox[{"Y", "\[Rule]", "0"}], ",", 
     RowBox[{"W", "\[Rule]", "0"}], ",", 
     RowBox[{"P", "\[Rule]", "0"}], ",", 
     RowBox[{"h1", "\[Rule]", "0"}], ",", 
     RowBox[{"h2", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", "0"}], ",", 
     RowBox[{"Y", "\[Rule]", "0"}], ",", 
     RowBox[{"W", "\[Rule]", "0"}], ",", 
     RowBox[{"P", "\[Rule]", "0"}], ",", 
     RowBox[{"h2", "\[Rule]", "0"}], ",", 
     RowBox[{"g1", "\[Rule]", "0"}], ",", 
     RowBox[{"g2", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", "0"}], ",", 
     RowBox[{"Y", "\[Rule]", "0"}], ",", 
     RowBox[{"W", "\[Rule]", "0"}], ",", 
     RowBox[{"P", "\[Rule]", "0"}], ",", 
     RowBox[{"h1", "\[Rule]", "0"}], ",", 
     RowBox[{"h2", "\[Rule]", "0"}], ",", 
     RowBox[{"g2", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"X", "\[Rule]", "0"}], ",", 
     RowBox[{"Y", "\[Rule]", "0"}], ",", 
     RowBox[{"W", "\[Rule]", "0"}], ",", 
     RowBox[{"P", "\[Rule]", "0"}], ",", 
     RowBox[{"h1", "\[Rule]", "0"}], ",", 
     RowBox[{"h2", "\[Rule]", "0"}], ",", 
     RowBox[{"g2", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.845644778539572*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"63a1995c-3a33-469d-ad25-19c782757e51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"a", " ", 
      SuperscriptBox["c", "2"]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"b", " ", "c"}], "+", 
      RowBox[{"2", " ", "a", " ", "d"}]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "b", " ", "c"}], " ", "+", 
      RowBox[{"a", " ", "d"}]}], " ", "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{"b", " ", 
      SuperscriptBox["d", "2"]}], "\[Equal]", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8456454663103485`*^9, 3.845645567442025*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"f5437fdc-2ef0-486e-b947-dcd623d662a9"],

Cell[BoxData[
 TemplateBox[{
  "Solve","svars",
   "\"Equations may not give solutions for all \\\"solve\\\" variables.\"",2,
   22,4,28969479275146748644,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8456455682273583`*^9},
 CellLabel->
  "During evaluation of \
In[22]:=",ExpressionUUID->"f4aa77a6-0587-4d42-b595-7ac3e3c06c13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "0"}], ",", 
     RowBox[{"b", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"c", "\[Rule]", "0"}], ",", 
     RowBox[{"d", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "0"}], ",", 
     RowBox[{"b", "\[Rule]", "0"}], ",", 
     RowBox[{"d", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "0"}], ",", 
     RowBox[{"c", "\[Rule]", "0"}], ",", 
     RowBox[{"d", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a", "\[Rule]", "0"}], ",", 
     RowBox[{"b", "\[Rule]", "0"}], ",", 
     RowBox[{"c", "\[Rule]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"b", "\[Rule]", "0"}], ",", 
     RowBox[{"c", "\[Rule]", "0"}], ",", 
     RowBox[{"d", "\[Rule]", "0"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.845645568232862*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"12e9a32b-1345-4fd1-8cf5-6158b653b3e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["a1", "4"], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Mu]", "2"], 
       SuperscriptBox["a1", "2"], 
       SuperscriptBox["c", "2"]}], "-", 
      RowBox[{"2", 
       SuperscriptBox["\[Mu]", "2"], 
       SuperscriptBox["a1", "2"]}]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], 
       SuperscriptBox["\[Mu]", "2"], "a0", " ", "a1"}], " ", "+", " ", 
      RowBox[{"4", " ", "a0", " ", 
       SuperscriptBox["a1", "3"]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["\[Mu]", "2"], "a0", " ", 
       SuperscriptBox["c", "2"], "a1"}]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{"6", 
      SuperscriptBox["a0", "2"], " ", 
      SuperscriptBox["a1", "2"]}], "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"4", 
       SuperscriptBox["\[Mu]", "2"], "a0", " ", "a1"}], " ", "+", " ", 
      RowBox[{"4", 
       SuperscriptBox["a0", "3"], "a1"}], " ", "-", " ", 
      RowBox[{"4", 
       SuperscriptBox["\[Mu]", "2"], "a0", " ", 
       SuperscriptBox["c", "2"], "a1"}]}], " ", "\[Equal]", "0"}], "&&", " ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["a1", "4"], "-", "1", "-", 
      RowBox[{"2", 
       SuperscriptBox["\[Mu]", "2"], 
       SuperscriptBox["a1", "2"], 
       SuperscriptBox["c", 
        RowBox[{"2", " "}]]}], "+", 
      RowBox[{"2", 
       SuperscriptBox["\[Mu]", "2"], 
       SuperscriptBox["a1", "2"]}]}], "\[Equal]", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a0", ",", "a1"}], "}"}], ",", 
   RowBox[{"MaxExtraConditions", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8474637679671*^9, 3.84746378872482*^9}, {
  3.847463847354745*^9, 3.8474640507984776`*^9}, {3.847464097320809*^9, 
  3.847464097602805*^9}, {3.8474644163839984`*^9, 3.8474644224617944`*^9}, {
  3.847464641036599*^9, 3.847464648976601*^9}, {3.8474649264059286`*^9, 
  3.847464927047824*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"182c40cc-2c01-41ab-8f8b-4262070e7a39"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"c", "\[Equal]", 
          RowBox[{"-", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox["1", 
              RowBox[{"2", " ", 
               SqrtBox["2"], " ", 
               SuperscriptBox["\[Mu]", "2"]}]]}]]}]}], "||", 
         RowBox[{"c", "\[Equal]", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox["1", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]]}]]}], "||", 
         RowBox[{"c", "\[Equal]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SqrtBox[
            RowBox[{"4", "-", 
             FractionBox[
              SqrtBox["2"], 
              SuperscriptBox["\[Mu]", "2"]]}]]}]}], "||", 
         RowBox[{"c", "\[Equal]", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SqrtBox[
            RowBox[{"4", "-", 
             FractionBox[
              SqrtBox["2"], 
              SuperscriptBox["\[Mu]", "2"]]}]]}]}]}]}], "]"}]}], ",", 
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SqrtBox["2"]}], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Mu]", "2"], "-", 
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["\[Mu]", "2"]}]}]]}], ",", 
        RowBox[{
         RowBox[{"c", "\[Equal]", 
          RowBox[{"-", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox["1", 
              RowBox[{"2", " ", 
               SqrtBox["2"], " ", 
               SuperscriptBox["\[Mu]", "2"]}]]}]]}]}], "||", 
         RowBox[{"c", "\[Equal]", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox["1", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]]}]]}], "||", 
         RowBox[{"c", "\[Equal]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SqrtBox[
            RowBox[{"4", "-", 
             FractionBox[
              SqrtBox["2"], 
              SuperscriptBox["\[Mu]", "2"]]}]]}]}], "||", 
         RowBox[{"c", "\[Equal]", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SqrtBox[
            RowBox[{"4", "-", 
             FractionBox[
              SqrtBox["2"], 
              SuperscriptBox["\[Mu]", "2"]]}]]}]}]}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a0", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"c", "\[Equal]", 
          RowBox[{"-", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox["1", 
              RowBox[{"2", " ", 
               SqrtBox["2"], " ", 
               SuperscriptBox["\[Mu]", "2"]}]]}]]}]}], "||", 
         RowBox[{"c", "\[Equal]", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox["1", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]]}]]}], "||", 
         RowBox[{"c", "\[Equal]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SqrtBox[
            RowBox[{"4", "-", 
             FractionBox[
              SqrtBox["2"], 
              SuperscriptBox["\[Mu]", "2"]]}]]}]}], "||", 
         RowBox[{"c", "\[Equal]", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SqrtBox[
            RowBox[{"4", "-", 
             FractionBox[
              SqrtBox["2"], 
              SuperscriptBox["\[Mu]", "2"]]}]]}]}]}]}], "]"}]}], ",", 
     RowBox[{"a1", "\[Rule]", 
      RowBox[{"ConditionalExpression", "[", 
       RowBox[{
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Mu]", "2"], "-", 
           RowBox[{
            SuperscriptBox["c", "2"], " ", 
            SuperscriptBox["\[Mu]", "2"]}]}]]}], ",", 
        RowBox[{
         RowBox[{"c", "\[Equal]", 
          RowBox[{"-", 
           SqrtBox[
            RowBox[{"1", "+", 
             FractionBox["1", 
              RowBox[{"2", " ", 
               SqrtBox["2"], " ", 
               SuperscriptBox["\[Mu]", "2"]}]]}]]}]}], "||", 
         RowBox[{"c", "\[Equal]", 
          SqrtBox[
           RowBox[{"1", "+", 
            FractionBox["1", 
             RowBox[{"2", " ", 
              SqrtBox["2"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]]}]]}], "||", 
         RowBox[{"c", "\[Equal]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SqrtBox[
            RowBox[{"4", "-", 
             FractionBox[
              SqrtBox["2"], 
              SuperscriptBox["\[Mu]", "2"]]}]]}]}], "||", 
         RowBox[{"c", "\[Equal]", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SqrtBox[
            RowBox[{"4", "-", 
             FractionBox[
              SqrtBox["2"], 
              SuperscriptBox["\[Mu]", "2"]]}]]}]}]}]}], "]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8474640547731543`*^9, 3.847464120127307*^9, 
  3.847464423738048*^9, 3.847464650496513*^9, 3.8474649280745726`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"e402d28a-3aa4-455f-825e-298cd61e017d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Power Series Method", "Section",
 CellChangeTimes->{
  3.847487513539341*^9},ExpressionUUID->"83082550-4883-4f17-9da3-\
e8ad1c2e0964"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "\[Omega]ym", ",", "\[Beta]", ",", "\[Phi]sol", ",", "\[Psi]sol", ",", "g", 
   ",", "l", ",", "k"}], "]"}]], "Input",
 CellChangeTimes->{{3.845994113255907*^9, 3.8459941632972107`*^9}, {
  3.845994202037764*^9, 3.8459942022425776`*^9}, {3.84599530446318*^9, 
  3.8459953194421473`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"777e9066-45bb-4ddb-a2e5-b0a46ac819cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Phi]sol", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nmax", "=", "8"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", "n", "]"}], " ", 
        RowBox[{"u", "^", "n"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "nmax"}], "}"}]}], "]"}], "+", 
     RowBox[{
      RowBox[{"O", "[", "u", "]"}], "^", 
      RowBox[{"(", 
       RowBox[{"nmax", "+", "1"}], ")"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.845823897790766*^9, 3.8458238977927914`*^9}, {
   3.8458239303422394`*^9, 3.8458239331335535`*^9}, {3.845828267382292*^9, 
   3.845828273704013*^9}, {3.845828387957938*^9, 3.845828392022563*^9}, {
   3.8458285490057096`*^9, 3.845828551800466*^9}, 3.84599407780006*^9, {
   3.8459953297295327`*^9, 3.845995330040531*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"4a85d865-9cd8-45ed-a494-377d13211f8a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"a", "[", "0", "]"}], "+", 
   RowBox[{
    RowBox[{"a", "[", "1", "]"}], " ", "u"}], "+", 
   RowBox[{
    RowBox[{"a", "[", "2", "]"}], " ", 
    SuperscriptBox["u", "2"]}], "+", 
   RowBox[{
    RowBox[{"a", "[", "3", "]"}], " ", 
    SuperscriptBox["u", "3"]}], "+", 
   RowBox[{
    RowBox[{"a", "[", "4", "]"}], " ", 
    SuperscriptBox["u", "4"]}], "+", 
   RowBox[{
    RowBox[{"a", "[", "5", "]"}], " ", 
    SuperscriptBox["u", "5"]}], "+", 
   RowBox[{
    RowBox[{"a", "[", "6", "]"}], " ", 
    SuperscriptBox["u", "6"]}], "+", 
   RowBox[{
    RowBox[{"a", "[", "7", "]"}], " ", 
    SuperscriptBox["u", "7"]}], "+", 
   RowBox[{
    RowBox[{"a", "[", "8", "]"}], " ", 
    SuperscriptBox["u", "8"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "u", "]"}], "9"],
    SeriesData[$CellContext`u, 0, {}, 0, 9, 1],
    Editable->False]}],
  SeriesData[$CellContext`u, 0, {
    $CellContext`a[0], 
    $CellContext`a[1], 
    $CellContext`a[2], 
    $CellContext`a[3], 
    $CellContext`a[4], 
    $CellContext`a[5], 
    $CellContext`a[6], 
    $CellContext`a[7], 
    $CellContext`a[8]}, 0, 9, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.845823899978461*^9, 3.8458239421502547`*^9, 3.8458285590498967`*^9, {
   3.8458305513694744`*^9, 3.845830565394983*^9}, {3.8459940734969716`*^9, 
   3.8459940791633453`*^9}, {3.8459941783532147`*^9, 3.8459942048046556`*^9}, 
   3.845995799774295*^9, 3.8459959230350666`*^9, 3.8459998613739595`*^9, 
   3.8474697088368797`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"229d6019-d32f-4bc6-a52f-aa85528bfb16"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Psi]sol", "=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nmax", "=", "8"}], "}"}], ",", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"b", "[", "n", "]"}], " ", 
        RowBox[{"u", "^", "n"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "0", ",", "nmax"}], "}"}]}], "]"}], "+", 
     RowBox[{
      RowBox[{"O", "[", "u", "]"}], "^", 
      RowBox[{"(", 
       RowBox[{"nmax", "+", "1"}], ")"}]}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8458239108380566`*^9, 3.845823936351672*^9}, {
   3.8458282707325706`*^9, 3.8458282798909874`*^9}, {3.8458285555315332`*^9, 
   3.845828557206648*^9}, {3.845828618050128*^9, 3.8458286198634553`*^9}, 
   3.845994084219078*^9, {3.8459957903318872`*^9, 3.8459957917013893`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"40d9ad23-2639-46f7-8287-064ced18d01b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"b", "[", "0", "]"}], "+", 
   RowBox[{
    RowBox[{"b", "[", "1", "]"}], " ", "u"}], "+", 
   RowBox[{
    RowBox[{"b", "[", "2", "]"}], " ", 
    SuperscriptBox["u", "2"]}], "+", 
   RowBox[{
    RowBox[{"b", "[", "3", "]"}], " ", 
    SuperscriptBox["u", "3"]}], "+", 
   RowBox[{
    RowBox[{"b", "[", "4", "]"}], " ", 
    SuperscriptBox["u", "4"]}], "+", 
   RowBox[{
    RowBox[{"b", "[", "5", "]"}], " ", 
    SuperscriptBox["u", "5"]}], "+", 
   RowBox[{
    RowBox[{"b", "[", "6", "]"}], " ", 
    SuperscriptBox["u", "6"]}], "+", 
   RowBox[{
    RowBox[{"b", "[", "7", "]"}], " ", 
    SuperscriptBox["u", "7"]}], "+", 
   RowBox[{
    RowBox[{"b", "[", "8", "]"}], " ", 
    SuperscriptBox["u", "8"]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "u", "]"}], "9"],
    SeriesData[$CellContext`u, 0, {}, 0, 9, 1],
    Editable->False]}],
  SeriesData[$CellContext`u, 0, {
    $CellContext`b[0], 
    $CellContext`b[1], 
    $CellContext`b[2], 
    $CellContext`b[3], 
    $CellContext`b[4], 
    $CellContext`b[5], 
    $CellContext`b[6], 
    $CellContext`b[7], 
    $CellContext`b[8]}, 0, 9, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.845823944252296*^9, 3.8458285629044065`*^9, 3.8458286207466145`*^9, 
   3.845830585421398*^9, {3.8459940814077682`*^9, 3.8459940853947506`*^9}, {
   3.8459941801416197`*^9, 3.8459942061423273`*^9}, 3.845995796516323*^9, 
   3.8459959247789993`*^9, 3.845999864170746*^9, 3.847469710819605*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"af5cf957-6300-428d-8e7f-261e811e497b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lefth1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], 
     RowBox[{"Evaluate", "[", 
      RowBox[{"D", "[", 
       RowBox[{"\[Phi]sol", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["g", "2"], " ", 
     SuperscriptBox["l", "2"], "\[Phi]sol", " ", "\[Psi]sol", " ", 
     "\[Psi]sol"}]}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{"eqs1", "=", 
  RowBox[{"LogicalExpand", "[", 
   RowBox[{"lefth1", "\[Equal]", "0"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8458239582414827`*^9, 3.8458239582414827`*^9}, {
   3.845824025284418*^9, 3.845824163610277*^9}, {3.8458242032679186`*^9, 
   3.8458242084592237`*^9}, {3.8458285788997126`*^9, 3.8458286150262656`*^9}, 
   3.845828666070592*^9, {3.84599580308123*^9, 3.845995818669749*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"b56d53c1-002f-4104-a17f-df6504635f3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
     RowBox[{"a", "[", "2", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["g", "2"], " ", 
     SuperscriptBox["l", "2"], " ", 
     RowBox[{"a", "[", "0", "]"}], " ", 
     SuperscriptBox[
      RowBox[{"b", "[", "0", "]"}], "2"]}]}], "\[Equal]", "0"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{"6", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
     RowBox[{"a", "[", "3", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["g", "2"], " ", 
     SuperscriptBox["l", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "[", "0", "]"}], " ", 
        RowBox[{"b", "[", "0", "]"}], " ", 
        RowBox[{"b", "[", "1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"b", "[", "0", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}]}], "\[Equal]",
    "0"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{"12", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
     RowBox[{"a", "[", "4", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["g", "2"], " ", 
     SuperscriptBox["l", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"b", "[", "1", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"a", "[", "0", "]"}], " ", 
        RowBox[{"b", "[", "0", "]"}], " ", 
        RowBox[{"b", "[", "2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"b", "[", "0", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "2", "]"}]}]}], ")"}]}]}], ")"}]}]}], "\[Equal]",
    "0"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{"20", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
     RowBox[{"a", "[", "5", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["g", "2"], " ", 
     SuperscriptBox["l", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"b", "[", "1", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "2", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"a", "[", "0", "]"}], " ", 
        RowBox[{"b", "[", "0", "]"}], " ", 
        RowBox[{"b", "[", "3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"b", "[", "0", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "3", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "3", "]"}]}]}], ")"}]}]}], ")"}]}]}], "\[Equal]",
    "0"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{"30", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
     RowBox[{"a", "[", "6", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["g", "2"], " ", 
     SuperscriptBox["l", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"b", "[", "2", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "2", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"b", "[", "1", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "3", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "3", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"a", "[", "0", "]"}], " ", 
        RowBox[{"b", "[", "0", "]"}], " ", 
        RowBox[{"b", "[", "4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"b", "[", "0", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "4", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "3", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"b", "[", "2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "4", "]"}]}]}], ")"}]}]}], ")"}]}]}], "\[Equal]",
    "0"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{"42", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
     RowBox[{"a", "[", "7", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["g", "2"], " ", 
     SuperscriptBox["l", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "2", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"b", "[", "2", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "3", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "3", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"b", "[", "1", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "4", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "3", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"b", "[", "2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "4", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"a", "[", "0", "]"}], " ", 
        RowBox[{"b", "[", "0", "]"}], " ", 
        RowBox[{"b", "[", "5", "]"}]}], "+", 
       RowBox[{
        RowBox[{"b", "[", "0", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "5", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "4", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "3", "]"}], " ", 
           RowBox[{"b", "[", "2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"b", "[", "3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "4", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "5", "]"}]}]}], ")"}]}]}], ")"}]}]}], "\[Equal]",
    "0"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{"56", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
     RowBox[{"a", "[", "8", "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["g", "2"], " ", 
     SuperscriptBox["l", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"b", "[", "3", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "3", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "3", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "2", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "4", "]"}]}], "+", 
       RowBox[{
        RowBox[{"b", "[", "2", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "4", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "3", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"b", "[", "2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "4", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "5", "]"}]}], "+", 
       RowBox[{
        RowBox[{"b", "[", "1", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "5", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "4", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "3", "]"}], " ", 
           RowBox[{"b", "[", "2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"b", "[", "3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "4", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "5", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"a", "[", "0", "]"}], " ", 
        RowBox[{"b", "[", "0", "]"}], " ", 
        RowBox[{"b", "[", "6", "]"}]}], "+", 
       RowBox[{
        RowBox[{"b", "[", "0", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "[", "6", "]"}], " ", 
           RowBox[{"b", "[", "0", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "5", "]"}], " ", 
           RowBox[{"b", "[", "1", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "4", "]"}], " ", 
           RowBox[{"b", "[", "2", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "3", "]"}], " ", 
           RowBox[{"b", "[", "3", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"b", "[", "4", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"b", "[", "5", "]"}]}], "+", 
          RowBox[{
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"b", "[", "6", "]"}]}]}], ")"}]}]}], ")"}]}]}], "\[Equal]",
    "0"}]}]], "Output",
 CellChangeTimes->{
  3.8458242109655285`*^9, 3.8458286249859924`*^9, 3.845828673982437*^9, 
   3.8458305985568137`*^9, {3.8459941824621267`*^9, 3.8459942087812877`*^9}, 
   3.845995820615734*^9, 3.8459959272441807`*^9, 3.845999867898362*^9, 
   3.8474697297685423`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"8e63166c-f681-4be1-9419-1a24c7e56319"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lefth2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], 
     RowBox[{"Evaluate", "[", 
      RowBox[{"D", "[", 
       RowBox[{"\[Psi]sol", ",", 
        RowBox[{"{", 
         RowBox[{"u", ",", "2"}], "}"}]}], "]"}], "]"}]}], "-", 
    RowBox[{
     SuperscriptBox["g", "2"], " ", 
     SuperscriptBox["k", "2"], "\[Psi]sol", " ", "\[Phi]sol", " ", 
     "\[Phi]sol"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"eqs2", "=", 
  RowBox[{"LogicalExpand", "[", 
   RowBox[{"lefth2", "\[Equal]", "0"}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.845824144255204*^9, 3.8458241600389524`*^9}, {
  3.845828645613924*^9, 3.8458286988216743`*^9}, {3.845830605871413*^9, 
  3.84583060706686*^9}, {3.8459958292385426`*^9, 3.8459958423546515`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"59bbce87-45aa-4e12-b5f0-3c670cd9eca1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["g", "2"]}], " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox[
      RowBox[{"a", "[", "0", "]"}], "2"], " ", 
     RowBox[{"b", "[", "0", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
     RowBox[{"b", "[", "2", "]"}]}]}], "\[Equal]", "0"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["g", "2"]}], " ", 
     SuperscriptBox["k", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"a", "[", "0", "]"}], " ", 
        RowBox[{"a", "[", "1", "]"}], " ", 
        RowBox[{"b", "[", "0", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"a", "[", "0", "]"}], "2"], " ", 
        RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
    RowBox[{"6", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
     RowBox[{"b", "[", "3", "]"}]}]}], "\[Equal]", "0"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["g", "2"]}], " ", 
     SuperscriptBox["k", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "1", "]"}], "2"], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"a", "[", "2", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "0", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"a", "[", "0", "]"}], " ", 
        RowBox[{"a", "[", "1", "]"}], " ", 
        RowBox[{"b", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"a", "[", "0", "]"}], "2"], " ", 
        RowBox[{"b", "[", "2", "]"}]}]}], ")"}]}], "+", 
    RowBox[{"12", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
     RowBox[{"b", "[", "4", "]"}]}]}], "\[Equal]", "0"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["g", "2"]}], " ", 
     SuperscriptBox["k", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"a", "[", "2", "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"a", "[", "3", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "0", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "1", "]"}], "2"], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"a", "[", "2", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "1", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"a", "[", "0", "]"}], " ", 
        RowBox[{"a", "[", "1", "]"}], " ", 
        RowBox[{"b", "[", "2", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"a", "[", "0", "]"}], "2"], " ", 
        RowBox[{"b", "[", "3", "]"}]}]}], ")"}]}], "+", 
    RowBox[{"20", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
     RowBox[{"b", "[", "5", "]"}]}]}], "\[Equal]", "0"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["g", "2"]}], " ", 
     SuperscriptBox["k", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "2", "]"}], "2"], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"a", "[", "3", "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"a", "[", "4", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "0", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"a", "[", "2", "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"a", "[", "3", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "1", "]"}], "2"], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"a", "[", "2", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "2", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"a", "[", "0", "]"}], " ", 
        RowBox[{"a", "[", "1", "]"}], " ", 
        RowBox[{"b", "[", "3", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"a", "[", "0", "]"}], "2"], " ", 
        RowBox[{"b", "[", "4", "]"}]}]}], ")"}]}], "+", 
    RowBox[{"30", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
     RowBox[{"b", "[", "6", "]"}]}]}], "\[Equal]", "0"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["g", "2"]}], " ", 
     SuperscriptBox["k", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"a", "[", "3", "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"a", "[", "4", "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"a", "[", "5", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "0", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "2", "]"}], "2"], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"a", "[", "3", "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"a", "[", "4", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"a", "[", "2", "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"a", "[", "3", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "1", "]"}], "2"], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"a", "[", "2", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "3", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"a", "[", "0", "]"}], " ", 
        RowBox[{"a", "[", "1", "]"}], " ", 
        RowBox[{"b", "[", "4", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"a", "[", "0", "]"}], "2"], " ", 
        RowBox[{"b", "[", "5", "]"}]}]}], ")"}]}], "+", 
    RowBox[{"42", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
     RowBox[{"b", "[", "7", "]"}]}]}], "\[Equal]", "0"}], "&&", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["g", "2"]}], " ", 
     SuperscriptBox["k", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "3", "]"}], "2"], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"a", "[", "4", "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"a", "[", "5", "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"a", "[", "6", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "0", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "2", "]"}], " ", 
           RowBox[{"a", "[", "3", "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"a", "[", "4", "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"a", "[", "5", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "1", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "2", "]"}], "2"], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"a", "[", "3", "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"a", "[", "4", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "2", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "1", "]"}], " ", 
           RowBox[{"a", "[", "2", "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"a", "[", "3", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "3", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "1", "]"}], "2"], "+", 
          RowBox[{"2", " ", 
           RowBox[{"a", "[", "0", "]"}], " ", 
           RowBox[{"a", "[", "2", "]"}]}]}], ")"}], " ", 
        RowBox[{"b", "[", "4", "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"a", "[", "0", "]"}], " ", 
        RowBox[{"a", "[", "1", "]"}], " ", 
        RowBox[{"b", "[", "5", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"a", "[", "0", "]"}], "2"], " ", 
        RowBox[{"b", "[", "6", "]"}]}]}], ")"}]}], "+", 
    RowBox[{"56", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
     RowBox[{"b", "[", "8", "]"}]}]}], "\[Equal]", "0"}]}]], "Output",
 CellChangeTimes->{3.8458306085152483`*^9, 3.8459942143539066`*^9, 
  3.8459958446785946`*^9, 3.845995930305597*^9, 3.8459998716807656`*^9, 
  3.8474697438884697`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"b5c44bff-76db-4cf8-ac4e-4658fae7210b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
       RowBox[{"a", "[", "2", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"a", "[", "0", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"b", "[", "0", "]"}], "2"]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
       RowBox[{"a", "[", "3", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"a", "[", "0", "]"}], " ", 
          RowBox[{"b", "[", "0", "]"}], " ", 
          RowBox[{"b", "[", "1", "]"}]}], "+", 
         RowBox[{
          RowBox[{"b", "[", "0", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"12", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
       RowBox[{"a", "[", "4", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"b", "[", "1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"a", "[", "0", "]"}], " ", 
          RowBox[{"b", "[", "0", "]"}], " ", 
          RowBox[{"b", "[", "2", "]"}]}], "+", 
         RowBox[{
          RowBox[{"b", "[", "0", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "2", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"20", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
       RowBox[{"a", "[", "5", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "2", "]"}]}], "+", 
         RowBox[{
          RowBox[{"b", "[", "1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "2", "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"a", "[", "0", "]"}], " ", 
          RowBox[{"b", "[", "0", "]"}], " ", 
          RowBox[{"b", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"b", "[", "0", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "3", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "3", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"30", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
       RowBox[{"a", "[", "6", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"b", "[", "2", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "2", "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"b", "[", "1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "3", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "3", "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"a", "[", "0", "]"}], " ", 
          RowBox[{"b", "[", "0", "]"}], " ", 
          RowBox[{"b", "[", "4", "]"}]}], "+", 
         RowBox[{
          RowBox[{"b", "[", "0", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "4", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "3", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"b", "[", "2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "4", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"42", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
       RowBox[{"a", "[", "7", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "2", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"b", "[", "2", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "3", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "3", "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "4", "]"}]}], "+", 
         RowBox[{
          RowBox[{"b", "[", "1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "4", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "3", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"b", "[", "2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "4", "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"a", "[", "0", "]"}], " ", 
          RowBox[{"b", "[", "0", "]"}], " ", 
          RowBox[{"b", "[", "5", "]"}]}], "+", 
         RowBox[{
          RowBox[{"b", "[", "0", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "5", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "4", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "3", "]"}], " ", 
             RowBox[{"b", "[", "2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"b", "[", "3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "5", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{"56", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
       RowBox[{"a", "[", "8", "]"}]}], "-", 
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"b", "[", "3", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "3", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "3", "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "2", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "4", "]"}]}], "+", 
         RowBox[{
          RowBox[{"b", "[", "2", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "4", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "3", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"b", "[", "2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "4", "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "5", "]"}]}], "+", 
         RowBox[{
          RowBox[{"b", "[", "1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "5", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "4", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "3", "]"}], " ", 
             RowBox[{"b", "[", "2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"b", "[", "3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "5", "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"a", "[", "0", "]"}], " ", 
          RowBox[{"b", "[", "0", "]"}], " ", 
          RowBox[{"b", "[", "6", "]"}]}], "+", 
         RowBox[{
          RowBox[{"b", "[", "0", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "6", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "5", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "4", "]"}], " ", 
             RowBox[{"b", "[", "2", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "3", "]"}], " ", 
             RowBox[{"b", "[", "3", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"b", "[", "4", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "5", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "6", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     "\[Equal]", "0"}], " ", "&&", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["g", "2"]}], " ", 
       SuperscriptBox["k", "2"], " ", 
       SuperscriptBox[
        RowBox[{"a", "[", "0", "]"}], "2"], " ", 
       RowBox[{"b", "[", "0", "]"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
       RowBox[{"b", "[", "2", "]"}]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["g", "2"]}], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"a", "[", "0", "]"}], " ", 
          RowBox[{"a", "[", "1", "]"}], " ", 
          RowBox[{"b", "[", "0", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "0", "]"}], "2"], " ", 
          RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
       RowBox[{"b", "[", "3", "]"}]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["g", "2"]}], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "1", "]"}], "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"a", "[", "2", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "0", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"a", "[", "0", "]"}], " ", 
          RowBox[{"a", "[", "1", "]"}], " ", 
          RowBox[{"b", "[", "1", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "0", "]"}], "2"], " ", 
          RowBox[{"b", "[", "2", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"12", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
       RowBox[{"b", "[", "4", "]"}]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["g", "2"]}], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"a", "[", "2", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"a", "[", "3", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "0", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "1", "]"}], "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"a", "[", "2", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "1", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"a", "[", "0", "]"}], " ", 
          RowBox[{"a", "[", "1", "]"}], " ", 
          RowBox[{"b", "[", "2", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "0", "]"}], "2"], " ", 
          RowBox[{"b", "[", "3", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"20", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
       RowBox[{"b", "[", "5", "]"}]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["g", "2"]}], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "2", "]"}], "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"a", "[", "3", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"a", "[", "4", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "0", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"a", "[", "2", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"a", "[", "3", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "1", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "1", "]"}], "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"a", "[", "2", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "2", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"a", "[", "0", "]"}], " ", 
          RowBox[{"a", "[", "1", "]"}], " ", 
          RowBox[{"b", "[", "3", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "0", "]"}], "2"], " ", 
          RowBox[{"b", "[", "4", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"30", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
       RowBox[{"b", "[", "6", "]"}]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["g", "2"]}], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"a", "[", "3", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"a", "[", "4", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"a", "[", "5", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "0", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "2", "]"}], "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"a", "[", "3", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"a", "[", "4", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "1", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"a", "[", "2", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"a", "[", "3", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "2", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "1", "]"}], "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"a", "[", "2", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "3", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"a", "[", "0", "]"}], " ", 
          RowBox[{"a", "[", "1", "]"}], " ", 
          RowBox[{"b", "[", "4", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "0", "]"}], "2"], " ", 
          RowBox[{"b", "[", "5", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"42", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
       RowBox[{"b", "[", "7", "]"}]}]}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["g", "2"]}], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "3", "]"}], "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"a", "[", "4", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"a", "[", "5", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"a", "[", "6", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "0", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "2", "]"}], " ", 
             RowBox[{"a", "[", "3", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"a", "[", "4", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"a", "[", "5", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "1", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "2", "]"}], "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"a", "[", "3", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"a", "[", "4", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "2", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"a", "[", "2", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"a", "[", "3", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "3", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"a", "[", "1", "]"}], "2"], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"a", "[", "2", "]"}]}]}], ")"}], " ", 
          RowBox[{"b", "[", "4", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"a", "[", "0", "]"}], " ", 
          RowBox[{"a", "[", "1", "]"}], " ", 
          RowBox[{"b", "[", "5", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"a", "[", "0", "]"}], "2"], " ", 
          RowBox[{"b", "[", "6", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"56", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
       RowBox[{"b", "[", "8", "]"}]}]}], "\[Equal]", "0"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8458243514991016`*^9, 3.8458243619800897`*^9}, {
  3.845824416349186*^9, 3.8458244532495155`*^9}, {3.845828719836399*^9, 
  3.8458287512347355`*^9}, {3.8459958631584115`*^9, 3.845995890494046*^9}, {
  3.845995947714917*^9, 3.845995964595719*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"b47b600d-73db-4be1-9367-6ca81a08b204"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eqsol", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Solve", "[", 
    RowBox[{"eqs", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "2", "]"}], ",", 
       RowBox[{"a", "[", "3", "]"}], ",", 
       RowBox[{"a", "[", "4", "]"}], ",", 
       RowBox[{"a", "[", "5", "]"}], ",", 
       RowBox[{"a", "[", "6", "]"}], ",", 
       RowBox[{"a", "[", "7", "]"}], ",", 
       RowBox[{"a", "[", "8", "]"}], ",", 
       RowBox[{"b", "[", "2", "]"}], ",", 
       RowBox[{"b", "[", "3", "]"}], ",", 
       RowBox[{"b", "[", "4", "]"}], ",", 
       RowBox[{"b", "[", "5", "]"}], ",", 
       RowBox[{"b", "[", "6", "]"}], ",", 
       RowBox[{"b", "[", "7", "]"}], ",", 
       RowBox[{"b", "[", "8", "]"}]}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.845824383638919*^9, {3.845824470481864*^9, 3.845824512748577*^9}, {
   3.845826853186512*^9, 3.8458268584951553`*^9}, {3.8458301448458147`*^9, 
   3.8458301459628086`*^9}, {3.845995902222328*^9, 3.8459959026457987`*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"136415e9-a927-4d1d-bb0a-60ff7dd4fbd1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", "2", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"a", "[", "0", "]"}], " ", 
       SuperscriptBox[
        RowBox[{"b", "[", "0", "]"}], "2"]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["\[Beta]", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Omega]ym", "2"]}]}]]}], ",", 
    RowBox[{
     RowBox[{"a", "[", "3", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"b", "[", "0", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"a", "[", "1", "]"}], " ", 
          RowBox[{"b", "[", "0", "]"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"a", "[", "0", "]"}], " ", 
          RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], 
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}]]}], ",", 
    RowBox[{
     RowBox[{"a", "[", "4", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "3"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "2"]}], "+", 
            RowBox[{
             SuperscriptBox["l", "2"], " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "4"]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "-", 
            SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
          RowBox[{"b", "[", "1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"24", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"]}]]}], ",", 
    RowBox[{
     RowBox[{"a", "[", "5", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "-", 
            SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
          RowBox[{"a", "[", "1", "]"}], " ", 
          SuperscriptBox[
           RowBox[{"b", "[", "1", "]"}], "2"]}], "+", 
         RowBox[{
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "2"], " ", 
             RowBox[{"b", "[", "0", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"5", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"4", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"8", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}], 
      RowBox[{"120", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"]}]]}], ",", 
    RowBox[{
     RowBox[{"a", "[", "6", "]"}], "\[Rule]", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"720", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], "-", 
           SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "3"]}]], 
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"8", " ", 
             SuperscriptBox["k", "4"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "5"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "2"]}], "+", 
            RowBox[{"18", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "3"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "4"]}], "+", 
            RowBox[{
             SuperscriptBox["l", "4"], " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "6"]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "-", 
            SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", 
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "2"], " ", 
             RowBox[{"b", "[", "1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"5", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["k", "2"], " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"5", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "1", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "0", "]"}], "2"]}], "+", 
               RowBox[{"14", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "0", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "1", "]"}], "2"]}]}], ")"}]}]}], ")"}]}]}],
         ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"a", "[", "7", "]"}], "\[Rule]", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"5040", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], "-", 
           SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "3"]}]], 
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"32", " ", 
             SuperscriptBox["k", "4"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "4"], " ", 
             RowBox[{"b", "[", "0", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["l", "4"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "5"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"18", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"53", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"94", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "-", 
            SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", 
             SuperscriptBox["l", "2"], " ", 
             RowBox[{"b", "[", "0", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "1", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"11", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"10", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["k", "2"], " ", 
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"5", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "1", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "0", "]"}], "2"]}], "+", 
               RowBox[{"38", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}], "+", 
               RowBox[{"20", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "0", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "1", "]"}], "2"]}]}], ")"}]}]}], ")"}]}]}],
         ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"a", "[", "8", "]"}], "\[Rule]", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"40320", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], "-", 
           SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "4"]}]], 
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"32", " ", 
             SuperscriptBox["k", "6"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "7"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "2"]}], "+", 
            RowBox[{"284", " ", 
             SuperscriptBox["k", "4"], " ", 
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "5"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "4"]}], "+", 
            RowBox[{"124", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["l", "4"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "3"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "6"]}], "+", 
            RowBox[{
             SuperscriptBox["l", "6"], " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "8"]}]}], ")"}]}], "+", 
         RowBox[{"12", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Beta]", "2"], "-", 
             SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"], " ", 
          RowBox[{"b", "[", "1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "1", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"16", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"5", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "1", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"8", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"13", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "-", 
            SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", 
             SuperscriptBox["l", "4"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "4"], " ", 
             RowBox[{"b", "[", "1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"13", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["k", "4"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"67", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "1", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "0", "]"}], "2"]}], "+", 
               RowBox[{"64", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "0", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "1", "]"}], "2"]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["l", "2"], " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"34", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "1", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "0", "]"}], "2"]}], "+", 
               RowBox[{"178", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}], "+", 
               RowBox[{"103", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "0", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "1", "]"}], "2"]}]}], ")"}]}]}], ")"}]}]}],
         ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"b", "[", "2", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"], " ", 
       SuperscriptBox[
        RowBox[{"a", "[", "0", "]"}], "2"], " ", 
       RowBox[{"b", "[", "0", "]"}]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["\[Beta]", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Omega]ym", "2"]}]}]]}], ",", 
    RowBox[{
     RowBox[{"b", "[", "3", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"a", "[", "0", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"a", "[", "1", "]"}], " ", 
          RowBox[{"b", "[", "0", "]"}]}], "+", 
         RowBox[{
          RowBox[{"a", "[", "0", "]"}], " ", 
          RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], 
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}]]}], ",", 
    RowBox[{
     RowBox[{"b", "[", "4", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "4"], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "3"]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "-", 
            SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
          RowBox[{"a", "[", "1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], 
      RowBox[{"24", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"]}]]}], ",", 
    RowBox[{
     RowBox[{"b", "[", "5", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "-", 
            SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"a", "[", "1", "]"}], "2"], " ", 
          RowBox[{"b", "[", "1", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"8", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["l", "2"], " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"5", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}], 
      RowBox[{"120", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"]}]]}], ",", 
    RowBox[{
     RowBox[{"b", "[", "6", "]"}], "\[Rule]", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"720", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], "-", 
           SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "3"]}]], 
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["k", "4"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "6"], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{"18", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "4"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "3"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["l", "4"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "5"]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "-", 
            SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "2"], " ", 
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"5", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["l", "2"], " ", 
             RowBox[{"b", "[", "0", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "1", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "0", "]"}], "2"]}], "+", 
               RowBox[{"14", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}], "+", 
               RowBox[{"5", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "0", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "1", "]"}], "2"]}]}], ")"}]}]}], ")"}]}]}],
         ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"b", "[", "7", "]"}], "\[Rule]", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"5040", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], "-", 
           SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "3"]}]], 
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["k", "4"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "5"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"18", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"32", " ", 
             SuperscriptBox["l", "4"], " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"3", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "3"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"94", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"53", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "-", 
            SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", 
             SuperscriptBox["k", "2"], " ", 
             RowBox[{"a", "[", "0", "]"}], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "1", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"10", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"11", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["l", "2"], " ", 
             RowBox[{"b", "[", "1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"20", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "1", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "0", "]"}], "2"]}], "+", 
               RowBox[{"38", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}], "+", 
               RowBox[{"5", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "0", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "1", "]"}], "2"]}]}], ")"}]}]}], ")"}]}]}],
         ")"}]}]}]}], ",", 
    RowBox[{
     RowBox[{"b", "[", "8", "]"}], "\[Rule]", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"40320", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], "-", 
           SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "4"]}]], 
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["k", "6"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "8"], " ", 
             RowBox[{"b", "[", "0", "]"}]}], "+", 
            RowBox[{"124", " ", 
             SuperscriptBox["k", "4"], " ", 
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "6"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "3"]}], "+", 
            RowBox[{"284", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["l", "4"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "4"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "5"]}], "+", 
            RowBox[{"32", " ", 
             SuperscriptBox["l", "6"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "7"]}]}], ")"}]}], "+", 
         RowBox[{"12", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Beta]", "2"], "-", 
             SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"], " ", 
          RowBox[{"a", "[", "1", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "1", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"13", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"8", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "1", "]"}], "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"5", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"16", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "-", 
            SuperscriptBox["\[Omega]ym", "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", 
             SuperscriptBox["k", "4"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "4"], " ", 
             RowBox[{"a", "[", "1", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"13", " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["l", "2"], " ", 
             SuperscriptBox[
              RowBox[{"a", "[", "0", "]"}], "2"], " ", 
             RowBox[{"b", "[", "0", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"103", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "1", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "0", "]"}], "2"]}], "+", 
               RowBox[{"178", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}], "+", 
               RowBox[{"34", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "0", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "1", "]"}], "2"]}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["l", "4"], " ", 
             SuperscriptBox[
              RowBox[{"b", "[", "0", "]"}], "3"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "1", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "0", "]"}], "2"]}], "+", 
               RowBox[{"64", " ", 
                RowBox[{"a", "[", "0", "]"}], " ", 
                RowBox[{"a", "[", "1", "]"}], " ", 
                RowBox[{"b", "[", "0", "]"}], " ", 
                RowBox[{"b", "[", "1", "]"}]}], "+", 
               RowBox[{"67", " ", 
                SuperscriptBox[
                 RowBox[{"a", "[", "0", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"b", "[", "1", "]"}], "2"]}]}], ")"}]}]}], ")"}]}]}],
         ")"}]}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8458244935798855`*^9, {3.845826842957452*^9, 3.845826859486396*^9}, 
   3.8458287603324065`*^9, 3.8458301482177324`*^9, 3.8458306246762195`*^9, 
   3.8459942280350947`*^9, 3.8459959074509044`*^9, 3.845995972041998*^9, 
   3.845999882937706*^9, 3.84746978003347*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"de451fef-1171-4491-ad6a-c25fa1f2496a"]
}, Open  ]],

Cell["compare values with initial conditions to get a0, a1, b0, b1", "Text",
 CellChangeTimes->{{3.8459942542532387`*^9, 
  3.8459942827982063`*^9}},ExpressionUUID->"79c0ada9-62fe-4ab1-b3ed-\
4b28f0e75ddb"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"k", ",", "l", ",", "g"}], "]"}]], "Input",
 CellChangeTimes->{{3.8474745300059505`*^9, 3.847474535907199*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"1562c2a1-3c03-4be5-b775-f32d6ee81f29"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"eqsol", "/.", 
      RowBox[{
       RowBox[{"a", "[", "0", "]"}], "\[Rule]", "1"}]}], "/.", 
     RowBox[{
      RowBox[{"b", "[", "0", "]"}], "\[Rule]", "1"}]}], "/.", 
    RowBox[{
     RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
     RowBox[{"1", "/", "\[Omega]ym"}]}]}], "/.", 
   RowBox[{
    RowBox[{"b", "[", "1", "]"}], "\[Rule]", " ", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.845830126514696*^9, 3.845830173494233*^9}, {
  3.845830278534762*^9, 3.845830380468912*^9}, {3.8458304680685034`*^9, 
  3.8458304694338946`*^9}, {3.845995990304925*^9, 3.8459959907921114`*^9}, {
  3.845996034263203*^9, 3.84599607182695*^9}, {3.8459966672534246`*^9, 
  3.8459966675171337`*^9}, {3.8459998917864604`*^9, 3.8459998947934656`*^9}, {
  3.847469805851031*^9, 3.847469806069441*^9}, {3.847472255751397*^9, 
  3.847472267852331*^9}, {3.8474749830256767`*^9, 3.8474749941728444`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"2af39df2-fa62-4db0-a92d-2c973fa37ff0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", "2", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["\[Beta]", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Omega]ym", "2"]}]}]]}], ",", 
    RowBox[{
     RowBox[{"a", "[", "3", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["l", "2"]}], 
      RowBox[{"6", " ", "\[Omega]ym", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}]]}], ",", 
    RowBox[{
     RowBox[{"a", "[", "4", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["k", "2"]}], "+", 
         SuperscriptBox["l", "2"]}], ")"}]}], 
      RowBox[{"24", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"]}]]}], ",", 
    RowBox[{
     RowBox[{"a", "[", "5", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"10", " ", 
           SuperscriptBox["k", "2"]}], "\[Omega]ym"], "+", 
         FractionBox[
          SuperscriptBox["l", "2"], "\[Omega]ym"]}], ")"}]}], 
      RowBox[{"120", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"]}]]}], ",", 
    RowBox[{
     RowBox[{"a", "[", "6", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"8", " ", 
             SuperscriptBox["k", "4"]}], "+", 
            RowBox[{"18", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["l", "2"]}], "+", 
            SuperscriptBox["l", "4"]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"20", " ", 
           SuperscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Beta]", "2"], "-", 
             SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}], 
          SuperscriptBox["\[Omega]ym", "2"]]}], ")"}]}], 
      RowBox[{"720", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "3"]}]]}], ",", 
    RowBox[{
     RowBox[{"a", "[", "7", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"96", " ", 
              SuperscriptBox["k", "4"]}], "\[Omega]ym"], "+", 
            FractionBox[
             RowBox[{"106", " ", 
              SuperscriptBox["k", "2"], " ", 
              SuperscriptBox["l", "2"]}], "\[Omega]ym"], "+", 
            FractionBox[
             SuperscriptBox["l", "4"], "\[Omega]ym"]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"20", " ", 
           SuperscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Beta]", "2"], "-", 
             SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}], 
          SuperscriptBox["\[Omega]ym", "3"]]}], ")"}]}], 
      RowBox[{"5040", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "3"]}]]}], ",", 
    RowBox[{
     RowBox[{"a", "[", "8", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       SuperscriptBox["l", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"32", " ", 
             SuperscriptBox["k", "6"]}], "+", 
            RowBox[{"284", " ", 
             SuperscriptBox["k", "4"], " ", 
             SuperscriptBox["l", "2"]}], "+", 
            RowBox[{"124", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["l", "4"]}], "+", 
            SuperscriptBox["l", "6"]}], ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"134", " ", 
              SuperscriptBox["k", "4"]}], 
             SuperscriptBox["\[Omega]ym", "2"]], "+", 
            FractionBox[
             RowBox[{"68", " ", 
              SuperscriptBox["k", "2"], " ", 
              SuperscriptBox["l", "2"]}], 
             SuperscriptBox["\[Omega]ym", "2"]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "-", 
            SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}]}], ")"}]}], 
      RowBox[{"40320", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "4"]}]]}], ",", 
    RowBox[{
     RowBox[{"b", "[", "2", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox["\[Beta]", "2"]}], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Omega]ym", "2"]}]}]]}], ",", 
    RowBox[{
     RowBox[{"b", "[", "3", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"]}], 
      RowBox[{"3", " ", "\[Omega]ym", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}]]}], ",", 
    RowBox[{
     RowBox[{"b", "[", "4", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k", "2"], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["l", "2"]}]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Beta]", "2"], "-", 
             SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}], 
          SuperscriptBox["\[Omega]ym", "2"]]}], ")"}]}], 
      RowBox[{"24", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"]}]]}], ",", 
    RowBox[{
     RowBox[{"b", "[", "5", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"8", " ", 
           SuperscriptBox["k", "2"]}], "\[Omega]ym"], "+", 
         FractionBox[
          RowBox[{"8", " ", 
           SuperscriptBox["l", "2"]}], "\[Omega]ym"]}], ")"}]}], 
      RowBox[{"120", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"]}]]}], ",", 
    RowBox[{
     RowBox[{"b", "[", "6", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k", "4"], "+", 
            RowBox[{"18", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["l", "2"]}], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["l", "4"]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"15", " ", 
              SuperscriptBox["k", "2"]}], 
             SuperscriptBox["\[Omega]ym", "2"]], "+", 
            FractionBox[
             RowBox[{"4", " ", 
              SuperscriptBox["l", "2"]}], 
             SuperscriptBox["\[Omega]ym", "2"]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "-", 
            SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}]}], ")"}]}], 
      RowBox[{"720", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "3"]}]]}], ",", 
    RowBox[{
     RowBox[{"b", "[", "7", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"18", " ", 
              SuperscriptBox["k", "4"]}], "\[Omega]ym"], "+", 
            FractionBox[
             RowBox[{"188", " ", 
              SuperscriptBox["k", "2"], " ", 
              SuperscriptBox["l", "2"]}], "\[Omega]ym"], "+", 
            FractionBox[
             RowBox[{"32", " ", 
              SuperscriptBox["l", "4"]}], "\[Omega]ym"]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"60", " ", 
           SuperscriptBox["k", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["\[Beta]", "2"], "-", 
             SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}], 
          SuperscriptBox["\[Omega]ym", "3"]]}], ")"}]}], 
      RowBox[{"5040", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "3"]}]]}], ",", 
    RowBox[{
     RowBox[{"b", "[", "8", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       SuperscriptBox["k", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k", "6"], "+", 
            RowBox[{"124", " ", 
             SuperscriptBox["k", "4"], " ", 
             SuperscriptBox["l", "2"]}], "+", 
            RowBox[{"284", " ", 
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["l", "4"]}], "+", 
            RowBox[{"32", " ", 
             SuperscriptBox["l", "6"]}]}], ")"}]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"39", " ", 
              SuperscriptBox["k", "4"]}], 
             SuperscriptBox["\[Omega]ym", "2"]], "+", 
            FractionBox[
             RowBox[{"206", " ", 
              SuperscriptBox["k", "2"], " ", 
              SuperscriptBox["l", "2"]}], 
             SuperscriptBox["\[Omega]ym", "2"]], "+", 
            FractionBox[
             RowBox[{"8", " ", 
              SuperscriptBox["l", "4"]}], 
             SuperscriptBox["\[Omega]ym", "2"]]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[Beta]", "2"], "-", 
            SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{"60", " ", 
           SuperscriptBox["k", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[Beta]", "2"], "-", 
              SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"]}], 
          SuperscriptBox["\[Omega]ym", "4"]]}], ")"}]}], 
      RowBox[{"40320", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "4"]}]]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8458301550184183`*^9, 3.845830174454586*^9}, 
   3.845830293156019*^9, 3.8458303813088646`*^9, 3.8458304703578386`*^9, 
   3.8458306300648212`*^9, 3.8459942388138695`*^9, 3.8459942924110055`*^9, 
   3.8459959994025755`*^9, 3.8459960397785664`*^9, 3.8459960729082694`*^9, 
   3.8459966721626596`*^9, 3.845999896402038*^9, 3.847469811562743*^9, 
   3.8474722691094723`*^9, 3.84747447755307*^9, 3.8474745392275248`*^9, 
   3.8474749951956983`*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"83e805fd-9f8e-4ec4-9dec-4936a2b905dd"]
}, Open  ]],

Cell["Solve for \[Omega] and \[Beta]", "Text",
 CellChangeTimes->{{3.847477076325388*^9, 
  3.8474770904596243`*^9}},ExpressionUUID->"da4dabf4-2c82-4243-a2ec-\
739f5dbbb37d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["g", "2"], " ", 
        SuperscriptBox["l", "2"]}], 
       RowBox[{"6", " ", "\[Omega]ym", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}]], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "/", 
       RowBox[{"(", 
        RowBox[{"6", " ", 
         SuperscriptBox["\[Omega]ym", "3"]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["g", "2"], " ", 
        SuperscriptBox["k", "2"]}], 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["\[Beta]", "2"]}], "-", 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Omega]ym", "2"]}]}]], "\[Equal]", 
      RowBox[{
       RowBox[{"-", "1"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", ",", "\[Omega]ym"}], "}"}], ",", 
   RowBox[{"MaxExtraConditions", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8474722836365747`*^9, 3.847472285039301*^9}, {
  3.847472414981752*^9, 3.8474725349116697`*^9}, {3.847474580711157*^9, 
  3.8474746216594996`*^9}, {3.8474746803342624`*^9, 3.8474746822237377`*^9}, {
  3.847475010780612*^9, 3.8474750420191517`*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"ac781d3f-e637-493c-829c-728e5bf8744a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Beta]", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Omega]ym", "2"], "-", 
          RowBox[{
           SuperscriptBox["g", "2"], " ", 
           SuperscriptBox["l", "2"], " ", 
           SuperscriptBox["\[Omega]ym", "2"]}]}]]}], ",", 
       RowBox[{
        RowBox[{"k", "\[Equal]", 
         RowBox[{"-", "l"}]}], "||", 
        RowBox[{"k", "\[Equal]", "l"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Beta]", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Omega]ym", "2"], "-", 
         RowBox[{
          SuperscriptBox["g", "2"], " ", 
          SuperscriptBox["l", "2"], " ", 
          SuperscriptBox["\[Omega]ym", "2"]}]}]], ",", 
       RowBox[{
        RowBox[{"k", "\[Equal]", 
         RowBox[{"-", "l"}]}], "||", 
        RowBox[{"k", "\[Equal]", "l"}]}]}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.847472535522179*^9, {3.8474746141518407`*^9, 3.847474622279033*^9}, 
   3.847474682782958*^9, 3.8474750461666427`*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"42ec19a2-a0f4-4117-9aa4-0b16ffeb65b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Phi]sol1", "=", 
  RowBox[{"Normal", "[", 
   RowBox[{"First", "[", 
    RowBox[{"\[Phi]sol", "/.", " ", "sol1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.845830448389738*^9, 3.845830494325015*^9}, {
  3.8459960800421076`*^9, 3.845996089243245*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"5c2fe9fd-16e3-4e50-a10a-89b4e1498fce"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "2"], " ", 
    SuperscriptBox["u", "2"]}], 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["\[Beta]", "2"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Omega]ym", "2"]}]}]], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    SuperscriptBox["g", "4"], " ", 
    SuperscriptBox["u", "4"]}], 
   RowBox[{"24", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{"7", " ", 
    SuperscriptBox["g", "4"], " ", 
    SuperscriptBox["u", "5"]}], 
   RowBox[{"40", " ", "\[Omega]ym", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "2"], " ", 
    SuperscriptBox["u", "3"]}], 
   RowBox[{"6", " ", "\[Omega]ym", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Beta]", "2"], "-", 
      SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "4"], " ", 
    SuperscriptBox["u", "7"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"597", " ", 
        SuperscriptBox["g", "2"]}], "\[Omega]ym"], "+", 
      FractionBox[
       RowBox[{"40", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}], 
       SuperscriptBox["\[Omega]ym", "3"]]}], ")"}]}], 
   RowBox[{"5040", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "3"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "4"], " ", 
    SuperscriptBox["u", "6"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"69", " ", 
       SuperscriptBox["g", "2"]}], "+", 
      FractionBox[
       RowBox[{"40", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}], 
       SuperscriptBox["\[Omega]ym", "2"]]}], ")"}]}], 
   RowBox[{"720", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "3"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "4"], " ", 
    SuperscriptBox["u", "8"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1641", " ", 
       SuperscriptBox["g", "4"]}], "+", 
      FractionBox[
       RowBox[{"2688", " ", 
        SuperscriptBox["g", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}], 
       SuperscriptBox["\[Omega]ym", "2"]]}], ")"}]}], 
   RowBox[{"40320", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "4"]}]], "+", 
  RowBox[{"a", "[", "0", "]"}], "+", 
  RowBox[{"u", " ", 
   RowBox[{"a", "[", "1", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.8458304744654617`*^9, 3.8458304951649218`*^9}, 
   3.8458306353514194`*^9, 3.8459942949938602`*^9, 3.8459960924782686`*^9, 
   3.845996680850877*^9, 3.845999900870493*^9, 3.8474698201815248`*^9, 
   3.8474765623921404`*^9, 3.8474767107119083`*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"550b8977-1e64-4ec2-a9a9-9329c56c4d7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Psi]sol1", "=", 
  RowBox[{"Normal", "[", 
   RowBox[{"First", "[", 
    RowBox[{"\[Psi]sol", "/.", " ", "sol1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.845830681811406*^9, 3.845830695132513*^9}, {
  3.8459960963921566`*^9, 3.845996100928521*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"57554cdf-30f5-43b4-8290-ebaddef0f8b7"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "2"], " ", 
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["u", "2"]}], 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["\[Beta]", "2"]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[Omega]ym", "2"]}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "4"], " ", 
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["u", "5"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["k", "2"]}], "\[Omega]ym"], "+", 
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["l", "2"]}], "\[Omega]ym"]}], ")"}]}], 
   RowBox[{"120", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "2"], " ", 
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["u", "3"]}], 
   RowBox[{"3", " ", "\[Omega]ym", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["\[Beta]", "2"], "-", 
      SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "4"], " ", 
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["u", "6"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k", "4"], "+", 
         RowBox[{"18", " ", 
          SuperscriptBox["k", "2"], " ", 
          SuperscriptBox["l", "2"]}], "+", 
         RowBox[{"8", " ", 
          SuperscriptBox["l", "4"]}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"15", " ", 
           SuperscriptBox["k", "2"]}], 
          SuperscriptBox["\[Omega]ym", "2"]], "+", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox["l", "2"]}], 
          SuperscriptBox["\[Omega]ym", "2"]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}]}], ")"}]}], 
   RowBox[{"720", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "3"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "4"], " ", 
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["u", "7"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"18", " ", 
           SuperscriptBox["k", "4"]}], "\[Omega]ym"], "+", 
         FractionBox[
          RowBox[{"188", " ", 
           SuperscriptBox["k", "2"], " ", 
           SuperscriptBox["l", "2"]}], "\[Omega]ym"], "+", 
         FractionBox[
          RowBox[{"32", " ", 
           SuperscriptBox["l", "4"]}], "\[Omega]ym"]}], ")"}]}], "+", 
      FractionBox[
       RowBox[{"60", " ", 
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}], 
       SuperscriptBox["\[Omega]ym", "3"]]}], ")"}]}], 
   RowBox[{"5040", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "3"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "2"], " ", 
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["u", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["g", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k", "2"], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["l", "2"]}]}], ")"}]}], "+", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Beta]", "2"], "-", 
          SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}], 
       SuperscriptBox["\[Omega]ym", "2"]]}], ")"}]}], 
   RowBox[{"24", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["g", "4"], " ", 
    SuperscriptBox["k", "2"], " ", 
    SuperscriptBox["u", "8"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["g", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k", "6"], "+", 
         RowBox[{"124", " ", 
          SuperscriptBox["k", "4"], " ", 
          SuperscriptBox["l", "2"]}], "+", 
         RowBox[{"284", " ", 
          SuperscriptBox["k", "2"], " ", 
          SuperscriptBox["l", "4"]}], "+", 
         RowBox[{"32", " ", 
          SuperscriptBox["l", "6"]}]}], ")"}]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["g", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"39", " ", 
           SuperscriptBox["k", "4"]}], 
          SuperscriptBox["\[Omega]ym", "2"]], "+", 
         FractionBox[
          RowBox[{"206", " ", 
           SuperscriptBox["k", "2"], " ", 
           SuperscriptBox["l", "2"]}], 
          SuperscriptBox["\[Omega]ym", "2"]], "+", 
         FractionBox[
          RowBox[{"8", " ", 
           SuperscriptBox["l", "4"]}], 
          SuperscriptBox["\[Omega]ym", "2"]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Beta]", "2"], "-", 
         SuperscriptBox["\[Omega]ym", "2"]}], ")"}]}], "+", 
      FractionBox[
       RowBox[{"60", " ", 
        SuperscriptBox["k", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[Beta]", "2"], "-", 
           SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "2"]}], 
       SuperscriptBox["\[Omega]ym", "4"]]}], ")"}]}], 
   RowBox[{"40320", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", 
       SuperscriptBox["\[Omega]ym", "2"]}], ")"}], "4"]}]], "+", 
  RowBox[{"b", "[", "0", "]"}], "+", 
  RowBox[{"u", " ", 
   RowBox[{"b", "[", "1", "]"}]}]}]], "Output",
 CellChangeTimes->{3.8458306967193317`*^9, 3.8459942975571337`*^9, 
  3.845996101839879*^9, 3.8459966848260403`*^9, 3.8459999033651285`*^9, 
  3.8474698295762806`*^9, 3.847476565418931*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"1a11f72e-68b2-4e81-88f7-7fc690ba92b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Phi]solf", "=", 
  RowBox[{"\[Phi]sol1", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Beta]", "\[Rule]", 
      RowBox[{
       RowBox[{
        SqrtBox["3"], "/", "2"}], " ", "\[Omega]ym"}]}], ",", 
     RowBox[{"g", "\[Rule]", "0.5"}], ",", 
     RowBox[{"l", "\[Rule]", "1"}], ",", 
     RowBox[{"k", "\[Rule]", 
      SqrtBox["2"]}], ",", 
     RowBox[{
      RowBox[{"a", "[", "0", "]"}], "\[Rule]", "1"}], ",", 
     RowBox[{
      RowBox[{"a", "[", "1", "]"}], "\[Rule]", 
      RowBox[{"1", "/", "\[Omega]ym"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.8474702989838266`*^9, 3.8474703769893236`*^9}, {
  3.8474765856013737`*^9, 3.847476642885453*^9}, {3.847476677142846*^9, 
  3.8474766916316214`*^9}, {3.8474767423902807`*^9, 3.8474767478980093`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"a83695c5-1d20-4ece-b8d6-393c05f05ecf"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   RowBox[{"0.025967261904761906`", " ", 
    SuperscriptBox["u", "8"]}], 
   SuperscriptBox["\[Omega]ym", "8"]], "-", 
  FractionBox[
   RowBox[{"0.11051587301587301`", " ", 
    SuperscriptBox["u", "7"]}], 
   SuperscriptBox["\[Omega]ym", "7"]], "-", 
  FractionBox[
   RowBox[{"0.04027777777777778`", " ", 
    SuperscriptBox["u", "6"]}], 
   SuperscriptBox["\[Omega]ym", "6"]], "+", 
  FractionBox[
   RowBox[{"0.175`", " ", 
    SuperscriptBox["u", "5"]}], 
   SuperscriptBox["\[Omega]ym", "5"]], "+", 
  FractionBox[
   RowBox[{"0.20833333333333334`", " ", 
    SuperscriptBox["u", "4"]}], 
   SuperscriptBox["\[Omega]ym", "4"]], "-", 
  FractionBox[
   RowBox[{"0.16666666666666666`", " ", 
    SuperscriptBox["u", "3"]}], 
   SuperscriptBox["\[Omega]ym", "3"]], "-", 
  FractionBox[
   RowBox[{"0.5`", " ", 
    SuperscriptBox["u", "2"]}], 
   SuperscriptBox["\[Omega]ym", "2"]], "+", 
  FractionBox["u", "\[Omega]ym"]}]], "Output",
 CellChangeTimes->{
  3.8474703131570196`*^9, {3.847470358362115*^9, 3.8474703783466434`*^9}, 
   3.847476694371437*^9, {3.8474767268270454`*^9, 3.8474767501805954`*^9}},
 CellLabel->
  "Out[150]=",ExpressionUUID->"6d63b141-9cb1-4ca1-ae59-51542bef3a69"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Phi]solfin", "[", 
   RowBox[{"z_", ",", "t_"}], "]"}], "=", 
  RowBox[{"\[Phi]solf", "/.", 
   RowBox[{"u", "\[Rule]", 
    RowBox[{"\[Omega]ym", 
     RowBox[{"(", 
      RowBox[{"z", "+", 
       RowBox[{
        RowBox[{
         SqrtBox["3"], "/", "2"}], " ", "t"}]}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.847470384769663*^9, 3.847470418977524*^9}, {
   3.847470460042873*^9, 3.8474704638729*^9}, 3.8474737392668314`*^9, {
   3.847476797415329*^9, 3.8474767989186363`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"eca6ef02-2bf1-4b88-932a-ba1cab9d5d7d"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{
    SqrtBox["3"], " ", "t"}], "2"], "+", "z", "-", 
  RowBox[{"0.5`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "2"]}], "-", 
  RowBox[{"0.16666666666666666`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "3"]}], "+", 
  RowBox[{"0.20833333333333334`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "4"]}], "+", 
  RowBox[{"0.175`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "5"]}], "-", 
  RowBox[{"0.04027777777777778`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "6"]}], "-", 
  RowBox[{"0.11051587301587301`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "7"]}], "-", 
  RowBox[{"0.025967261904761906`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "8"]}]}]], "Output",
 CellChangeTimes->{3.8474704213948135`*^9, 3.847470465602102*^9, 
  3.847476801672285*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"ee1d3174-ea1f-4290-8878-33037d1988b1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"z_", ",", "t_"}], "]"}], "=", 
  RowBox[{"1", "+", 
   FractionBox[
    RowBox[{
     SqrtBox["3"], " ", "t"}], "2"], "+", "z", "-", 
   RowBox[{"0.5`", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "2"]}], "-", 
   RowBox[{"0.16666666666666666`", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "3"]}], "+", 
   RowBox[{"0.20833333333333334`", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "4"]}], "+", 
   RowBox[{"0.175`", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "5"]}], "-", 
   RowBox[{"0.04027777777777778`", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "6"]}], "-", 
   RowBox[{"0.11051587301587301`", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "7"]}], "-", 
   RowBox[{"0.025967261904761906`", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], 
     "8"]}]}]}]], "Input",
 CellChangeTimes->{{3.8474769896396646`*^9, 3.8474770008510013`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"2a430bc7-1503-42d8-bcd5-5b8f96c6f588"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{
    SqrtBox["3"], " ", "t"}], "2"], "+", "z", "-", 
  RowBox[{"0.5`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "2"]}], "-", 
  RowBox[{"0.16666666666666666`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "3"]}], "+", 
  RowBox[{"0.20833333333333334`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "4"]}], "+", 
  RowBox[{"0.175`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "5"]}], "-", 
  RowBox[{"0.04027777777777778`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "6"]}], "-", 
  RowBox[{"0.11051587301587301`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "7"]}], "-", 
  RowBox[{"0.025967261904761906`", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        SqrtBox["3"], " ", "t"}], "2"], "+", "z"}], ")"}], "8"]}]}]], "Output",
 CellChangeTimes->{3.8474770044701366`*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"2bc8bec7-ea82-4cdb-b59f-6c15dfe06009"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"%155", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "0.6037036808012747`"}], ",", 
       RowBox[{"-", "0.543476710270031`"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "1.4138898460263842`", ",", "1.5705742089105743`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[186]:=",ExpressionUUID->"a91aeaf0-e980-4ce9-b343-299db3a674e7"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`z$$ = 1.535149971445105, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`z$$], 1.4138898460263842`, 1.5705742089105743`}}, 
    Typeset`size$$ = {450., {131., 138.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`z$120112$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`z$$ = 1.4138898460263842`},
       "ControllerVariables" :> {
        Hold[$CellContext`z$$, $CellContext`z$120112$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[1 + Rational[1, 2] 
         3^Rational[1, 2] $CellContext`t + $CellContext`z$$ - 
        0.5 (Rational[1, 2] 
           3^Rational[1, 2] $CellContext`t + $CellContext`z$$)^2 - 
        0.16666666666666666` (
          Rational[1, 2] 
           3^Rational[1, 2] $CellContext`t + $CellContext`z$$)^3 + 
        0.20833333333333334` (
           Rational[1, 2] 
            3^Rational[1, 2] $CellContext`t + $CellContext`z$$)^4 + 
        0.175 (Rational[1, 2] 
            3^Rational[1, 2] $CellContext`t + $CellContext`z$$)^5 - 
        0.04027777777777778 (
          Rational[1, 2] 
           3^Rational[1, 2] $CellContext`t + $CellContext`z$$)^6 - 
        0.11051587301587301` (
          Rational[1, 2] 
           3^Rational[1, 2] $CellContext`t + $CellContext`z$$)^7 - 
        0.025967261904761906` (
          Rational[1, 2] 
           3^Rational[
             1, 2] $CellContext`t + $CellContext`z$$)^8, {$CellContext`t, \
-0.6037036808012747, -0.543476710270031}], 
      "Specifications" :> {{$CellContext`z$$, 1.4138898460263842`, 
         1.5705742089105743`}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{511., {202., 209.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.847478198214325*^9, 3.8474782003091884`*^9}},
 CellLabel->
  "Out[186]=",ExpressionUUID->"54c5d501-35e3-4854-96ae-1d7ea0c5880d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"z", ",", "t"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.847476892855201*^9, 3.847476925841616*^9}, 
   3.8474770096094685`*^9, {3.8474771604063215`*^9, 3.847477163503784*^9}, {
   3.847477419120247*^9, 3.847477429920103*^9}, {3.847477775126055*^9, 
   3.8474777793112574`*^9}, {3.8474781772654905`*^9, 3.847478189696664*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"e46ea8ff-02f6-4e9f-b66a-1c50c0b2134d"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
AuuqBjJv4BL2K0+tO9yVeQOfk1RpJTOjhvkBP+WZvGjkViHzBi6VlywjcfkM
9RjvCns4ZvWarFvMD/RrHbofspFYx7yBn2wvM8d5dE/qUcdCcYWeoe185g16
6aRVkhGHDXh/DX7xxwabM/carKHn+N6dU+MDL6gxb9BrR14Yqdm/iLmC/uOr
ucfcO77h7yz0bl1zfb1tazj+A15R/yzf6VejNfSoE+3atK3kbx3Pe9BPiV84
cZvaTeYT/PT+zSbv944UQo86ob5eZ3+bqTJv0A+anf14Wcpa5hN8p/7hUh/7
E9Sjzp21STdT5vkxb9AX3Xzk4+P2gBz6BSlrE2N7JzCH0J+L+BY6w7yCOQQ/
OKpp5tucLsxhy/GsjTv5Yp4gsZsRcwjudsck45dKR+YQfOj0uSPeP8nl/Q74
wMze5joeT4XQY/xw0KZfAaceZjCH0D/Wvns0bsl55hZcxfn6X3tTH+o5PhnZ
pUH+/CHmEHrNtHfP3jVbMLfgqz5arrrlYiyAHnXC3E6lntLVZT6hPxvhtmJC
clEc8gn9tl9pzzbej2d+oLeUX7DQdnkj8wa+dGuHzq/ty6hHnRp78UdhZ9t+
Z6HfPt20r2f0IN6vgUcsMNbc19OdeUOdCkvf0C+rHJgf6BOP2JuPmXGEeQNP
ypV/1DwzmnrU0Ws0WLqnwwXmCvq7c36fLmufwVyBz3QYLNy7qZm5Am+6vtTA
IUKbuWrxrzAue3D55dGbNJgrcKO0a7njNBuYE3B/v1gbj6wE5gpcrJft2OPp
l6nHuOuuF96Kj5MfMCfQXx58uHiZhC9zBf4t1+VmQsMY6lHneU63wKX2q5gr
6PtlKn5ysjHl+Cr4hfF3a7c+lGauUCd6UFC05zZd/p5C39RDx3b1zULmCvr4
caoHBh3P5/kNesklCcXDl1XwdxZ8957TGh+fNPA6EHUGW+WmrS75zrxBb+lx
vH1k9HfmE3zx9KVzTSb3430u6iT3uNHFULWBv7/QL1QOXhMbv4z5BP/cbbC1
l2Ew84k6ub4Zul7am5k36DvF7OrknHGL+QQf+OmT+m31VOpRp+JNr4RKIyHz
Cb3a6LuzbueUMJ/g93Z3Wrf6oVw88gleL/e587uQPsxni38J1hMKIx9uOibL
fIKX31CYeCbgE8e7wM/ad63/GZ3MHIJbWHWzNpCIZG7BN6qN6NF3w27qMe59
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
JbDV8cqxxjaqrnXG04HZr8zIUfh2Zet56ve7qK785YYTyoxLt69ZrN9fg3jd
8bNxQW8VGReUxvtXvqR0C7N3npmZWKzIOPdgSH9VTR3ituOY1090KjB4zIpU
XVd0Iu73qrvquKccQ/fzF8+NShyYr2dGK5Z4ccgwrMrtrvJOo57DjuLzD8fM
lWLk7LOYKSBF/b64XWVyUvdJMs7LTvDrWkW9pwT6I3Ydz5Fg3Oko+FE6nvq9
MK+peSywmfJXfX51xgmGV84UVtEy64rcUxQevT9qn3KWMuubu92NkKwm5EFF
rF4woOBv/UZTC8PgeI/0X/uejccuGXK0TWI4uBVrWvNT73fJfVF9ElaTGBav
bZ7tq6bwoANdBfueTfprngbzrvvXrl6u+q/3jo27nZa30N/zMXbziv/1uuzi
Z/dcYsc/u3yxmxexm4f8r89Pdu9xds8Nds9zduOQ3XOe3fOT3XuE3TyE3bhi
93thN/9kN9/7X9+D7J7D7J7b7N6/7J4D7OZp7N7v7OZ77OYJ7Obt7ObJ7N6P
7OYn7J577NYR7N6D7OZF7J7D7J5L7J7P7OZj7ObV7OZ17NZN7N6D7N6b7N6z
7N5H7N5f7NZ37NZH7N777N7L7N4L7ObD/+t7md08gd06iN38nN08h926mN38
kN18kt16gd06jt06nd16lt36hd38h926ht16k9289H9dZ7Gbh7Nbx7FbF7Ob
r7Kre7CrD7Bbb7KbT7Jbh7Kbz7Ob/7Nb/7KrD7BbR7OrM/yv85//db7X8W+9
UvGv+JeP7YP+C6fbvyid9OrPnymIS2euLec/Ojsb/j3gWkK2ryZul82G/Tz4
+w/rJu1RqxPOnkXGMeDbL4UF95i1kfHdg32sEq+MdGJyWaTOycoCPHRR0lvP
cUdZ+qQuD9edNaD5cdYRaYYBea8DfoWcA7kMvpdM8NyCkCsOKT/MDMg8EnBF
Y1/TWXN6zZYRvSWe37gl98R+35MswifiH3N79tTtYwH+13gG3gDPDGcWpolN
R94AT/dO6H2YLJQN9wV4p5nm1H5LiJMbv4d45J5O+/W9RWZwX4CrJ873bp3U
j/cFeLxuUNd8fmWMk/4cgLwD/mVgh8dSYSOMH3CjozO6FnydivEDzrXMe569
0m/MC34vb+txuUe3q5kQP+DRJ2u2jpR1YPyAu/onn+Z7UcSE+AH/XO7lKbN3
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
EvkuHD9Qfyu11nVSLqf2waFe50b843ybxH9Vet16l7xNmF/oUy4hOJ5XRuIZ
Due/5hdwE/OoQXA3icRU0zO/qHM/iB9V0u+MumViv87c5Vo4Yxbi0eS+dLqq
UpkD1PmcMqTvWLJqhOPzHibtvLgvZmKk/gn5EiT2mr67HD86Tkdd3A9Sr7uU
m1p8cI0i5iuA9Bf/oPVBwzlIybQ+aOgvlkgLXsNZ0YbPgYOkTji3b/d029gv
yP8tNnmB/ugSoq+D/AqR+HuX3dZW4tKg6RZ+mLUlMIc2uzBwngZ1xatb7qw2
/d2H/qEOySL+Ib9wvy6bPioNhwVj3qHP+izBIe+yJB5tWSWfy0tYmPeJBD9l
KOPfxCGI++zgP5b0a0N+pYk9fZ99gPSP0/fpppB+ap/eJxnrpYqxbiNLcC+C
wzjZPPp+NzPUbA5Iv5iA4ySZ8HOX1IFhPMD5VDcdN2gvWtuPuhRJ4t+e9HFD
fl2J/90aJUksb6oPq4j0ZfP+Whooz9ODONQ/M8pLClWnUnoJqJfOG/xds9Kp
F/MFcRrR8gj94B0JY3V960g8qhd2vnStdsZxAn3rl6Kd71h+9cRxAvXVxJ1D
Il5KUxGHeqw50Q3CeAAeFC9kCin33MRxAn3uFgSH8QDxpAqdGblcJo3jAfy8
7wmIW8o/G/MOfNLHA/BJHw8+pI+7Ze/eZJXnj3E8QL95A8FhPIzWYTgZIvwx
j32SA3A8MAkPX0ndG7//SuwtOb3bJlo9QT0Smf8zJtS+DMtXq8LxAP43Hf5d
It9J5Rf62Q8qqMh+m0zpZqGv/IHyUJf81AHEyfqI8drl7nyuG9TzAeI8t2ts
vqAvPqdprJ4Q4pccsai2Oh6IOPTLX/nHR3jzlrPoB+rJ7WvCr6YnOCIOeV5J
9Irw/96EZ2+n9N5zb1k0fQ4X4zTB8RwVEk9i8t3Fn7zVcTyAH3regU86DnzS
x8NG0p9+9Kma9x5GLI6HzQQ/SHDUrY3WARh50UdN6m844Hgg60eGMKnzQ965
ib3r3QPq2RafUc8G58LduvFDvlUsk+o3J9d9Tevfh/PifpH+fdSzEf+LeZ89
c1zfgDj09YslvXW6uqgMcaiHb464EOfrLI7rQaifh8zxCbj3aALmEe5r9tqx
+YXzAUJpeki43+TAjzpuD+Opc6RJPJmXnbIjDt5BP1Bv7/Ab1UkCDvX5cuIf
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
JddhvnjB1+WXM2opMU7Ai2a8WydOcFNinMjnedoH8jyfSvFKE2j8gG9odv1z
8uJgPheBa4wK0axq5EJ5D/WYD156fMPKNZW4bgf4oAUDvwx+JgnhNH7AJ3sF
GThvKxSQVwJce8PBH7HHEsh/bcY8L+drD79epZSHpQ7zwR1fdG1gYKN8TeNE
vk6p/G425dYj1XdhU27dIbuVm2dUOvt65TiNz3L7WFU+4nrlOD1P+f3t//zR
9cpxVV7a2sx3Lop0tQ5wUKryltZgPuxRM+/kUzrK1eQPAu8lrBvivSpEukp+
GfDnrimG4660l46SvwN89al796ev0hJ/N1Od68B95tv5W8y4IiSQHwG8WdzW
jMBOhUIinWPBrcdOWP4ztI2kyvdhzXzQ7MSoWnfiJZWuwob55qQ7dtVMS+i8
bVNun6/SbddlrnlMI3uKsZtSdc9ai/k6m+01QlvVUrahcze4H9X3OULnavCI
F5oNFM/uSg/oXA1uZuBTcrfOcukJ3fuCh7+be2HPeUdxPekdwRWf730eHpVK
fqXKXMdnW4ZXZI0eP4StdA8BXrrs1ug17b9SfF1Z3Z9FVPdHld+nFvNxT/4q
J2ZcJb9SXeaDH2wJXueXQfmzbJjvtqm0zeO5sfIUjTf5OUiVT6Q8d6FxCD64
8daWEenOSlUdLGvmGR2yt6wZ4KBcRuMTfEbq5Prpj0yU99X8qP+dp5xP/uo7
Ske5m8Yt+Ls7iTY1NL5Kn0iPAr5o3a8h57RCOG8yeOtzC4Mm506RLEnfAP5y
5zY9vSXu0j4a5+Cv+0+Idd1sLabTPTf4pp0e+0sDNCn/fgqfB6fVrFyz5ppE
xWzy94E3aXvgyoeWNwRd8neAW9oNzkv7h3okGnx+TKjhcfzVoELK46bPfGuM
k/6G/+aFbmr+5GKFflCbuQ5xbTnvP7j/2o72Od/Ww5/M/NLG3IFr0u5JqjoN
tZln2LgVDdVPoLpo1sw73Exo8mdhvqSqc1CPuan7pS0NfEuoLp0N8zHGyRl9
B9fC+GE+p5+DwuhEfdpf1ZdwLu7W/WzrO89bK71p3gPfHjtKjKnpoBxA6w63
pzgCms+Zj7rSOOGvmY5SdW9hxtxu8MiOr6PeS/a07oC7eJ8rHdDETwqldQd8
7rvWs8InO1Ke05/Mm1g/SdsoalCdoRfMD5yeMb3nw1RFEMU5g/89Uxht8fem
cJ7iacH9zH432nziB51H/jFvZTR2XK+phUITWlfA11CeXmuK0wN3GNKk+bxr
bdhvCF4SMMC165AA6QWtd+BNW2/JqPQ2g+pe1GO+c82LhCRdE6VqP1Ofuc75
SY0Gnq6vfEnrI7j38Ih6F1o6k7+r/DmxDvVTwXrK574X7lE71q6owusX+Ott
t7O6v3knYf0Ct+w1vcPFQ8ES1i9wrRHJioCeLaU19L2DH1DGz5jySClcp+8a
PPWq++XVmwqFI/T98vOsfB3WbFEHqYjWL/CRTw2XLXbcL2H9Av9n8XBq0e8E
CesXeOt1K/XXhZfyOlXB/oHPs93CQ1sue5ArYZ0CnxqzaozHmCgJ6xTnFwkb
8jR/5RIJ6xTn1Z6tiqvFOgV+oMvniUZSqgLrFMeBNZhzOmdYjoB1ivWzVUYZ
vE5IEbBOcV7Ym+3Tm5yYK2GdAl9f6Pl0Zvh1CesUuHOObVb0n0wJ6xT4r/Gq
ujZYp8Dt3oZse3HLWYl1Sr6/8q1g34V1Cuf0Vkfs+y5YlYF5iXnmbHPl2/Hv
JKxT4H6fe+5wNL4qXaB1Cnxtx9ptujsES340DsFLDor6I30mSvdonQLftNLf
esx4F2kPjU9w8dKlq9+L64iptE6BV7qz9uzb8LsC7uHAjRddbaO9MF+oResU
+x+m71MMPFAoHKbxDG51e3yzboMaSB+RNxnPY/Bx6MX7gnSDxjm4dZDR4omj
NkkLaJ0C/7BlVunByP18/wReoJW9xmFVjORD6xR4wvsCx3e9ElmfAX5Nr8Xo
oiMFUg9ap8D3frr05FK1SkqsU+C5J56/0VhRW+lL6xH4tvz4a3uXicoztB7J
/TAtaD2Sc6xH5fw2tB7JOc1vZXkvRv12jUh/K2GdAq97cm9KYJUoCesU+LaR
Z9sb7Q2SsE6BZ5FOHusUeLOTtVIs3zWVsE6B1+ue7DD6RrGAdQr8bB+XcNv1
OQLWKfAHOz88bXM/WcA6BV70okg7aU8HCesUeJO/86taNfGRsE6Bp88KalVp
y34J6xT4l+8Bd1McbkhYp1jvY5jVdljnRAnrFOfxIr091im+P988eH5d40pK
rFPcPjRzxYs5NkqsU3I/GNYpOcc6JedYp+TcRd1Pwny7up+Euba6n6Qivxyf
L5bQfC7nMn8dc32a5+W8Ps3z4D6je5133duO7jdNme91989pF2etPEDzPHgj
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
n8SBrPsFv1o8VCeg2WHKC/mC2xvrP/x29kFjfo/g9/f7rQv4UJ1115z//0H/
76svlFI8/k9u/7mD6NVo4RvWY7NO4O6MXYpzP6huqxH7b7evjDw0O65AgH4J
3ENn0taZQhHVDTVjPksvs49dqTfrNvn3Xk/b+6p3D9ZtgpvHbtWNDjnKemNw
p3ovl08xfck6Vfh1T9O9Pzj8jQuWLL5klXqO8hv843v8uN5NSlbojmf7g+ue
qN3qWYOGrB8G/0I6AXD0X6NVyIE73Qfwe0H7xV+97E8etmL783OSfgAc/QxI
bO04RajOum60v0f6AejH0D54cbuNc4x+8XtB+x0bawoHnxuzrgz8LOVVAEc/
Q5JnJs0bbc/vBe2PUb4FcLS/fzG0yyW37fy+0H4+6RCgr4NfsWjL9LOZ4+Op
joIm2y3a8Njnw1fn8vtC+1sGzYs05+zm94X2Y7/3sbw3IUuB9wWevt3VcXNq
A35f6Ofhk2eur782FPFe0L7tlD8/J/X7LuB7AT9rdGTG6GUfFc1pvw5+e+J5
DbeeRawDR/8H9Rp471pTxPbnfralT2/Z2YPtj/bOH5c77QobwvYE31i99YoS
k5NsH45zf6ryP+P3wr90YeTVltpH3/Fzon1jiqPHvM1+1P0XJ4RYFvBzov0V
8jPXpv0b2q+ff9EytvMEqtthxP6QsJgnMS+Wj+PnBNcOW7m9bi1LEXHW4NEB
Kj0hngd8uENxfu5kU9brwg8Q1U/v996DZ1mvy36JkCytxJn9ef5n/1KDgIyb
VUxEPCfnL9rZJDG8d66A52TdSM8+4y8/zGAdL/j+uOktrrf7xXnqwGsUV55w
ssRRwjhhPcnK1Nn9R5XlCQTvf3LHobZ3d/C6Cd6o+751rXr0kumW84QXy7Yt
ioh7JtMt5wlTtYecOLB0l0y3nCcYVZtqtb+nvaiuW84T/t1VGvfrcofz74Gf
pnrl6vrkPKHA+mJa1/5e/LvAW5B/QF23/F//bQ109tY4xb8LvBP5AXLVzjvF
wp3aF5p41OrH+lvWvWsvbL543gGeH8AXVzezfXOuEuVf1mM+zMEzq2hpmS4X
POOp4cznwZ+FBLVzTbHwyy7v/eD++axfBR+wqlnbZROLhGtq55pi4VDXE3Hn
DkxkvS7r7U02ufQa2pv1uuAlU4bv79jvOH/XrPfY5NWv/bFXkr5MFzGMdBHg
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
vZ8mf87/AWJBqek=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxEnQe0FMXTxfe93Z2dtzliQDAjKopEFRPmHDBHlGAWQTFnDCggmEURMSMi
ZhTMATCgGBADKooIghEjiPG7P27/z3fOe6drart7enp6uqurblWv3Xfg/qc2
JxKJdDWRSCo9p55ItG5KJBaVE4n5cSKxZiqR+FPXt6UTiQOVYU1l7llMJNqJ
v3MhkbhL/IPEX1v8hZlEYl/RddFfix6q/4boIaVEoq3y91T+b1RnL+VZTfy5
+n0t8f9V/Z+JXlt0QvzrVGcn0UXRB+tehyn/jXnRSlvTBuX/Qvk7KE9Wec7L
qm0q2k7pTSrbVfyy+FeL3lR0XvQDog9R2XairxK9ofix6CvVts1FH6C2Hah7
Hao81+te24heV/wdxe8hurXobUWPUv4DlOca5amqzwYobd0qkaiJfkftOqWS
SJSU/wPlSSt/Xfz3xB8gfkH0K6L7i45FPya6t+jVlH+W8jcpf0b8R8Q/Svz/
dK+x6q+lSk/W/xzlSSnPI3r290U/pHxF5Z+u9FjlXyb+Znqm9rr+XPQ6anMz
/aCy+yv/SLW1q+61nejzRR+od51W3tOVzhbvQdE/qx8rqvNk/d5Zz3Wz6rlJ
/z+Kv6fyzVCe43Svm9WH+6hMVfXvqjr3Fj1MZQ4V/x/RnyrfArV9p6Tfb2vR
xynvTqJ7amxdJPr7XCJxudp4lug9xR8i+gzRe4j+Vr/tozSt9Bv97y06qXR9
1XOO8uyl60jt7KN7rqp2Pin+zfofpbYOUx+drjxfKf8jevZBor8UfabqP0n0
Lir7t66PUFpW+o/+jxRdVfqJnnEH1XOf0juU/zrlP0y/XS36MtH7i+6o34eI
7iX6Jz3vOfrtFF1/ofK7ifefxuFLyrOZ/seqPf+qDbeK/kHps0rv0P914p+o
siWV/ZE61Yd50Zup7eeLv4P6bYX4Z6tMUvyNxN9ceXqKf6GeeSPRCfHbi/+J
6kuLnq/8lyr/zsozRHk+0D0uz/j7nak0ozxfU6fqX1X076LPFb298i8XPUt5
YvGXiL5c9ewi/mWqZ4DyVMX/SfyLRO/KOOTbEb170t/RZi16Bv3fojp2Vtv2
Ev9KlT1deRoq+6vKdhC/RfSmavNw8fdI+vtdqPbvmfR3epn4u4mORLfo/T6h
ckdrvHUQf7r4k3WdFf8ppceIP1Z1XaO8f6jv7yz4fa0Q/WfO762gtB5pDOu+
I/XbDUpHKD1Ivy3JeRw1KV1b7b6g2eOsXPJY/VT8xTmPzYTSrmrnKowv/bZ6
7DHMGC2o/lGq90pdT1W+jcT7SmNgsNpzmHjvijdF/xvyTYh/b03flvJP0nOc
rTxHKM9s/T5H/9spz+/Ks0bJY2ypeGuWPPZ+Ev1zzmMwUlpQW/qJvz1liv72
nxQ/J34f5mnx5+l6Z6V/qs5F6r/PoPU4+6s/5+v6Y13fr/a/rfRX8ctqz4ei
z1S5i/T/n3jPqewS5f1c/L90PUX1D9H/36JPVp5flD6qPAepzgXK94nyfaj0
XaW/6be9xJ+r69m6flPtnKN0sMqNKPjb/1r02eoPFqJdmbty/kb/Up3vi96W
ekRfWfD8sEi8ZarzvJS/7TvVnxuJnqD+/Eu/Hc68qHT1jOeBQ/VfUx+eoPQz
8bfUu7uh2fke1vW69JPqP0b19xT/JfFeUdkVavNH+u0E3WubpL/TvqK3Fv29
6OeV5wfRs5j3xd826W9kH9G/in5f9DKlHyhN6f8Z5f9e12/y/jQHbin6LH0j
a6tPfhK9uu5/ntrZQ/Q54rcV/0fWSvG3UJ0zRT+vshuJ/jjpbyOvZz5eeZc0
tGaK/5r4U8TPif+00j76Rg4Q/0/x5+r6bbVhK9Hfim5VddsGKk+j6vaeKnrv
uueSs0Qn1J5t1ScvqE+eE+8PsVbTfzfVOS/pe7yp37ZQulR9GCv/3sr/hngv
67+T+N+InxZ/T/FfZ7xovB0ieiv9Nkf1HM76q+tPRB8l+iDRD+qd7iX6ObVr
pspsrrw/qp5HRK/H+i/6UdYD0V+Kvl71b6Jyj4u3qsqcrj75Tn2yjer8Uu18
UflWEX+Q+F20XrRW3y4Uv6a+naPx8G3Sa9tk9c+nSc8vbZRnseiG8qymsvPE
O0N9srroL/hGRB9X9xg5jbko5bnoUF1fI/oK0QeIHlfw3LNMbZum9A7WbvXh
GapnnOjBSl9uNj1J/E9rznOm+Nfr2R4Wr5fS03V9u/inKf1Uz3EWbVT6QN7f
CN/KDfQR37fSC5TvXtZ6pYfruR7gfem3z3SviaKfFf2Fyl6gso/pWV9sdv0P
ij9B9PWix4m+SXVNUXqw0hv1/5Tog5R+qbIX0mcqe4re6YPKfwnfb7Pp55Tv
+Mj3upg1VGVuEW83pW/UXH8fta29+vBc0Y/om3hf9DmiHxZ9uH4bKfowZKK8
5zHms/6qf7D4Zyc8/0EzB07Jez5nXh+ue1yr33fKel6/OOm5fYSurxN/Z6Wr
qm1Xin8I37XynM73qN8ezHseZj7uE/jMpbuqHeeJfrTsuYp2Ml8xx8Bnnhmq
eoeojm2UPpn32sEa0qR7XZC0bPNY3vMb89wGet6zGQ+q82+N1fNF797k+Y0+
QZ7YX/cdSn8qz5vqtxtE9xNvlO5xh+61R9YyN7L3HgnLZMhmu4vermp6W6VX
6b4NZHnd91yV2Ue/r6t0+6rL9lR6jq73Fn8dpR/WvS5vxTql613EX1Ppmfrf
TnRrpTtpzd9WdA+lZ6v+hOq/OHyDXVV2fNlrTrek1x2+I+j7y15Puie9pvBN
QU8Q/3TVu5l49axlIGShrWhT1XPX2krPzHttYo06S/l2Ft1W6QfiD1SZezUm
LxVdFH1dzvIKcssOyvea+McwJyvdXN/FNeKPEf8alb8TOVfpLP12PPOo0pG6
vlX83ZVuqfzXKv9tun5Dv/VBRlW6lfjXiT+W+mumj1Y7r1WZ+8Xbh3Gn/wmi
91W6p/LfpjwP6HpWZJlnx4RlKWSqnUSPqJnfXfVcUzN/i6rnsS6i71NfXYac
obybK31cZUeLf4+u31GbTmB9UHpS1fwT6fuq+6Gr0pNylvcfUdmX85aXkJsO
0W8jmDNV/7sah0doLuuluj8Q3TvM1dPVngdFr6G0B32kstuq7KHi7dvs9aAU
ey1g7h5Y8Lw+S3lOTFnmYc46s+C14B3WZdVztXhbi/5V/GXiby3e/RqHD6lM
G93rFNX5lfiXIzPrtysYW8p/ofh/in+trk8S/SWypOjpou9WX9+l/2Wq43vx
h4m/QvX/QRtUx9/ItqJHsObpXaxAJtf1hznPKyvUPxepnr/Zm+r6g5zng+Xi
H5eyjLeNrrdreA91hNaC/cTfodnr394pyxWbiX5FZTsr/U5lX1Sda+j/NrXt
loLl0t+Q92LLKsx3v+j6QKUtSitq240py58TS577PmZN0X8X5flBde6R8nrd
Udd3Ks9uomfo97zqHKP7dGNMx16Lu4t+Wr9trHQR37TKdm22/PqH8nZutsw6
RvVsLfp55e3Nflj0s6Kf1njYWWW20PUpSo9q9rw5LW/ZCllsiO71L2sJcoLo
kfqvaGz9oWfpwFrJ96Dxdpl4UzXens1bvkXOfT7v9fMqfcsHFpz/MfHfFP2K
6NX0+6Mqu7HoJo2RT9WG90SfrzLr6x20V94OWuv3UJ6LkJdUf0flu5x1UPRV
euZhuv/2yK7KMwz5SvyDRQ8X/YLo0c3+Ftgrso9gHj5YdC/luUL0M2XvC6B5
T3tWvdZMDnvcS5LeI+xVNf2k+P1VzwK19SNkWfVtkbVJz3Ks6umv/w/En6b0
Tr2DO/T/qujxSu/T/1UqW1a/Z1RmhOia6BgZRWkbpbfqXjOU/17lvUf/i1V/
Wfx9WYv0fxttVL/MUp5r9F/Vb++wH9V/TfQPatcXuv+l7GHUz/MYAyo3T/Sn
ojcQPVvf4avKt67SNdXP6zGG1M/r573Od9L1k8p/v/LH4j0ierzoDLKK+n9X
3WsC70v/B4h+TGlBv52IPKOyH6reN1T/ekqP0DN+Lvr9ZsuszP9d9M5G69ku
DnqJyYxt/U9CFoy8/q1c+wqmx6nO2ZF1UJVmr4mk16vtX0VeO1k3h5ZM36n8
36nuNqyp4n9btB5sh4LXyhr7SJXdRnSJOUH0e5F1RFzvX7D+aW32esqzBntS
PcsS1dm62evut7F1MqtTl97d6kFnNTpt/RJl7qn69+Uq+2fRZddTnXfl3N6r
1N7FQce2p64PLbjN6yvPeJVtK/pPlX1I9Aai/xW9U8E6vPuZ21Kme6ns7UGP
t1az9Wjo0/5jX1K0rmw3ldspZT3f/vptl4LpB1TPJP0fIN7e4t2Ttp5uHfIV
rXO7Vu/2QbVhffH+URseTVunt6GuHxLdBT0GY4vvUPUcrXoeTFsXR7sniN4s
Zd1dn4LztkfOrbqO/1Rnd3Qkog9W+b4F0xsqz3fq58OTniPuUv5WSg8qW+7h
PSxXG3Nl6yRHqJ13K8+qyvO76txf8/ky8WYp3VhtmBH0D1uKbs/8ILqq8uuL
7qt8oyPvc9mX3RVZp0eeqGAd4CD10/jIery3KFvwvqRFbfm1ZP3GCtWzgepf
T/TjYR+NnlCfV6K7+Bsgt+u6UvB+LFbZRMH7wj6q/149762R9y+n8J0q/xA9
0y2R94ZPNnm/j45Rj5VYX3Wui0zLWlOybupnpR8p3TS089ag+2U8fVz0/rWA
LBNZz4nu4GxVNkDlVldDB+m+b4l/RdW6AvZVbXWv30rWJ/YtWZ+A3rINOgTV
/0fYOx9XctsORe+XsZ4YefQi8d/T9YVK31fbNlL+aU3WaaBTXQPVcSHoV1V2
UMn62FNFL02aXo+9B2Mpad3ELqI7hvbfG1mnOpP1XfVvEui3lb7UtLKLE9uh
N9b1y7q+Dx1CxvTconUARfXJRD3zumrzIRpTD4jeSwUj9cnzzNVBhzZBbRuK
Pkq/7Y5srfxTK16npur9r6/8SfVhb/ZR4tdV15XKP0r52+q+bfR/PP2i/Jey
N6943bmQdbniteZi0c+Jvkxtu5D9rOqNVecx4k8S/92i9cdNanOngvVtN6uv
OhYsK9/IOhtZJ5nU9UcZ6+aR+78uWm/ZRXnXSzk/cvW42Prqh1Xvt2pzW6Wj
dM/N1Z608lyt+/4r+kjkl4plUeoeIXo3ZHrRU0TvKPpE1nrRT6qv7tI97i5Y
Lr1F/JkVywzP6ZlWaNztI/py8V+seO2ezjekPmzPGqqy5yMrqD13i75H9eRb
vK+8HflD+ccofUtlR2gd2ot5V/TO4g8UPVn0AD3vWSp7icouEX8/8e8Tf4eq
38Ojor9mnyX6XtGT1Oaz+KbQQYi/v/jjxd9J9OPiLVObB6nOc1Xnpcyjauew
lJ95F+U5TemTyr+CfTtzrOg7Iut/+PaXFq3Xb6N3NzOyTrWJ+a5gPe5wvbs1
UqZ76L10VD1/iL684n0a+7W9lb4UWVf/i357MbKO6GfRG1bNG6L8Wxesu11N
9xqk8f930tevRtYn/yP644x1/NuGPSFj5Du1cWTO+7aL1R/vRtY5F1hvCrbt
rIV+L/Iej3wbF0xfjQwQ9NZbi99Sth3hYvXdEaH97DvnF6333kTlNlabf1P+
S9XmLlX3x3DRL0fWk/NbZ/H/UzpM/PkZ65t3Dnta9rb7qp6tq27jtcrzQGzd
dU7XOxa9F75CbdhSeTLijVSexUXrxjdHD5/xe+kZ9nQbpPxd3a963oms674l
531eV+Ufpv6sBxvWNgXr41dnfy3+f0lfb6J7LVN6me51jfirBLvY65F19TzP
j0V/m2tkrQdlD8n+cWeNsxbRoyrWzUN3F/+VyDYF6p2lss8oPVrt2kz1v560
/nAsclfS+r3T9F28o2cbpPRg5ftaddyne51a8hx8rHj99P+D+JOylp2QW9Zo
8hzOmrt6k+Uf1lbsi2NYQ1NeU8arbBvmUZWdmvG8i055ffXJD6Kv0O+n5Kyf
flx5/sl7bTxCvAE565gni58teF4fKN7yvNe0w9jPosdXnvvRO4U18FvkBPG/
Vzox6/WKb+s7Xd/I3K7/1ZDdC5ZlJipvsWAd9mk5yxvIJuiOkU2Y89emP5Xn
VZ5R958p/kuiTxN/P/XnWynvW95Qnun0ifK8Lt4Logcpz/6651uiz2Y9029n
so/JWceHrq+d6K80n85DXkI+Ef8O9hbIYOq3iayHav8G2A1VT7N+/1zfzmy+
M42FL0TPEb0me6KCZb0JKntJyfPDCNHvKc9ryvOu8l+l65j9hK63KnjMjxbv
Y+V5W7zZyvOR6LdEv9ewHIeMt47K7KrnnYH+lj0Q+i/mGO6ter5jPIs3SmOg
VZgT0Emhm3o367kL+bwVY0t5fkt6HDBXIHuv0uT54QrGk+hlJX+jY1TH7TV/
d/fru/labfsQ3XMrywDfNLkd3xT9vh5U/h6q/80gpz2DriD22JrK2hF7DG2s
b2d07P79K+/xcxS2kbzHyCFKb8z4W+AbOEa/TRXdGz1B2jIEcgJ6MfRjz6tN
9+X8fXwk+k2182Wl76gPtyz4O72VvbPKFlJeO8/KWX82FX2S8owTL6n7dsp4
j8r+9Im0ZV32yV8lbdtZoTJn56xje0Zlp2Vs30GPf1bJOrhz9ft+KvtF0raZ
a7EtKX1D+RcUPcdfk7MeDX3aTPHXVRuWih4q3udFrxtXih6oev4Ka8oZov9N
eu5tCvMN42la5PHWov+fkx4PzfrPBlmjJPo1tfMy/We5h+oppzz+ntJ7uD3I
GDuonlfEf0b8jUVPEn0ve6Sq67xQ894nRdti2hRcJ3aNTRJuAzr8Dgnfl70l
+8pzS6Yv1bO0LtjOc7noT4u25awt3tOR3wu/7QlWIel5gT6lb7GPtCq4/vNU
9nTsFKxj7Gsij2dsLb3S1uPxnmYXbXfIK8+6ojuLPlXvd1JkOwvvpax+b696
5iF/id4AnSg2MdXfjm0AeyM9+7kq101j/qHItg/qfzZyH2LDalf193SR+ue5
yHYu3uVa4i9Wer74C4u2FTfQ90e2Qy0O74u9DM8zoOb59DIwDkXbpGK1oXPa
awrfQM+G9yl9Vef5Off3merj1zO2M3dCj5rxvdD5Liqa3yprfS/f7AUqOyWy
jYzrw/U9LmRuV/p4ZJvaV7revuH0XOWfHNk2t0jXbatOz6tYp8x9vtR9jlc7
f0+6T55Xu6dq7NTRV0S2+6C3nhtbL813smPeeqyeeo5/C9bB7I7Ou2gdzB6i
v1WfLMbGje5C17co/y7Yx9TWTfR/rurbIW894nbiH1myDqYXdSMjpa0POpBn
RLffYh0uutzWOeuj0UuvLnrrjPUq/Zqsy0anXc9ZH41eusGarjofTVkX84Ta
/IDSFv0+hbEoOotdRfU81mz9yyK1ez57aaVd1banxK8pT0vRerv98v6WsYVt
jLyXtn5pLOtXyTrS7cGWpK3/xxb8cGRbG/S5Nc9N1zHW1Bc9UtZfbFAwZqSq
93NY2jYC+r9dwXbLivhzirbTrQqupuA2nIM9Ue0/QvxN2UuoDVtiQ8RmmrdO
t4fyfFmwXmsj5DeNg87oU/WNLC9Yb7yd+JvmrVfugtyqPA+p71fTmPqmYL1x
N+wF+h+uPFsqzxI9y0LkT6VL9f8fuld0/3reVnqGvNqUEz1e/KFhXsJ2vK7S
C1RPRvV0LxrDw352nNaBHXXPtdWvW7ZYlmGv+j8bOvPM7wmvM+RnrfmlZl3B
rSp7CjYt8SKl/fP+/liLblIb2iUt84BBYg97u/L/VnOd95aNU+Je95SNa2Lv
f1fZayL1L0l4TURXgCz1YsZz1DLRp+Qtr4EFYC/NnhpZDRwR++g7y8ZHwb9b
9El52x2wP4CDos5byl4raRsy2XF5y2Kt1D/bSu4s6be91d6z1IYzY+vrP6j7
e3pd6Tb67TfGXt16/qWiZ6j8GurHR5gHdN215nSruu0IX7NnVJ4DNWYWij5c
/faJ6N/Jg11U/fZk0vWeF9lO8Cvfm/IUxN+Lb67qNWd2xbZ49EJj9SzXKv9L
SY+BtmrDZNZE5WtirVTaW/fqUfNzbKf29Kz79zl12x/I8yoysMq+nPScsKHo
a4Oe9nz1/5ppzx0XgqNLm787OomU57I7da8xrE1525+wQ22Ljkf8W5nHxX9J
eZ9u9m+vlmxDKok/Tfxnm//fXkU6W9/BHqp/elhzdxP9QspzBHrcKcjyyjen
4LKbq74t9P+m8kwT7+DYNmbsy+iPn2+2/eusquXiryr+nrCFYwd/s2R6VbVn
UNWy5Hz0G7rva0G2xIaOjL1A/IFVt+sL0R+W/H6PUNtbq98eTtpuhG2Id/2C
6j9MedZAlw7uD92V6LToJOsrsr/u205lh8ee4zbSe71a9BLl3Vj0KNHfiD5X
7Wmb9vwIfm8dpaP1e4eyv7t+6N0jr4vIi4fyPLr/qeqT3nnP85so7y4p4xvR
pb5C20QfHvYR0Lfz3SWt5/+Q9ueti91d9VyF3C66FzqevPcBf5eMkVtb+W8u
W3aibezfutTcH1tqvD2v532ctZX5rea5bmvxt6jZDraN6KLqGqh2XMh8Gdsm
jm38r9j2d2xRefXDqSnzG7rfGeI/pDrHl2yzn6vv/ZOc7fYPlGwzQh91hq5X
L5neEp15yfb4j5Q3ozr7Bxsb9vfByIAV27DQt5yMnlp9e1DKtsaq7nsi8wzY
M83dVb5VzfOP6FlWF7+parskOpxTmKOU/wTmOtY13evgYL+cpXd1UtJ0VvwB
4h8t+h/d68CU7WdnqN8GKs8ElX1PbT1N9Z1RsO2sm34/KmGb2uZ878iZJfM7
gA1Q/UerbHddH19wnk3Y26rs0sg2tilV29ay6v/DlWdL0c8gA9SNmZml35+s
uo4W8caq/t2ZN5TnNf2foHveQb+qH4azvir9Om2bJTq4WPc6PthivxF/UNI2
vBXqn9OSft7BesZTRd+vZyyjA0gZG4cNF/0ktucW8U8K9r+jdY+h6EKUvlzw
994qb/sjurWTsE3rXicnbVPGltWCfCv+yGDPyur6msg2rZzo01V/Jdi5XlV7
XmB9UZ3r6tt8Jmn74s41p7uqHy5Dv6H8K3R9ptpxhPpgFY2B01RPMdjOsOf+
x3vWfRfo9yuwGZdsK/5B/Oniv6B7PcG6Cc4FnXrSNukjs15b/tHznan8q4S1
fju14WfxarpX75Lr74NuSXzA1ZeWbQ9tEv02dkfxf0eWoW1qZ0ll8qIv1b2m
JG2f3rFm+WQnPdfJzKGi39a7nat7Dkjapn5xwTrGbuyv68bS/VI1vgrbOuMy
p7qPFn8A+/66sXPLladZ7T8s2Pex3VPPAOV/X/WfkrStP6k8Rwa7/4kqf6DS
t9Cro29kfsjb/v4PfJXtqes3lf6BzahmmXBn3fPorH+PwY+rL55G9lbeh1V2
C93jbuVrHxlXcA9rc8FpB7V9feWfisyj/B8UvHbsFzBR6E++rFh/wvp1j+5x
k647iW6t+16pvn2Wdyv66ob76wdsvKLPEf1Z1fMC88NGynNVw99qW9HDGv4+
36h63wQO8CI908iG56wOyjNC9LnKM1+/z2wYe7SR0jcatjFvqHSu2l/Rc12t
su+Wrd+7VfnfKVuneovoz8rW740TXVaZ5zW+/0X2ET1QdBvxX29YdtxI9Az4
7AOVvtYw/mbNqvW3YLwv071mlW1bubhmHSn44StEX6j82+m3rVoZK8g69WvN
2FrsWe/Ujb9F9kPGROcJ/gQcyov6ra/6el7duEFkSGRJ1ovlav8PNe/B2Iud
Urf+EZ3GBdjeG94b34TNv2E5/gbsGA3byYYhe7J2gicue9/I/vFtlb2kYfvQ
UaKbRE9VntZKhzRs7zm27rWBNeLGunGN4BtHqs6hynOj6q+obVdQRvRv4o8S
PV9l31L+CQ3rHEeL/1bZe8MLWA/L1quCM2VNYd04qexvlvXnBNF/gdVEr6G6
/kHGY1+NnKB618x4nDAPM1+eVvY8ebroQWAeGraXt615HDOen1T+w8Tvj55S
eVLi/6o6K+J3ZE+C/l30lqL7qv4eovfGVpHxPuykhuXHK8ueA5nnRolulfO3
NgV5R2X+jvyN/KnfFolOiR7U8Np1hHhtdJ3I+Fs4tGYZ6Wd0kGXbrO9QX73c
8D5qB/EvEn+u2j9Z+d9qGId0vPK82TBe6ihsNVXrW7ETDuUbYI4XPapqHdQ1
Sq9Hf4ecK/61Ve8Z2TtiV0K/h55vSdn2p/sYP1XrItBJYGO6WPxHa7angKMD
Y/hi2Mt1Fz8v+nGNnyX0d8P7w83En4RRtOR+fq/qOXOC+B9VLYdMrNk2BPYP
rOLEhrHX9NsnVa+nk2qe65nzp4s/VX12TNJrObYwMF1guzbQ/2fK/2XQGYAN
BRf6Eeun6Hbqrw419yf9+k/K/GeQ87AvhzLHqc6HkJf0LFuq7W+L/5rqmEJb
mo0R3DNg294S/yG190614SPVf1zAZ4LtOBHcUez77Yj8rPKfsv8uGDPaPu89
LjTY0b6RMaXgWL5Xng+VHqL7HB0wG1z/IP7HSncAUx/wLVxvXHO5LvhbaHw9
k/IzbJw3bnSByvUUf2rKeooT9IyPKP24Yjwb+oq5ordTnidT1mtsyv5F9GMq
27dqnccc5enP+FO9/zasgwfbCq61k9r5WLjeRfU8l3K9h2W9P+gFphh7NG1D
X1K3vuV97GjK/3DQN+4k+tmU27cnOmOld6n8NiXTe6u+rUU/LHov0ber/29U
v72VN3aT9/O66p+o//uUJwp4QmwDXHdXOycz9kQ/nXI9vEv68Etdf610bY2P
h1TnwrwxPAuU53nlOVzteVP0o6If0XifBa10j5L5B+r+b5fMXxPdl9o2XvXM
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
tU9oG35IewfdFHuQvQJ9Zs37EvzcwZZukjY+sVPIMzs8I/VwP3BVYK2Ic4Hc
wnkJ4FfBEJ2VdlwmYmOBAcKHi9hMrOG3VY1TvjjtmGj40++etj2aes4MZcEK
g+MD40ycgyPStqFS/5nhWwBD1z/tsQju79awj2C/QLxIYkUSv3Fs2jhBbOPY
2nkH5Oe8Fu4BhpS4geyF2fNunvYeakzNmMB/y8ZQMr7A+4EvPiV8F3wvJwea
NahLqJ+zPsABszch9iWyzJ1Vx03imyXuAHjkG0M7iRFDfBHikoD5pi+JRX1L
zTjJX8v+lolBiW4CeWNQGGPzwnOx5mIjZ8+Kfz37fWLi882vHvoEeQOfH/AJ
/1SNUbg4jLHVSh5v+MGyr+qWcvuJM0ksJ3RKfBN8G3xTjwU+7du04fMBljYc
N4h4T+g9OFMGGtlln6L3kPhi/1Q2D7mG2Ju8M56RNkLTzofTjpfEfDdD9LEp
YyB/yRpPejL6p6r1JeiEXkgb4wF+tbkSUmSMos+S+Ezlxoc60ac9GPYqzKXs
LzuH+4IdpZ3IDexx2euemrCP25pBppgXWaZknZoYO+4n7+XrrPVYRxS9r2Vv
wJg8Utc7pBxD+MHYfuzolW4pOT7wYvEXZo2jJN4w/lDw2XskKq7zjpr3GduH
Ov8rO//Ymn2lqZ/9zC9Fy6bEauslepOU447uWXB7kUPvqlk+/qHseIycAYRs
uV6z87OHOVT5tkj5HIHRJfftUQXLu+TfWXWNqzn2KfLVU2n7cvPNPJe2zo73
9GzaOjhwwq9V7T/OnqgZX+yUY5mCsUFfltazRhXjWO+pOfbpnuF9Ea90nzAO
0XHuFeg30sYmgXMFg0T+DOt22tgh6nox0OgTwQVRT1yxPzx+8WCawUEdIDqH
PbPw/xgrMEVgwo7V9Yyq86MnmVa1nzt7XvS4+6asy+3S8HkOvzXsA08e9Hid
kSHAzeAfWfS4+lnXL4f29094P0n/gMn+Kes+O6FoX2PiiiOPDiya/jVrHejK
8Y+PRtXjhT0rvvn4Kg/Q9ZtV+y+zz3296jHC3ve9kId74bOH7x661gXi90sZ
F01Mgf7hu8P395iUdZiDCtZhgpM6vOi9MWdbnFp0HuI2zKkaS5XTnvQl1dk3
1Plp2j6D1FMo+bsGy0Wcc+5LfADi2e4W5pA3Q/+DXZ4cxhj76oML1g8R6xfc
A/gHzjZYnLb/Pm1eT/XfljJeApwfeD/OnkhHPlcJuZe4lPjsL6rabx+aM5jA
nYA/IcY4MS2hFytNRa6TelaPjPnkfIRVasY1vMScDd4yZbxN28iYQ/KD1wC3
ibz+X9p5KNtQnptTjpt9a8HYmSHqy+bIbUbWb6je2/XbXw3ja24K+b+p+j2f
XDYelPqJU3+8yp+e8rk2FxSM9Sbmwfdpx5UgDjm68pMCvaDqGA5fKv2CvmBP
qTqPK1ovz5k7xEelnzM1x0OgHvYSf2e9ZzpXeX9O+xyplec3VF0/+vkf9X8B
64bKflr194T+HqzP4JCfWKDQ3yr9vup59xT8s7OOM0+8+WVZx5YnxvzCtOMs
DE44RgO+pcTM71+0PYAzcb4NeeCfJP4ZKZ+bQ9xc9CDoQCo5n2/FOVdgYseJ
f5n45Zpt8s8j1+ccv5x488Wa7fDPYaOLfJYJcdivVv3XpRyLvlqzff4FbNRp
Y5LZX61IG0PL+UrnF30uUkb5f0sb68s+E/9YngX7xfwwnvGpACOKPuifsjGc
tP+vsuNFbxHmn80aPlvpp4bjYZMf3RG6n21TlvM3LNmGC34M/zX0dMg5xMaG
Ru+UzbmNI4rGCg8Vb1qLY/DT/osTxgSPDM++Ws24oVfQw0U+G4xxWKsZ4/k0
MaIzHreM78uL7mfOnwJ/DA6ZmPjnB5r+vzzoq8FFlXKO4ce5ZOeo7IiUz3gC
Bw7N2MrXjH95Fnkt57jynJNG3FhwVuCbB4Q2k7855zNPOD9taslnB+RyxmOR
n/PLwLuBoQJ/lo18zhnx9y8LfGhw2qPCuyNuKDordCXEIMWuAU6elGtw9GAp
wFRwtguxf/CzxccW3TF6YvAV+IN2jKy3RS+L3hZfV/AXnUN+9MFdAv16zdiK
o0Od8NH/gm8CU0WcCHAWxDvj3uCk2kXGSoHjAPNxbbP9g6HBfrxaMW8lpj1p
3Aa6X7A/YLmub/b75r1zbsxrFfPAV6N35v6c0cNYWCPy/PRgaA+4FPDZ4LQ5
twL+hqGd4DSJJ4LdGpzUuZFxSvDxPyHGCBgBsAK/BfriyJgB7MbYlYlv9VvF
KXGxwB2cLv78ZvsBg58AO4G/2gWhLJgIsBHEsPq94hhTxKMCq9IhPDu+x7yH
lwru240i2wDAthBjkXeADn7/yL7nYD7AfnSuuH7iZIHHWLPFNPcCn3VAyA/2
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

           "]], Polygon3DBox[CompressedData["
1:eJwtnQN4LEkXhieZSSaZzCTDu7Zt3LVt2+bdu7Zt27Zt27Zt7/6r/33vl+dJ
P6nTha7u6a6qc853vppkkx1X2aG7UCjc2F8olPi/dKVQOJ8TxxULhWNJL8tx
DfIpyMeTfq5ZKGxEuXsGCoWrO4XCeUOFQk9fobBQV6HwG/nLcFxF+ZMpfxzp
bSj3FHkzIG9TLRQebhUKE/QWCifQxlikZxosFDbtKRTqlHmW8ptQ/j7TlL8S
+QnqHE96rnKhMC3X2o78Z8h/hXM3kj8hbdxCx8+knbvpz6bkP0j+yZS/mvwz
qPMv6Xnp03o17o/+70Pdw8m7jfJzUG801/+ZOvORvwb1ryF9Jvd0CWU25fpT
Uv5U+rwm6RMpPzHptSnzIPLZXP8s6k9I+5fR9iIcu1D+EOreTPsH0t6XlP2B
cw9wbinqn+r9Un4Vrnco/XuP/nUjf0/eSRyT0P6ZhTz/3an/DvU/p/6dyLsh
v4X8CfLtyOPXC4UGv93unJuKvAH6cwTP43javonrH8C5z8n7jvL3UX7XRqHw
PvII8g8hfwfuYVby7qcPO1P2YPrzDukC/fmOvhxC228gL8CpdUkvRRvnkncs
dY4h/Ql1dkZegzarpDfk3F/Id5B/lmVpr8SzXJJzZ5Oek/79TP+WJX0/11+B
53UQZY+k7B3IM9HGfrT1FuVfp49/0r9HyJ+aZ7Yueb9zHEfe9bRxjb8nfTyN
vCbnFkR+pk2fud5UPJfjaK+HYyraW4G+T0L6OK77HfczPueOs236MznPe2Pk
Js9metrbkPaGkJ+mT9tzvedIv0ofbkZeE/k65HO4xmXI63F8y7VvIv8M0tsO
v58zIm9H+09xnEB6JNecnmuvgtxCPoH6XyHPSp3lqL8V5w4gvQ7545PeiTYm
o60J6M/i9OevQn7/8ZAXRf5fIb//RDy/eSi/F209zv1Ni7yQ3wvlnkD+nns6
hrbmpa3mCL4Lyv1EX2bkmseTHoty89He17S3Bdc+nOf3K/nrIK/NM5zLe6Ts
jrR5MOnreI5jczzrb8D/B6i/N8/vaK7xNfUnoc64nL+P+qdTfm3OjUfd7yjz
F2VPpz9zULfCtY+gf4/z/Kcj7xLObUTfJ6TMkvSnqyvv66H0Z1bSX5F+jfKL
0N6/lL2LNr8nfSrt/EV/p6HM6chH096B1O+hzFx+i7wTO9GXNZF3Jd1Vy9hy
Edd8jmsdT/nDKF8mfyTlr0N+B/k5ntf1XO9n2ryP8kdRfhnSD1JnX9K/Uf5n
2jqG8gdRvsH13+TeF6VMgfJ3c/xIelmOKumxKLMMbY6i/Lykx6XYIY6lnLvb
b5cym1F2XY4J/B45fiH9PeX343rHUmZJnt21yK9R/xnfQ/r3Lv+3oS+7Uf56
yu9Enzbm25iP8s+T10N/x6X847xvy5M/E89xYcpvSvn9/X04PkK+tpjfazaO
FZC3Rj6Q9On08Q/SM9POFX5LnYwXkyE/Sno/+rM57X/L9aak7P7IWyCXHMN5
HtNxzQ9or8S5X+jbk+TPzP1czrlNKP8A5x6nv9Nzrpey33Dc4thOf//itz2b
68xO3vmFzCevNFL31lrG+0P5vw/1l+Z6Hzt2NNKXKWrp7yJcr4drr0RbDyKf
Tnsz0N6ltHEVZSaijx3e1+tp/2TaH5v8+Sl/v+MB+T9Qf3/Kz0+/HrA+7fzD
+zYP9Tcgf1HKH035Jai/O/Wvp/z7yDtx/mHKn8b/aal/MeXvp/zB5O9I/k+0
Pw33/1grY8+TtP805cuUH5/8J7n/FTk3p2MCdXfgmRxE+kKuXyZvac6dQ/oU
yk9J+xci30f7F3Guj/yFafMP5z/yZyR/FPIkvg+cu6UrY+oftL8e525GfgO5
TP1xKL8A1/+mkPm3Qf9O5Pkew/nD6N+qlJkLeSnyz/N5c72XeB5zIe9C+c0o
szvptwYy/0zGuXHo28q0vyfpdX1m1L+Aa1xJmdV5/iPIv4j0lZRfl9/vavqz
Or9JH3KJ7/9TvzeufxXyLZSbifKr0sbmtHV5Nc/mQ9p7wbUGx4rkb8O5i32m
yCsjb4t8qe8/15uetl+nj5vRn3lody/qjuCaLyJfxPXm5fndz30dzvXGoXwP
5dcjv0FbsyLPinwB8iKkKzyf3WjrTfJupPyx/P8feRPRv4Xp33i0+S/yYlx/
V9Ivk78+/Rnl+ob+TMr1l+X6L1FmkPK3kz+771Yx49kq1Hkc+cJi3s99KbMj
bS/ib0bZKejDJPTnmULm2ymRJ3V8Rj4beT7a38/vkTZmou72HBtS/23OPUv9
sSlfovx+5C9E+kLOdUjPQ5k1KPsa8sa+f6W8T686xyNvX8p6b27a3522fqU/
81P+leH8nejv1fR/b57POuRPS39O4n3fDXkq0jtWMn5cUc3c8qnPgLq78Pu/
S1ttvxXnM8rN4tqNMvv4fTXz/r3n2ET+ePR5gP6fUch65GK/AfIPRf6W9i7l
GN/3pZj5/lzkBvKElHm5kvdhgLwznbNJv8bvfw+//1mUO5X2/0K+AblN/1ah
75dwflzXbq5/aO8c5CHk8Up5f36k/JFc+wjST/o+I19L21QtrEP6BOqsSd3L
ae9afz+e36qk33T8pO9j0YcC9zPK+ZV3cJDyN5K+h/ZHkncWZU4nvabrbeqf
R8PnU/8K0qdxvTv4PyflN/SeqHsk8m+ULVLnMfq0J+XXoPw0XOYEnuV0jvmU
X5/y+5I+mfJF5Gop6/F+yu9K2dc5fwPtz8b1h0qZ807l3ET0fym/Pa5RIW9a
5PWQ+xxjqL+yvzPtXUD7J/l9UeZC6h9Cm187h3FMQ/7avt/09yTkLuT+UtZf
I2lvT9r73fGSukeQ/wtplRXbn5r8tch/2zmU/MPob5n0PtWsf2blHhd3bYV8
MvIklF+G8t1dWY9vz/v2Iule6h7k/OY31J3faG/SM1J+E8dDyoxHmamQ10T+
ky7sRJsvcb1FGZ92JH8C2mrwG/+M3MVvdw3tHcP/bxgfx+vK+3Is8rfKXON/
tPUO/duKe9mM9FGUn5FrLujcyPX3I/0B+duSv4XzDPnfuqZB3gb5GOSPaPNK
yq5Dm4vQ9tz0cU5fIdczpNeqZP69hjKnOR/w/PqQp6GNJck/l3ZG0t8LCtHv
5nU95/3R3+kcL7i/2ZDHJv8g1yuU+Yf6dxYzvixB+RPJH3SMtz3Kn6c+5JqN
9/VQ5F168ptNR/1TKXMS1/6dcx/Rl32c/0gXyX+G8ivQ5u20daZrZPVJ2j+D
/Ak4t5bjvb8f/b0X+VXkA7nnV7j3sbryPb9Ke0uSf49jLNe72PUz8t3Ir1D+
ZI4TuP4vtPkB13+b8iuR/5BrKMr/Ws3aaxfaXJO2r6D+cuTfT/6D1P2FPk7O
ta4fyPizhmsS8i5XRyQ9Pb//RNS9lLrHkr8P8gfIi7t+4f0YzfUW5trjIR/G
9VanzkvqjtQ/hfSinNuV9KHO09SfkOu1GQ8epMzTtLk2fViI/q9E/cvVD5B/
LuYZHoz8ijop8rLOyZSfhPzfilmTHUr+dLQ3Ne29Q/3zfde4v4PJ66X9WSg7
DflTkl+nzufUnxZ5KuS3ne/9Njgmp+zEPIO9SK/IcSfyWZQ/0TU6bXyofscz
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
1ktrlmJz0/a2KP1Zl/5co01Q3ZTv4X3yPqxlfb5/M/ZH7ZDPIv+ojZD6L3D9
rQazHvq1mDWMa5mi9n79b4XY/5qV2Jb+LUb/b1Ri2/AZa0/5iffr9N5co59r
PUEbpyAPkV90vON4pjdrLtdHv1D+auSXKd+h/Mt+Q8iv6A8i/QHHI8jTU356
yj+pfop8a1ee58fIj6lrIH/k90p75yDf6ZhPe8+4Pkceh+v/R/lXkG9AnkB/
qPqXPkPyxq3HfvQ5+c/1Zs3neu0O7u+zYnyA+gIfruTe1bHndK3HNU5Dfpzn
9Az1d9L+Q913irEv3qo9gPQqlJ+c8kOce6+YPpbJW78Zf9Wpg7FHu97U/u+a
0bXjUbQ3UvdgKfaYXfXJFdJGHfktytxBW1Nwbnzkvkp8HV6zoX2INg/XFke5
p0i/zv+bKP8x9/Oa85/jPPJYTk2U769EV/6oGHv8bZWkV6c/U/ot+00W4yPV
VzpLJ/rx8oPRLwfUQUpZU7i20Gam7exMzp1Xiz6trnROT+po03Y9N0Ep/kTt
KS3Xm/aJax3D7/K0yxXXTrS/Ds95T97vBn3o9/tC3hu5ibwe6Yl430vIO1Ln
R57t+bR3tnM711xA3VB7PvlrI+9M3nyU/4b0l7X4R8et5HmPU4p99YJm7I3a
HV8mv6a9n/rrdme9cKZ+vq70WfvPvOSvRP5j5D/rmEV7E3RFR1RXdH26SiE6
4hhdsRn7n3bAl2j/rFbsL9phfkDup73/eBbLU6ZvKO05FmtjvUwbJMciLhVL
sSfoH5+S9FvaRjuZL51PtUFpi9Juqf3SNbL66THI82jeK8X+dHYz9kvtmC90
sv7UtnQhdVakT+c0Yy/Ubvii+h//F/bdKcXePR7P82+/H+qcytzzy0B81aeV
olM73/tsfaZnD2R9MgL5ONpfzLUm9X/QP0ybzzfjY9LXtB9ljlT3186of4zy
bcrPwTNZiud9G+3N7rNqxn+qH/Vt56dm5gL9Om91sh5w/hOE8b6+g2rG5ulo
rzGY+fy4Uta8rn3PVodxrqL8/NRt0r8FXD8P2xunqUT/WpEym/g+Ie+DfDTy
ibWsr0wfqk1kIPpfuxQdT11vTtpZmv7fQf695O1ImV8du4ux715Fe88Xg9EQ
q9GrP4y+LUv5HtfW6gOFPEPxFBPTv17aG8W537j3a8h/oRiMhliNw5uRi66b
6f88tLEi5R+hvSc59ydl1urKN+N68xbqv16MT17f/EjKr+D6V5vN8Hr2YMru
Qf3Pfb8o/zTl59HHw/2VWsk/hrLvcL25qb889c+l6kOcm7oW27I+iz0Gsp5Y
nGs9h7ylYxXlp2Y9szftT0F6D9c01P9Mm5a2FeoUtHfqQ9HWT/07OPUHbX7j
WtE1POmvSX8kXoU6T6rLU/9c12quP5A3LcT++xPlitr2tLmQt7E6DvJmhfhv
v6gFT6ENUVviVdzfwz1Zk7zOs52PNo/rShv6q69sxdY2k2t0+rKD9hPHzmrw
A+dxblHq7lGLPXob/TWUr3PdzzvRKdQtZumK/e0a8p/oSZ23HJvIn9L7LwQv
sTvP51GeT39X/A/rtuLfXHso4+eyPK9xeuIj11e+kj4abek9GU9v59iCe3/b
9Rx9+oL6WyLvT5lZ6OsC4oO8F23W5O9Du8+VY2PZ07GY41nkL5A/1d5Sy/PX
Zqvtdjvu/0nyZ6a/e9Leb7X4i7WZazv3vr3/m6j/j7YG5CmQb+jKeuf8RvSt
PWuxz/t+eu9La3OjbIvzD3UFsyF2Y2vXfD2xKemPvIz6q6gP12LP3w75efJG
0e8Dnb9dY9O/nwrBk4xGvhf5Wcq8SVtXtGILmd/1Jc+/pY1Jf0gx86fv/9eF
2Cy1XT7r+pD390nKL016Y57/XD35RrRnirERa/NYMfe7STVrmxm0GQ3m+/2W
ooshj488bi3+E30q+lY6yI90BbMidmUXrvFAOWsE1wrj1HJ/YjzEemzH8bq2
OPqzteuJVvyh+kW/4v4v72fc0TZM/StI79KKv0m/05fkb8//N3qis6g/iWdy
rbZiTzAKrrd7u+Jj09fmmsG1w+zF+G92bsSfo1/na9rbkf7eRX+f1r86mPWV
/iR9TPqaduB4U3ui9uBa1lCupWZzTV/NGONYM3UxeJo/ank3xUQthLw0x2m0
V+uJfWVbrncT1/u5EDzb3Nq0u4OBEE/zYyvf/p++j6Qfof2DkP/ozvu+Pv2/
nva2oJ0D6P/91ayvxrbMQHRedd8ji8Gr/aVOiXxUMfraltS7jut/qs0R+e/h
fH102hPv4Xqj9LcU4j/aivLXl+PTfEHbhn6Q7vhc9Y8/zLkDKX92V/AuH9Ln
dV1Pq8+R3onv7QXq9zimspbakjKP6isqZv3renQcrvVaV9aTo9spezjlTtD/
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
zzWCLxVnOueIzJ8+e2NujL35hPofdifmwdiHt6rRrdelvWe49nfqVN3B5IrN
/bYaPIGYXbG74lX37w7GWKyx8S7aGi6m/s/U/187eChxUXNx/TurwZb09sdH
4Bzh2OqYLT7M8dvn53OcjvI3tPO++N5MOyJzvnP/8n15fx5uZ73gumFG8l+o
5l1coS8+hCmc87oyxjrW+j5rK1sG+RF9z+Tv2Jc1+0zU/YRzRyJfzju0GenP
OI5GvgJ5c8dq9VPfb+RNtTUOZGw4gnMfI39RDfbLOdW5VTyZ2LtWf+ash7Wv
9mVOE59zZTuy56em/59Vs/ZxTeza+J1q5qoNkJ9HvrsdfUK9YvoRwU+qyzim
OLYYf+O7tyTyQ9pa2pnvnPdmoPyUXHO3rnyzfrv1gWBvFhzGjDsf6N/Uh6sv
90GOJfqCYRAPpQ6nLrc+557z2SCPTfkvkAe4vyOG4tv9DLlSTwyEsRATc/+T
id3rxJ6iXWV8+rNjO/Yu7V4TjIi9ZopifHz6+ozpMrbrzN74r55sxF+r33Yq
yt9Uie3hPuO/fEdqiQ/TZqftbo9qbGfPlBNj9BTlB7tiU9O29iRyrSs2UG2h
e+r/pb1HxHg51yDPivx0OfY44weM1foI+fChYM7Enn1YDt5toVqwp2I6xXYe
WC2MiUV7G/kgf49K7JXawLSF7c/xcjmYe7H3Z9VjP9CXVeT+Dq4mtu5dyhxC
2X3bwX+LA5+I/LPr8U/pp7qcZ/sB8seUPZKyE4/I76EsJl5s/F7txOsZtzch
+RsOjTH3Fs7imX5HeryBrFf0eev7NobDWA6/AfGUvw4lVuJK5N+H5StIn0Gb
Y1eCt3uY+pdx7hfSp9aDHS+Qd1lnGN9VTEzTNNpSOK6i7B+UnZn+/M3/W5An
Kcaes+RAsO1i2GehrU1o52bSh3KcU8nzE3v2PnIf+S/S3tWk/+T8LLTXpP4C
fbHxaOuZ0OeEvAzt76YtkHLH0/fbOfcv6a85rkJ+DrlLLDvHY9rL+zL/G4Nk
LJJjhPhLcfbi7X0GvyFfXIkt6lbkf5BH876+QbpEO7PRn92qsbW/w7lezn1P
mRPEkyH/R3obyr9GumicBuU/4X7eRO5Bnh15f/LfQy4jz4G8bSP2Ve2s4yF/
OBTs02GU+Yj0RfTndNLT8f3NUA/Gfqla8NNi77/gm3q+N8/EZ7MIea3uYPrE
9v3lN9uVOedG1l//1rPWMsbjZuR/6oldcw66qRlMp9jO6bqDff2+nrXhZMhX
NYNRFas6A/KancQoHFoNvtTYhVM68QGK/16c9BHV+LX0b81P/QWaiXXxG1iQ
dLkR34M64t3IfY3Y9hdBvhd552ZiER9A3oX0p/Vg2R2zLkL+sR7bhBjNq/WP
+T11JabnQuSeRnwN6ox3GZvYDFbbZ7Qw6VXo89jIh/IbrEr6jUr8iPoTLyH/
83piNY25uBj553p0h6mQr20Ggy3ubAz+DPkT8l/l2X+jr2dEvnfHlk/5fU5q
RMdz3er6VVvNWc34snfmIz6oEf+qvt+TkE8Uq4L8dzExTgc04o/UN7mHPhnk
85HHVb9CPgF5F673OmU/5HpHNOJP1Re6L/lHI5/n/ZcSM3a8/gb68Lr2NG2S
2kebidVyDh9N+nJj6Aqx6YyDfEU92APH6HGbwb+IFdmA9vahva8Hc//GHBl7
NFctsY1iCMQSbN/OWPyu3yTlRzVia32Yc1u20x+ftXEuPTy/UZx7vpxvxm/n
Sq4/QyE21uVdm1Tib32zN/HL23LuCcq/Tfm9KH8m/fuP/u1A/w5sBI9ufJ4Y
HLE4g9SfzO+9N/6M84ZtNvr/ViQ9tuv0rmAkxmAlKH9pb2JsjbV9ajCxCWI0
xGosSf9Guhbj3KvIXeLNCqmjvbpWyVr25t7Y9y1jWTEIYhE2HBjjQiych/ys
uhblL+5NDLux7I7Djseee17duJK2PiV/v4HED1SKsSFrS+6rJTZGjI9Yn6Xa
iZ8wjmIsnu982i/7YvMfWY296cfu6ETqRutWYtvRxiMefl7KPFFIHfWrai2x
Y2ImxE7YnvG+6mDqYj9Q/r/u6HzqfstpfywnBtlY5OUHEss2eX9ipn9vRF9T
b5tpRMqfT/7BnHt/eHx2rnOOca4xJtbY2CEnQa6/AvLJvfHpia85d1hn15+8
POmtm8G2GdO0DenHq9Fr1G/Wa+b3dK1yieO71+pEpxLfuAzpvZuJdX8GeZ9m
/O8uCcTUiK05vxObmXiHlTqxYY/vM+uObXta7m9v6r+IPCU/5NvkTTBsY96r
mXhfsa76BPQNfEPjD/MMliD/AfKvagcbfpnjXTucAHIDPDGM57mlP3272He6
P/5NfSFijsQe6d/n9BjMkNgh8UHyC2w/vF6Zd0T0IPWhCej72Z3YAMSvLtvJ
+sdvxZj+/Wn7HM61qsEbLEf62Wr0NvW3LejvBgN5l40xNtZ4N/r8Fr//x87B
jay/XYs7RztXr9aK7v4k4qqtxAD4Xvh+GBsgBtbYlnZfsLH6LLUTai/UlykG
Xyz+3+XEem8wlPfG9+dvYwsoez/HnvTp10Z0fHG74nfV/cUEuo52PS1W8Ff6
W+0PhnJoGL9hPMT+hfANaLPR1yA+X1uOPmvthtoP9WXXWrH1HmX5VuIt1CW0
Sc3k+Ivc7I/OPS7ymxx15NOLeT/HbQXreKIYHHX9Wuzu2t83o+znHGNR/uJi
3p9xjDlBPpTnPW8jPmFxuuJ19RUPtWI7VkcfbMVnt41r/HJ8eZ9xjOiPD8b3
9UT6t6XvLuVPaMcn7Drd9bq+YmPW9DPrbzaWbSF/A679iN+wWDuOF0lfS/n1
jEXieEl7A/IGpF/huL4vmPyFXNu6pvS3LSde8bp6bJPXqiOKRW4n9lidfrJ2
flN/24m0eXI/f+lPci2kfVh/UDtrvzm4pyPrGVPeGco75ljzkr8ReScWE/8/
NfJezkfUeYe6k7bDHWFMziSkT+P53+EaWv2zEQ4L/RT6K+S2MGZUP4f+DmNJ
tbmKYxXPqi12Xn3kXVlzul56lGNn0heLwTJ2j6O/PzHAF7ZjjzmPvIccT9vB
EIklus/xuR1877nkP+h43I6N4NFq8KvaDl4Xj057pxbzPb7hO9AfjN5Wzej0
Cw0kfkldf1fXq+XM4a5lWvR/PcpX1YmQ9+nEXmBs65TUPcw+q/9QvtLIGnb7
amw2rm3lT/iB/D/I70f+vhlbspig70if3I7tf2/9U+18s367q2sjc32B/D/k
1ZAfRp5EnbmSNeshlD+7ofKUmGLxB76TvpszcX8t5HMpcxDtH0Gxc8QCtWKL
OkiYTCv+3RfL0X9WI32AOjH3VtEHwf3uRHsPlqPzbuFvxfFqOTqf+RuQfzPp
ybhen98f/VuH+p1C3u8tyL/NtZsxUupOPh/tJMgb+m5ScN/uxKJOPiLfoN/i
pLRXpr16O9iKa7QnkD6Ko0b6bMqsQfp4jq2dO7jece28477re2o/8bdxTdiX
d+yxdtavs5cSg2Isyj+cm5byJ5P/rLFg7ejGHzo+1jPmOvZO7HhD+blHxA6g
PeBv11rtpLURvEp6LOe8/nCgPG3snT4NMRSuR5EvaAeLfRL9PZ/0wRxfcb3P
ud7f9ejEr1SyZnbtfCDHZ+XowOrGlxjjSlujuIfPjK3l3En90ZEWUxeg/l61
fLMXOBZQ/1Pru76tR6c+fyBrftvbvR3d3jXzq/Xo1K9XsuZX1z67HVurMdVn
kd6gEzy8saPixfd2jCtHB/uO+nu2o+s7x71Wj07tu+U7Jj/BR74/9PWOcuyZ
21WyznC98Xw7eFF9PY4vjjPaQ7fsCub9rmF7j2ODGAmxEoMDwb6LCRMbdlcj
/iz9WlNwL6fT5pSOt0N5v+QJkC+g05f4k3VawXY8zbm1nZ8q4VIyBsVYFP03
x3QnJs3YNONhtI8bY2esXY+6T198yvqWlVeg/gycu438M6rhW5EjRa4U8Qpy
vzhmnKJ9spLYDr95522/aeOTjVP2W5djQFvv2LR3Fec2qse+OqoW/PmfldyL
HAFyBZzRTn9uHsr4VBxIrMy0rhmHEv/t92bMmrFrxpXvqum8L/E22ne9ljZm
OSRsXy4LY3aM3bE9n6c+eX3zpVrwL2JoxNIYo/hdId/3DkP5xsWXiDPx27+0
krlQjie5nly//1cI5kfsz6Lc3zm8z2dzzCk3APmnlhMDubHtV2LLPKYv8bDa
z+4uRx+Rm2oL5CuNp+hLfG2J40Tk85F/GMrv670aHyCXwuViGAoZw7Yjf81W
sClPcW6NVuKV9R/qQ9WXajyQfEvyLk3G/XQNxHfqesx1mT53fe/GDMkf4P1+
VsiY5jrj2Gpiz41JNzbd67sWkNNIbiPHTOWthzKWrtcIPkic0Ngjon+JRRMD
JBbI+FFjVf3Gjx5KfN7GhXCkyJXyYSXxqnIOyT2kPf7Hcjg85PI4uRFb54rF
2AO+9P3rCwdR1fUecqU/NqiLHUvasf2I2XuyHr4FbeEz9WV8UOdU9xxJexM2
Y/PZdSg6s7agQxqxdS1C/kzN2ID2rCY+RP1WnVjdWE6liY216CR+au5K8KLa
ELQlrFCM/eR72iz255333b/INWtfODo+0R6iPaAv78hm7diktq0GX6ataozN
bjB8MtrytHGNqoYPQtvXfRzl/sQELE97NyD/2xeOMbnGvm7HlzJRX+bvnzj6
KD+yL+P7dxzd/flmHIu+5ejS9+AY5tjfju9kvL7MX9r8/lWP7I4t8AuOz/sS
Y/wnz/sz56e+cIK5HrmX33BG+vof8llD8b+YlsPgfn27HLOT30udC4YSbzl9
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
pz5zfefrNrPXz+L6o5Hnpc7pA+EQeqse/Ke+MWP2jd13/BfbsYTfJ+1dWM9e
J/q49HWpU6hbuG/Dv/SnX/9zb2IC5acTP1QrZ4+CCxvB9wyU4/PQ9yGfmtyH
j9L+uch/tIItfcv1gPOh30gpHLF/tYJP2oPr/+x4h3xNPXthfIt8o7btemK9
v0e+CflS6k9O/bcdU1rhVNRfulcx9rAj28FK6MPTl/c75/YqJUb5Cu2tzXB5
6nPoRj6lEd1XHbjUSNyY8WPuaeF+C/cNBUPv/gHPNKKfqouKoRBL8YL2u1Ji
LM9CfrWZ2NEHkM9B/gl591I4Li5vhN9ZLuvFuMZFg9E/1G0G9V81glfRVism
R2yOa07Xnu5b9LdYae0Dcn3wvn/TDh5cX6Z76JypP6SeWPx+7WnqjvVwbVa1
57biPzgUua59tRV73P7F+ED1heovOKyYGLz7W7HvHVDMHgM/tLM+1fcqx/gR
rayXpnV+pr8fkn9BPXtFidEQq+H6duFiOBrlapylmb0U9EHqixRPru9YzuT9
2/E/HF2Mz1jf8X31cF2I6RLb5fy/ZDF7IhxJe/M0E8twFPJJreDDxNLrI9RX
OKdr1GI4so8l/+Z6uAH0qepbnZv8pZEPF/9N/k31cBHoY9XXasyfsX/GSMsv
dG89XBz6aPXV+k74bhyjTb0Z+6zvojGHci86/8s1ZMyg/lrHV7kCjUEV7+Sa
xbXLQeXgsbUJloZiQ9ZWqM1uC667VHdseb3t6NrzlRJvoM46NJR3yHdpi3p0
db9R8X3aUJpDeWd9dzcnv1rONyseb4d6bCd+I/I7bStmrRyORLkS1dlvG0gM
hLr89va/nHdaPjRt1Nqq5y8lHkKfnL4593gQz6/PTN+ZHBvib/XB6YtboZT4
BPmvtEUtVUp8gT41fWtydNyP3GrHFrdsKfENrheMDZYjV65cfTT6auTANt5C
G7u2djnkbm3Gh6gv0T1LjJ+Vj1Tb1rylxHNsx/20y+FI/KaZ8cbYcm1SU1F2
U+T+cjgc3yb/+lri+o3vbzcSg2rcvPHzxqaKT36TsgtxjRdawTsat63Prok8
PfnvlMJp/0or+4/IJTGpfahn/f2/UnxW+q52649u7Jp2uf5wIkw/EPuzXAly
QExeDSZaboina+GtlTNhkkZiYCcdyHxibKwYX7G+O5fiD1iPa3aVYzOeoB0b
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
bWz63uSR0Pb2fxKbp+A=
           "]], Polygon3DBox[CompressedData["
1:eJwt13m0z2UeB/Cv/XJd7mopSxlOuVxR9muNbrbbmBpL4ppu9sJlkH1frt2k
5eRMJzRKDJVsF9UoBqlMCJVsQ5PonEYqZWlez/nOHx+ez/t5vz/b9/k93++9
M3/kwyOKR1G0j5Vit9Kj6J2yUbSLrbDROzWKVsN2VrSXGEXLcVbxh2dE0agK
UVQJXqVMFI1IhsH/UyyKpuO9Vy6K6uEMg52BTYKNxR3Kv4j7hf129LMlXZIW
RXm4s5KiaArsGmxLCg3sTZrNLDNBDbABsKV4y9hU9Y0V6wI8Q701rU+Uj6Lu
OL/IUwW2kW1g2ThH5XmgdBS9Ikd99WTBruGl269BWxtWE5ZJv0B9HdkyOR4x
g/l4Xaz/hXuIFfKviVcNtobuOG4W3XT6w+YxVc1T2HjYZPa29VaWpY9dOA2D
0a1Ty0Nq+kKsDbDK9tfiLdZfPt1j8NI47fR1Xa6+/P1yT8D7Fa+2um/wx+EO
5T/F3pY/T6w98KhEFHWgbSdXG5yBsAKcEfzf2R7A34RbS7y/w9/E7YR3Av4u
bIVYM/VbCVa3UhRVsF/E386KwR5hJdRaTY0dPbeBYp2lPUJbPJwJMZ/GuWp9
yozm8c+F+eBsYG/oKUnM6uppive5/rqZx1rxasFqiDcN7zzNAtqjYpwWqzlu
A/tb8Abgf033E/yM/YV4F/Cn05XA66nWWawIlg+r7nk2N5fzzmUfeMUwZzZV
H4PF+0Qfa+Q9z/4o9gbYcTX+HudxtghvHOwS3nqc8WKeFHuWvMfk/1odO2B9
zeBj2L3qbIF3leaCeJPDeWS1cG8Xb5v1AbyWyfFMS7G8sjEv8H+FZ5t9rv8/
gM313KbgrNDHVT0Uir9XrPqwjfLckDcdd4k6n4A1NJuz1pl6mIHfJCXOHWoY
xbqbxfhy8VxG8nuzKWIupc3H3U4zgHZgOEfhnLFL4nVT80B9t9ZrUzkuwprg
FOK3p5sQzrhaR4s9Bt4+1BzORKjV/5ny3KR9LMwaLw+nP2uL19n+VvuvwLsn
xPM5oL7BcmTR94fv598v78+wtnRL5e0q1gEx99vPhp2k+zCcZdyOztpufV2k
v0+OJtZzaNbJ8zo7iluUFN97O/k7WAt1rJdjn2ed7/l9Q3sv7Rj2IH4n1t8M
moV7E/cZeXNw3pe7h5w12dPW0xLju/EOfg3xtsiTEGYKy1DzQPH2wl6XI9cz
PwcbBDsCay9HLzkayfEa/IRahuNNt9cX5zV4jhntxqssTxPYG2EO6t8f7qqS
UZQoZwp7luYHnEXqTOa/mxzf6Q+qeY96eqqvBfx7M2jGb4HbUrxs2BVYc1hL
WDZsdbn4ub0Y3hWso1jb2UJYB3u7wm9GvN20VfW0VM0vyZ/BT2dLxPtZrBdg
afwL7Am8zXhZ8GZy/Jm11Vc71tMMGup1o5h1aTfifCVPA5zNsKaw7bB/wxrC
XhTvebPqLN5h2Cm13Q0vsE5mx81+kHh5afHd2h+WgNuP/zpeDn6uvtrop0dy
/JsIv42u7C11HsNdYc675MizHqaP3nQH6ZvYL6v/g2xAOLfskHX58vGdN4Tf
jx3gl2KrYXn8xvTfhvOTGJ/X92BDxasjRwU5fsJ9GGc+bCqsFeyj0Iv6VsHW
wNbRdgtniTaTTaZpijfG3py0+N0ZzkQ4G/vYZfxGYp4XpygxnuOWUJ/ZDDL3
3rDwKunrn0L6SeJki7cP/1N5F8NmwdqGuxN2AvYd/bRwH/BH0F7md4Gvle8f
/JEJ8e9tO+1N2hm0hfjX8ZazdOvx8vaxNwnnM1hbdTUQb7S9o/yTbLx1Q9hA
Mb/kn2ETYI1gg2Cn+bnizJZvpdwvs9bqKK7fV63XlI3fkTlytArnPNzV5eOz
3k6/U+D5amigvt1iHqS9C2+kdUX2mTNUSY7n8f6Cl4N3En4Fb6mzsRDWATZH
zBy6Lnjfhfc4zk11dua/QF/Heo7cg/CnwWawYdZzYRNo78bJFzPBbyDJ3Mbh
PyreQ+GOCOcnvH+duSN0h+S90/oZ2D/tdcH5MDW+M3eIN4T2IL8nvLv1FbxT
+DdpR8Au879jx2A/wubjlsYroK0tRiF/cWrc+xhYkr1FYe7hXKqtnDq/Nu/l
4f0Z7ln7bcJ9pZ9FsFfD3S9OaniW6qtC+xyrhDdRvHr2nuWPwquu36piLrD3
J7EWwo/IOxqvLGwBv77ndBtOC/HG0tbjt2QXwnkR/77wTMMzY9fU8Uu4x/VW
GqdxeP/I0YH+y/D+xzmbGp+dPXQTYef4183hJM33tJ1gPfCegjXQUxrshjzT
8a7pbwbeB7Di7Em8w/ACmvcS4zN8hH85/KCcvcp63Cj3RLwrYux0Fl+Br2ZN
7NWFF+qrPZtJm0t7So42cqwM9xpNLs5XsNawl2Gfwrr9/xtuuTj9WSPaz/nf
s5L8KmK3TY6/I76h3RTuNPY3+SeH7wo2Q81n1HxVj5v1egyvhRwvhTtHjq60
a2Gn7BfAZuL3C/WGb0DPv6z40/A6wIpgpWhn4W2FdYbdpZYMs8/Q/yZYRznv
gdWF3Ql7N3zLw9aEORhXihkUwCrDVsJqwZJgT8JSwvs9fH9bzwzPUoynQ6/s
Rzm36OOuYvG3VInwPamWH+C91NwrvMvZXNoHYMv085x+1+HOFj/D/zf18y1d
mXBmzHKbeOfs3UO3RG8PqGUcf3aIAbs9PZ55Jqykem7jDxEnWV0p/IpsVPju
hP0W3hX8MqwAVgO3nHV92jxxq/PX483hVwp8tVwKf0fJ+7Ecn+DerZ46/D+E
b2g1fAR7DK8IbxhNqrzpsFQ2Onyzm1c1z/p9flXaNNpVyfHfBBXkGS5GKs42
2Hz+HHMpo86d4TsinN3wfOgamGlJ2gK8anJUgc810/5yFINn2d+Jd4O+PF0n
2BJYK/H/G77bxPsr7e3h5yDP4PCOlLdEShz7HdpbtBVoE2GNYXvDPUm7G+9R
lgcrTreX9eG/Jd688Huhi9RcJMeC8vF3boEz3i/8vsTIEfOW+d0fvjn5rcPf
aeGZk7Wj3x7uzvBOTom/m+vyT8t7j3hdUuLvzTawH8M3WvjWSI7fk8VoH4eX
pl0Cm2Qu/cLzYGPlWEWb4Nms5k+i7QObhzcaryfsN9gw2P8ARfkLgQ==
           "]], Polygon3DBox[{{5324, 4064, 4149, 2466, 2465, 5323}}]},
         Annotation[#, "Charting`Private`Tag$118881#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
QTPTcA==
          "]], Polygon3DBox[CompressedData["
1:eJwtl2lsVVUUhc9rKXDfUO597WNQggwRYyCKgoLKIDOJBGhL0agkSlRaihjl
B6AyGIU6IiigxD8ixeGHxgj6A6yRQcAYpDhhHABBBplBjQMIro/1kp68ve/Z
Z59z9l577dNuUx6qnlESQtih0UqjXzaEY/qQLQvhXC6EH5MQ1kl/PgohKoQw
Nx/CmtIQdurbMc1tSIfQVet+SYXweCaEGypCOCNHN0peLfsq/e7VfEFrJsr3
cfm5IP1z2Z+QXK35fdLba75W86fl84h8b9S3CZLT8jFIdrOl56QPkP0myb/J
5nrZ5zXfqPl6fZsa6xwaneR7rPRJkodobrnkafp2X2T/L0seKj83tw+hp9b3
0t518rWl4D3Ga/6eyHuPl90era+UTY1sFmn+vOYH6dvX8r9GMVqt+07Wt4uy
fUXrrou8Zph+R+hbi+QSrR+h9TMi+8JmhcbvGtu1VmENf0jeJX/fy98cfesq
+/4Zx+Kw7ttH+kjpu8iVfIyS3qrgeB7V2h6S5+tMHwTngFxskL9myQ3yF8u+
PnHsydnW2DkhN92V7wkZ35HzdZM+LuP1a0scw/WSZ2n9tZIfVt63ar+j0r8s
8VmbpQ+Wflb7tejbSclTE+81I+34ds96DptD8rdK3w8QH40LusNS2SzWvud0
xmGSJ+qM12guk3K8/5LN25L76vfvIiarIucXrNZHjtX7usNMyZ9UKpdtHRNi
w3nXBmN4noI+W/r+lPfYpvmftaZDiTG0R/LraZ9tjfSJxEc2V0j/r2hfW2ms
NWuP3ZIH69ujnAcc6K4r9a13W2OqWXtV6rzVkc/E2Q5Gvmtr4kE9aL3+wimN
zyTM07fn2qj+NOZLrpOPbSmfgfnjiWuROw2S/K9imikzZvpq/9ba7y7J32ht
V8kfa3TRPZr07QfZbwTDkj+Uj58Sz4MT8NIpcb3PTjnHxKsfNSZf+zS+VWza
yP5XyQc0FiauP2qDGmmUfpNq7JbYPnpK/1TyCs2/Jn87pB+OfHcwdSQyhsAS
+L9K8wekn88Z709p7fa0sUDOKiQviBwb+AGegI8u5UbzWcmHtD5dHkKp1l+Q
v02xfXPnuZKXxsb/KvKbOL7EHk5ol3e9nJbeW3osfZP8ZcpdL1NVX1nJY4gz
HCJ9GvvrHG/KX6u8z8hZ+5e6ZnJa/6Lmd8rnEu19a2RsgocXingFv+AYrLwU
mxvfkI9auEt6B+mrpU+Sfmfi+rlC38ry5jQwCIfCdesL5iX4qTxxzVA7/TT+
0bgD/Gt9l1Kfd3jGGDqq9WeK9bs15RjAF/DRopTnwRf4ASvk9LHY9TtP34fL
X5+8883ejZqfE7smqU3O1xA5BvDNksixaci7luGc6ZLvjVw71NCzkvfHxt04
/c4v2r9a6h5F/XN/uL1Gth0L5ijiTvw7y/aLxFw2SvOdC64BagEf7NdffvvG
5kjyfXnea8khXHGl1vwZma8vVhr/1C913F1yk8bhnPkNLiQGxIJ6oHe8mza+
wAc4+Sh2bBaUmB/eSzvW79BPIuevIuMzc3bwlis3JsAG/bAx5Z5N7x6WcX8D
7yOl356Yu8DIltj8Ta+mZ2yP3X/BUkfZT5L9d5H5YqVqanfkngr/PB2518KH
4KVJa2q09mTGZ6cHNuXc75Zprkz+Rhf71fKU64M6oT7uzvpMnG2h/H8VbFOT
OCePaK+VJb5vlebfSnnPzbHrmb5Ef3pA9UYiOH+PMtff8XbCoNaf1xgq+4Ea
D0bGA7g4mHNvpOa6ZV3D1DIcABfcX2HflzAZm394B/EeGlNhvIBNOBKupOao
vQbda430J2NzLxw8usIYID+8VcBGdWJf5Ots4nrjXcD7AHv6P1wLJlsk57Pm
Zt4ELcV+KdNLPbBWa1NZcyk9nv5MzIgdNQ92qGFqlTdTVeLYU+vEk342Oevz
gw/8LYuL2I58n3kaz0SuP3oZ2CPWxLy2GD/eN+QaboSf4XJqgj6+M+fahP+v
lj4wMX/wluF9CKdzNmJMrKmXTHEtXAJng2X2gJ85HFgCM/AfMSSWm4PxczEx
9ngjwZe3yf/iyHxDP+ZNwvtjneaHFOsRt3BcnfYcIPv9kXscvQ5+pRaTYv1Q
n8SHN1u97C/TGesi9zh6HTkm17xP6wr2Qe3DAfimRmbJfkrk2oGfZmZdk9Tm
2NhvbWKWFN+kvE05H1wMvsAKNc77+InYdwdj3IcckAtiML3gGBNregrvQeJN
L6VGwcP42O9w+A7eo//2yvg9wVuJ/gBXxcX6o38SO2J4InF+6J3U5KHiexmd
N38d/Tl2LMg57xP+H6CX8eavT5ujeS/Rs+BuMAf2iDm1Bcfvjfweg/vh51PE
LvJ567PuzXAm+SBW9G44lnz+D0Ldvn4=
          "]], Polygon3DBox[CompressedData["
1:eJwlkb1LQmEYxY9hlN7rLTWLLAIbjGpokSKSoKBwS9waWoLMyGwIsiDCrX8g
B2mLguaituZc4raEFU1BX/RBU0EY9pM7HO5zzvOc87zveyPzq6lcg6QwaAT3
fukUIWBKPYbUCf8AV2i9aINoffBZcOSSfjzSN6i1YQ5Jt9Q3oNQkVdBG26UB
PMe0F9HDzOy2Ssteac50MupZC0HJZmYKzWtJafgIc0vwMjNfeC28b8zanCVi
OrlReFdA+sO7BV9D74af4Z3B56O/Tp0HNep9tCRzBjuy5MXRhuGPPif3HX4J
9qhdZAXpWfAC/hN2PDH3DDJ4oyDHPUxwQW4Le216Fbe0wXnTwE9GCn+R/jR1
lX6Cu7nxvtJ/AUPklsk/pFdi7zhaHhzUOW9YQPvkHAlmtvHtkFclLwa/ZvcD
3yT4xRMDxWZpAj4GMvBNj3OmfsP5R+f0O8i8Qw/BJw3n7bPwFRDH9w8mSkZQ

          "]], Polygon3DBox[{{4485, 2531, 2530, 4152, 3198, 5442}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ElqAlEYReGrwSYIxoGObTN1B+4g2OvEmQvQJbiGDCI4F7Igu8Q2ib2m
sdeIhJxCqK/Oq/qpB/X8+WKyYJIURdkqGeuQRXpmkXBJXEpy89IUDdM0jdAs
faAZt1SxSTnWVo9Uu5V8tE4baKKFF7zCw6xNO+iihz4GKDGLsu8b63d8YIgR
AszGdIIpZpgjyPsFXeITX4ixxzf9gZP5iq6xwRY77HHP7ECPOOEXZ8T5/kIf
jT3vpCe7dMP//fFsNs7CIVVN1zP7B1F7Ne8=
       "]], Line3DBox[CompressedData["
1:eJwl08lvjVEYx/FDtdreciumiKg0sROJFTHsTNFWE0IHU6NawkIJGmOkqoaF
sRHRibZ0NLc11FTUTBHz9GdY2fi8sfje3/c8zzkn9z3nfTOLy5ZsGhRC+INj
Q0MYIv+mhHAK89JDqJFnsRBLkYXk0SEsk9uwHfmoRB4m6c2RM7DA+t0yGwUo
Q1x/uSxEOXKwEiPVD8gVmIuZWIT59ojpreKbsQWzsAerkamXKytwEFUoQjXG
6O2XNZ5ro+fKGxVCLd9gz53GdXwHP8zr+S5+hjfwPbyF51tzzriHF/BG3s8L
eTP/yI/KruQQilND+GSckhDCVrW1xp+jflIIqWr5cWem/kXtuFpMrcScr8aH
rM9JC2GYWrk539SqzclVi6t9Ny6xvlXvBy/lbbzU+p/G7Xwd/8U7+Hr+m3fy
aZ6l1jnUoR4NOIfzGOuMGmUTmnEBF9GCEXqtsi26d3u0yw504hLG6V+WV3AV
13AdN5Cm1yW70YOb0Ttkj1tyvN5teQe9uIt7uI90vQfyIfrwCI/xJHofrJ+g
38+f4hme4wVeIkPvlXyNN3iLAUxUfyff4wP24ohzKbTf8ujseQHP5ovda5Xx
bJ7LK/kUnsMreAbP4vu4KwinZcxZD+eneCofxvt8VAOKTe7QFYbpiSGsiXlG
9fPR3asV+ek1ro/eD+NR5k8175ZajZq/GUaoTVbrVks0yWsSTkbfKRfhhJ8E
nhS9U3wwT4z2jv//nv8B79d8ng==
       "]], Line3DBox[CompressedData["
1:eJwl0VkuQ2EYgOFPXNCGRIQQcWMf5gRNSEolrqmhraESEm2J6UKKmmIoG7AB
sQM76AIMO/GIiyfv/5/vnP8k5wxktzPFpojIkuuIKGgjETHBIFU6uyPO9Yhj
Thgi6fqiplnikkcu/u41Szkva11imBrL7NBvPqkjrDDLKnMkzK50xvNrWqZC
nj6znE4xyjVPZOgyK+guG9ww7Yx13afXfF632CTFGLe0m91pkTovPDPOp2+S
T0Z8aUG/daHNec0Rb60RP/b32mP/4H0N+zP90FN910N91QOta0WrWtI9yta1
lv9/8At7yzAF
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzskuw2EYhfG3pgWJiGkpcQFcjKRqLda1kgiJiKWFRCRVEUKNNV+Mhb2p
NVXRqtmvi5PnfOf52v/XPzo+lE5ExJiMdETMdUd8YAFruNITkZJG5wZ5t81i
FbP2s86IhHNIxTaDb7jMnXJ/XREnOOhckqzzK39s+9WPcBvPuRd7Ri/jof1H
H67vktOf7UtYwgM+hcX2iCec9t1H3OTzXEtvxLe+r2/gA7eI97iOGf+ZlC99
z501vOMWsIhlblXf5T5xBwv2ef2i1ZudP/SaDLjb53tT3nDrzhb3bq9Ks/3G
NsldY46r2NN+08Rd2Sa4y/rbuSTmuTb5B134S4Q=
       "]], Line3DBox[CompressedData["
1:eJwV0Mkug3EUhvHT6qCfEh2x7BVocSV2dtIL0Isw3YCVSCwEMWzM83QHLLgE
icRCwsr86+LNc87z/r+x0e5MzqQioi1TgxGL1YhiKeIF+/CuHNFbjxixD0vC
LeBrEnGrGzLXpcDP41MtYkJudDX7NY7bP2Sj4l7OXXFV3SXucGO6d1k35/UX
fEU/3R+xxeW4Ncziua6s23W+hBluSXpkwN7yrg945lyaS2MKi1xTd4+nXHCr
7vnsOzbxhEt0x/jnP6xwj57RkiOuoDvEpv1NlvW/zh10/48uL6N8wzPmzD+6
fV3O3OHz/Dc3a//CPV3WvK3L4CeX7V4v/8diMv0=
       "]], Line3DBox[CompressedData["
1:eJwVzydOhUEYheHvChAoukMQ6h5w9KZYAAJBggFPkSDpbQ3U2xvsgl1Q7iWB
AAkInhFvvpnznpn/n/6VjaX1TESsYq094rA74gjZjojxzohCT8SV/Fm2jwPk
uAmuyF1zL7JjnCDPzcpLuOFyXREN3Wa6i/uST1qP6N7yef4j3WV+mrt8UW/K
+knnTqfA/diXzG9+Od2vMy0b1bnXeTU35QO9EafWZX6Gz3LldJ77ta9a/5mV
9J/mXpu1LFBHBlVujis7k3O+JmtBK2rJySvIc2++dYZz1Lkh359Pb+UasgsM
yrb0H/iF9FauKb/EMLfNPXKL6Y3cu3xHNsb1mf+2akWI
       "]], Line3DBox[CompressedData["
1:eJwV0LkyQ2EYgOFPa0ROVkunMjSuxBaCRuMCaF0BhV5hXy6CSHISYotxM5bG
MsZzinfm/O/7/f83cyY2tmqbAxGxju0k4qgccYy0EDFbjJiqRPTxxh3gEB1t
Trvmr9xpliKGkENX++Lns661uGHkcat9awvajHcaeptPUMCOdmdmUb/RUq6I
/VzEPX/iTpPv+W6YLWllPDjX3GlpHecfrZLtQxWP+pI+zb+gy42gh1E86cv6
3qD9zmMYxzP/a76utb39bv8pztDXJqsRK1qqfXDnuMButkdf1TraJ3eZ/dN8
xCu/xv85J+b+AYcGO9U=
       "]], Line3DBox[CompressedData["
1:eJwVz7kyhEEYheFvSkqZnaqxZsjNRZDJDAZjF5C7FFL7nksxmMW+3oeQ8ghO
vX3er7v//vsr62NriYgoy0YyYicb8SXtqYhvHE9HlKSYj2hy21wSd3GC38xF
jMg9V8hEpPAKq60Rk+YPepd+KWnra6zZP2VWlkeum9tz3zD/Izf6tFkVZ/DJ
nn3zAxnwjozewh/qR/Ksn7VFZPHOmVmzW6zgC3fhzh49Z13HOb6G8/hr9sr3
6nls4AK/xY/KG9fHdWATG/5r0fxdP/btTjzFur1L/LJ8cCdckRvy3nPrFX5V
Pv/fqg/yCfOC/AG13ThH
       "]], Line3DBox[CompressedData["
1:eJwV0Mkuw2EUhvFjX4l5QQ2dVlxKTV1aSiy1hpp7KZRbsCCEO7AQFUSqVTM3
0Njx6+LJ+57n+778T5taLBWKXRGxgEpPxPFARB3DvRFtudwXsT8YkUeDS/VH
jMhrWXR2wE+jyaW5pLyVM9wfbvSSe898Rq9hVH+QdwnIFectLqvfo+HdmPlR
X3W2hhfziX0mhyLG9V99nS/j1bzU2QET+pN3G3xdbso37qrb7rLJbXFVd2fx
zuW4tGzJbWeH/Bw+uFPfychzOc8dYcedT+6My8rLzn/mt+zyX+YL85Q9c/oP
9vgKvvWE9/83KTrT
       "]], Line3DBox[CompressedData["
1:eJwNzrkyA2AUxfGLmYhIDIJB50mo6aIiG7HMIBIUlIn9CWyxdTxN4g2Cipra
jF9x5tx7/mfu981U6rlaT0Qs0fxYxPNwxALfHIko8+mJiKPxiE/zEzY0GrGB
Lco6dGnfz0Y8YhnzOtabiTiQXdjr/AFLm7/11/Bz8578jNf4Pf6KzVEF73ir
TX/Uwvr84VdvUH8VP+W79hO+w6upiDfdlH0FP+ZVeZN/ubltvnPnhw/IyjoN
3sZytCW/xZOyEnYom/Jmyc0PusH6sSLWxIqyAr3TNZbAJvULeF62TF26wl70
ZymPJfk/5JkwfA==
       "]], Line3DBox[CompressedData["
1:eJwNzrkyQ2EchvG/cQOyitCYMUMdLoNGqSJiCxJksVWWwi623hLbhbgRNKF1
AX7FM+/7vc855zuDxepkpSsipjCejnjviZiQzUREWS5hLBvxLd+4fDKiwR1m
Iu70W+ykIl65Pr3OHXA3+q79Wm7JFz6n/3I1z1zp2/aW3JTPfK8+6q4NftF9
C1jTB2wj3pt3Xne+9NwFmt77sA8j61zlzuUZfmwNvu27fzJjq/Cn8gQdvm5/
4tPOq9y+7Vg/Qo175FL6CrfHzbm/hC88cEmu378t8zO2aXzinktwBa7MzdqK
6PaNIfwDLVMw8Q==
       "]], Line3DBox[CompressedData["
1:eJwVz0kyQ3EUxeFrTkU/i4ieRIwswAZQytTEFImmVBHpiG7GSLsBO9FL2IOZ
Rfje4NT53/O7zXvZ9dJKsSMi1mixP2KZlmiPfrojGqmI056Iud6IAl32RXzL
2wMRj+omNsvzdIH9yfP0oD7BcvxMPsNf5OfebfP36mN8OtkhK3e6w1vYnayB
Hei/pl3fskpf2A7fpjo+PxgxlewxN5nc45966vxW/WS2pm/CuyYbT/byDz0V
numKqOJj8lGqyt6xlrkbdQUb4VkquZl2L4dteR9hw/IMPcuKsjezG7yMDcn3
/dOv+lW+yQ/lC3qvKI2n+D/IoDKg
       "]], Line3DBox[CompressedData["
1:eJwVz8kuBGEUhuFjT4LGFpdgHtoY01qztnABbIR0QoRVN92G6haRmG7J1OZh
xYpr8NTiy1fnfc9ff1Xn8mpupS4ilmS+JWJBcrIjX40RHW0R+daISlPEZHPE
hGxzn1w7t+U54cbxMTnLRHxwd85cm4+5UV2ojzjl3rkr8xE+oqvYn905OfH8
xl/ih/xsyqTmjiz2o1/5TX3Az3BVGeYSZ1+4bENEmRtK34ENpnfpZ66kf+0v
SsnOALeP9euyfrJzy12knO/TvVLkHrkb7ty8x/XoXf+U9y01bl0X8W68Ym9a
NrAHbk0XuCkskS4739g9lzH/A+svOWs=
       "]], Line3DBox[CompressedData["
1:eJwVz8cuRGEchvH/INETfaksSNSLsbBB1IhgZtQ7sGJchV5mDLfgKpStToIE
IVF+s3jynu993u+cnLbxdH8qERFTGGiIWMM6Nmsj2mVVU8RCY8R0TcR1XcQN
trgOrppb5Ga4W/0dtrlB3TnunWe5B/mIHS6jf/b8hDnuRWbrI3L6IezavOla
vP9VJm3eZc7mmB/Gns2nrtXmQ6ZskvozHNsldF1cJ9LcanXEl27fvW95YTeC
ee7HOe/Orzzg/+QlN4oFvogrxiE3prtCifMiVyrLcMRt6Ht8rxtLXLk+rxtH
lu/T92KZq+BO9BPIFe7qM1jhJnWnqCz8L9fs+R/9aT/D
       "]], Line3DBox[CompressedData["
1:eJwVzr0uRFEUxfGtljATH4lSwzDm494Zc2fGW2g0KgUdBbV34RGQSCQk3kCh
ECFMhIgXEJ3fLlb+66y1zz5nee9o+3AqInZpZz7igl6oUY+4xDWcWYw4Xojo
Oq/MRazLHrCJb/J9KnSrsgltyB+xhe+6D75BZe7De2zrnviwuzLzmXupp2vi
Fw3lE/qVdcxf4WnNft1Z/kf2zBf4ne9R38yB7pxK+WvuxB9s06Z+1pudnM3/
Z4ZdvHNnoC/4geyar7Bm/kRXOZf5L9kNP8K6bpieerqx7JZvyUfujPkt6ud7
0xF/eTazpPsH+Wwsyg==
       "]], Line3DBox[CompressedData["
1:eJwV0LtOAlEUheGNrYXigL0vYCkKM8DAcPGeYGNtZyPv4Iup4CPY0hATY9TQ
U/mdYuVfe62dc87M0cN89lSLiDu6b0S80Ir69YhXLPEkkzcjcnOLH8jWOEyU
P1KhO5X9USX/xNphRFt3xvf0bRzpvnBH19F1+I90H+XmA/nGzphyXSkvsNiN
+MaJfIPd9A5dZr/HT+U/eI799DZdQ1fyF7JfvMQBvrmn0g/5K9mCv8bZnvfx
lfzGvOSPnVHYH/MTGuluddv0L3Rd3Tv/vG8nfZe5Tv/2Wihn
       "]], Line3DBox[CompressedData["
1:eJwV0LlOAgEQh/EhsRaNgrVPYGtl7X1wiHiLVpJo5St4IfhKNCqirW+grdF4
IWDib4svM/v/ZnY2O145zh2lIiKP8mjEDW7xMRwxOxIxg0w24nQoYk4/j09u
QZ0y95yJOMQZvyhbwhefGoxY1p/LV9RX5NCz881Pemdf38IT7nBh9l5tY4L/
MVewk8clV1Tf0HSvig5f8ryKGj/g5rt+Db/culrGFfdifkO/iS63rW4h606d
39HvJt/HTbs/Jj+x0+D25BX0k720f8Jfy/dlB/iTN8w+yh+SXf0/ziU0Lg==

       "]], Line3DBox[CompressedData["
1:eJwV0DdOBFEQRdEiBDRicBNghVkREQzeigABC2ABA8R4T4Qwm8B7bwZvt0DO
Ibh69d/t0u/umq6hhsGciOhHqjQiWxLxiInCiHJZhtxURDoZsV0UsYNJrkKf
px+208zt6vcwxWV0VXwlWrh9/QGmuVHuyHyIVu5YnuBXP8OfmfPtnco2/lxu
cI2Y5S+dE/yFbOcHEhFrxRFXznN8krtGATr4B3vX3A3m+Tt5+3+Hd+/k783r
9h/kAp+VWTtN6OIfnTf5J7nIj+lfzM/o5l/lG5a4ce7D/I4e7lN+odZdy3yt
d6pBL/et3/J8Gitcvb4OfdyIb/rhV///ly6Das/9ARUPQ7E=
       "]]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0L9L1AEYx/FHCVHzF4InDQo2tCh3s5xOOijo4iAluRjEmXYKTcIJZ5CT
kwr6B1hGYKAgkYPm7C0OZZoHRToKqbip9Lrh4f18Pu/n++XLt21saihbFhGz
prw64qI+4t6s2YcfRrzHV3K+KeIlPtU9qI2YsG9yk/IWvpHn3ExjVvfITWtd
xC6Xl/ewJRGR42fMW13STYebA25RPvR8wd6lS3HLuh7sln/qP8jHOCD36tfl
Zzgof/fsGfdVd47PdSPcjpzBG35U94/L4GXp23GcK7j5zOftr3W33AzeYQ7f
cXPcb3dLuOH7K+1XpsosuJl3s8xdy+38F5Ow72Mz3vEr7j65qaiJ+Iarclvp
H2ORf2z/aN/nEm5+YEtDxB8uyW2X/gse6Z/wg97d6J+mdZ1yF/7SnZi0fIop
voh9XHhXP/6VX5gBN/8B29RIMw==
       "]], Line3DBox[CompressedData["
1:eJwV0E0opWEYxvGbEwvGx4aGKTkNpZSP7RRjw2JOIRt1jizsfFsrysdulhPZ
2oxmLCzMgrI42KhpKCvGQlmwc0Kyw+9d3F3X9b/u53ne3vTY7NBMUUTMm1RZ
RKEq4s385IfLI7bolDxu6mojslhJRURVZcSublr+Qxvl5ZqIUt0cVk/TWF63
JJ/pDvk27JNuFeug7fI//Id8bueU/4p16taxXtoj/8cf9Bn+ih+gfbpfdnJ0
UL7Fc/SObvjeEfxAv+3cBD+qe9RN0ic6SyfxUzs7dpaTb8deddfYG12QV/AX
/Q22xi9iZfx3Wk73vLWOPydv0X35I39MW/yzOv6Iz36I+MzX0Fa8iW+ojvib
7GMXzv52Zwe+6b1mrDO5H7vUtcj3yf1yF/5F7k7ulgt4l5x3rlg+Nt90GSxD
T+SU6ZffAXFUQ9s=
       "]], Line3DBox[CompressedData["
1:eJwVz7srBWAYx/FHkctxK2FxSQYW5VoGWQwuxWCiXEpGzonN7G/AyWiiXEbJ
hGM0WN1KoQzqnEMoBh/D0/d3ed63921ZSE0mCyJizRSWRWSrIvImZ6YTEV/l
EZWVEZ94VRsxIyuuiLiWlWCKL8Nm/lVfSq/KGvBG1ojrfDN28E3Yhd34gj24
oX9zto8elPViWjaMWX4EN/W7sjF6QjaK0970Q397a2ddxC99amdOtyWbxXnZ
Eib4ZbzSpzApT+KUOy7cvcLX2VnFRztHdH11xCG2uvtJVm4+TNq5E2e28Ivf
//+bvQMsdt8RZvhD3HbfOfbzF1ivf3D2kt7TZXAfb3DIzi3u6Nvs3dPHujs8
xez/3+3UeE+OHrDzjme6PF5ioZmyU4Tj+me63T+ecNH8ASt6RrA=
       "]], Line3DBox[CompressedData["
1:eJwV0E8o3nEcB/CPgz/xPChMboiDlMaBWK1NbozmttyUK1N2cpCiOMhRzxPO
2rS24kJykZUdll12WFETT7nJnzwNef0Ov17vz+f77vl9f0/D6MTweEFETHsK
SyPuUxHXFRF5jpRFPLKyPCJXE/EgV8ll6YjfTHFSp5yN5kudtDxlV8+/dg2c
Nzdzw/lLuya5g53MsYsrOq/41tzDXvbzikUvIgbkzzqDfG/3jpvJ/eS8+7br
PMl7dllzRWVEhvvmj7p/vHuSv8yfkjt6juU51urN88y8yBm/c6+/IM/KmeT7
dLK801nnkv1/nTV5Wf7GNp3vLPE/bXPXecbZlrzKQ3br/GCdzk9+sT/iV56w
L7m7bzmVW3TOuOPsH1vNNxzSqda5lV/b5XmQ3JlvzEXyuXd/0CuWh+xycov/
5IJjnmfBaUiq
       "]], Line3DBox[CompressedData["
1:eJwV0L0rxHEcB/CPnOW485C7unLJori/AIvVesUsLiPjFZO6rjzEwHAD5aEs
R5FSDBZFFilStrtVbmdQXje8ez9+v99fv5GFleJyR0TMQTIZMd8bUceL3RHn
eCgd0ZmKeMlELMkydF52qyvzd7jAV/RZ3apsHJfd86jb4F91T/SUXUG3LZvG
6zZv8kN+OBvxTm/KqnAkm7XZohvymjsuZU16T7YL13zJZp/+lj/wLXzMH7Tf
5y+cW7M54X90H7JfXOfP4JO/stmxGeyLSPBf0AU37Tdg1Le1+FObnE0//QcD
cK+PHv9DN6FL02P2k/Szbgb/AxcLMpE=
       "]], 
      Line3DBox[{2571, 3937, 4084, 3938, 2917, 3950, 4098, 3949, 5658, 2919, 
       3351, 3796, 3352, 2937, 3958, 4101, 5684, 3957, 2939, 3372, 3808, 3373,
        2955, 3968, 4104, 3967, 2957, 3393, 3818, 3394, 2975, 5664, 3977, 
       4106, 3976, 2977, 3414, 3827, 3415, 5529, 2994, 3986, 4108, 3985, 2996,
        3429, 3843, 5640, 3430, 3013, 4000, 4112, 3999, 3015, 3452, 3854, 
       3453, 3032, 4010, 4115, 4009, 3034, 5554, 3471, 3472, 3052, 4160, 4120,
        4159, 5691, 4173}], Line3DBox[CompressedData["
1:eJwVz78rxGEcwPEPcYX7mb4Gx4BCRpzhBj8WkTIoZTDdH8B6g8FguGQwUIYr
sVEyXAaDTIrRfBmY3GTBRl6Gd5+n5/3+PPUMVbbXttoiYgOV7og63nIRr1hO
R/xmItadk76IH+dN/gR32YgWX0LL/X0SsaJ7/+/5I1xrXvgRZO3P8fOYxSp/
iFPNM1+332tOcyVMYYk/QDEfMWP/gW/HGDeOUSzwNTzZ79fd8h89EQPcIIoo
8w1+z0w0V5qmJs8VkEPa+5P8LgqaM82jppNLoYvvMCf4HWQ0x5obzZc/XHr/
2/zEMF/FPn/OX3CL+j8ckiy4
       "]], Line3DBox[CompressedData["
1:eJwNzj8ohAEch/GfKO5wdI5F+ROLjMpiYhEpZbBZmFFiMEiGGySJoqgrUWwy
SBJGZSUsIsd0KGXAxGd4+r79nuftfZtHJ4cmiiJiHGPJiBwuUxFfFRH9CM/D
VRF/lRGvtREj/CYu3At8J/Lub/yArmCH+XUcah75VjxpbrhuzbUd5Fexrbnm
c3zGnnOdmjPbxy9jTXPJbWmK7T7XptmzPfyJ+6LN6k75z/KIRr4JDejijjRZ
W1cdcaB50NRwGaRRWRfRwS8grdnRXGnKuARKkdS083NIaTY0x5pS9x/f/sU3
WvhZlGuWNLuaEs0794E31PMzSGjmNWv+b0WX517wjAw/hWl+hZ/j79zvcYte
7/4D4LY+UA==
       "]], Line3DBox[CompressedData["
1:eJwVzz1I1XEUxvGjIEG+LlcEURR1y7JBkEaXwCmassUXhFtpiS6KDhfUQCUU
hQJbfQk3FRGXq26SLjqouAgpTr5cJ4erQZ+Gw3Oe7/ne/49b3dn79ktORKRM
19OIFyURz02DeZ0f8VJmiyNqZVNpRI180K8LInaKIq5kk3nFzXXfwG4KI5o5
5/ih/CPX8XpOcH7ZjzhvvHfstvS/ywVZxfkht92f+e0e/l3fT0T8tueZBGcS
W+ZUc7awrPsElraPyyecYTnLSXDW8HvOELZqP3N/8P4n/Rue4jXqS24fsUW5
z8lg7/UJTpJTr/90a8Xm5CbnArtzb8Hecer0abcp707JRc4JVum/f8UyvAp9
1G1MH5EznD1sWL90L7UP4kP6rm8P2FOcNN6PnXKK7J/xct/tw3rs3ZwV/IN+
wMmxd+BlnCTWbn+U8/hfeWvazD9QKEuf
       "]], Line3DBox[CompressedData["
1:eJwV0D0o7XEYwPHHcnEdb7e8ZFCcGAxMbihZWEyYpETKJsopcQfppqMMBklx
ZDVgcVaRQXlZlEHJQFIMVm6U63OGb8/z/32/v/M/59SNTQ1M5kXELMZ/Rmyj
qSziuTSiLxFRWBIxZK+sjCiwj/CbaNC88l14L444qdDr3uyD/DoO9Y98Ex6c
H2l6NPf2fn4V+5obfpurMc+5Ds2Z2cuvIKP54i9z3wdZrkVzYHbzy7jgV3TH
/L+iiC0uqcmYnXwaC3yWf+KXnFfzafPW3d/8X6Q0O5orTYpLaIr89ml7Mz+P
UU1Gc6QJfs/9PPO/80b+D3a5F8/PqPU8g0V31rQbXLvPa0NV7p3I93+2es+c
Js0nuTt3681Sfgqn7iadTWpSmkv7NS7wg5/AL/sYP8x/5v5Pzx9mufkN+opD
Bg==
       "]], Line3DBox[CompressedData["
1:eJwV0LtLW3EchvFvdRC8ZvCKQgiIDhV0cxAEES/goE2HUqxoFdy8DF6GYAuK
CDoYEBG8EEeXbmLX/AHp0kkQ61IEFwdBxUX9ZHh4c87z/E4OJzW9kJ7/EBEZ
zJZH5PAxEXFXE/GpMuKbncA4GuojpvgjtGnu+T6kuc/FHl+5A6T4/1wHEs4N
ccMYRJrfQ1JzyefqIprtn6qIHr5gR/hdnFS75o405fY316W5sAP8DrKaPPdS
EXHqfiufs73chXNbdl1zrrnV7HBNmm17xXfzG1jSnGn+ala5Ks2KvdR08j/x
XXOsyWumuBLNpG3nMkjzWf4X/+DcGPfg3qhN8qvod72p2ecPdU+e8YxHNBbf
Az/8XkO2+P6af87c4BoJfhEtvuuSZplPeH4NytwvdX/Odvi+M/7nC95QcPbV
1tp3VPxCbg==
       "]], Line3DBox[CompressedData["
1:eJwV0U0o5AEcxvHflIO8z4EiB2ppL4SlHKaUmFIu6+XiYBnkhstKHHej5MLd
tHsSd5Qbtbe1W8bFNq2TlygUJzn4zOHpeX7P9/lP859pzMwPzSUiYplmSyLu
KyMSVRF3fKgsYrA04lIep0n8SfdffuS91IO31kTkdCM0ZnOtP5OveAsl8Q67
U90ADdv80/+WL/iP6oh63mTzS5eiQZs/umyF53gp1eFHWDul8RPdm2c3bY7l
V7ycvrt/lvtuNof4AfZNt89v8KBF94ZNHu+228O+6nZ5Dn/RTbvX8SW7NncW
m9Jt8wy/1T3jo/KkzUf3Fjbi3uTD/BzP69PyZ5sGeQ3rd6/yB7xP/qvv4imb
WnkF63Qv80/8RNfEm/GkvFDo/a5F/qt5+UPh/fRJvJjv+NwZ/TRNeJ/xwu9v
84W/AwThQ4Q=
       "]], Line3DBox[CompressedData["
1:eJwV0DsoxQEcxfGf0VvKIzJQXAYKeQ1KDKQsEoOJwkYsUuwkFjYDi1KkGDAw
iGJQDFhQNlcGEZPF5w7nnt/5nnP/91E+OtU/mRYRCzSS6SU7oiAnYicjopCP
Z0UU8WRBxIQ7Hc+3KcaO3FV8Gk/wD5sZdz6esKnGLtzNfB6/1re4F9wleLtN
q3zn3vDZi3i3vMTLsX59j/zpfS/yvs2abhBb5zXYqM2Q/GPzLp/bbOrGsC1e
j83ZLOvHsV/53mZXNyvv8TasJDdixWabp+mTdKw7kCsLI07cHXaV8iHl6P/o
Aj+VEzaXqe9v0yCfUak+C7ulG8++wu7cfanf7r6mKpsy7Cm1k5/5gL43taVa
z220qcPf6AFL8mGbR3dFnv/UpsOmC/+ib2rCX/WrPjfh7tO3805qoC5qpn/T
9EI2
       "]], Line3DBox[CompressedData["
1:eJwV0DsoxXEYxvH3sLmXS+G4ppwjZWFgYGbEYMZkYJOsBlLKZnAZpFwWFFEG
0mEwnHLfWCwcM4vkY3h73u/zfX//4d80OjU4mYiICZMtiUgUR1TL3YKI0cKI
PVmD8/TjuFzW4hP9ND6VaTxXGVHBzehSsk2X4Rbwlfzku3VpblHXK3vwLbeG
7/k7e7+uj9vQDcn50ogX/Qq/r3u1j7gZ5g7xmFx288R/cJe6nFzXrZoMnnXT
XOWb+It71H3LbbxlnvGB90vudnAefjf55ggfmBbvc3jTzTEutf+YMnOO570/
k7///8TNhT1pLy6KqJNt3t/orv/f6rJukmURrVw9budT9izfgN/4Rr5T14G7
5AM3oPsD04A8Gw==
       "]], Line3DBox[CompressedData["
1:eJwVz7srhnEYxvH7zWFwHjApKZNei5SUzeEPsBgUZVEUE8kgh8JAkePKKxmU
UzIQo8Ni8OYwiGSUUgwsfAx3131d3+t3Pz0VXf2tfYmIGDZthRFfeRHnBRGf
tN205Eac8QnTkRNxr/Ng7kwdXo8nSiMO8Ld8N3Se5fv8E92jzyURSb2UPa1T
520aW+dv6C++Zi/XWaSnOlU6F9gCf04zTTE+xW/hjb5zIvv2dlJ2bP/As80Q
P6/ToHOI72Lb7u3QR/xH3q0zovOA1/IbWEonRa903mXL/DSeQ5P8KrZkX6FH
Oi+yCv8+K/txr5KfxWb4Gbqhk4Xfyidk7zpl9jFsnB/9/z/35/Qu5UOyV50S
+yCWXRQxQEfwE1k/fo/n23vlNW5n6PTYe3R25Nd40E13O+UdplpnXdZEm80f
6jBJ7w==
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJzUvHk0Vu/3Po5MpUSJVAoVIUMKkc7WIBUiUpGMFSmNSsnQQKVkKiqSIZQo
8xByiEqZ53l6PHjMU0SS73N2f/fHa633b33Wr/+61r2Oc65z3Xtfe+/7PGJW
5w1OsrGwsGwTZGGZx/KvfyPwX/FXc2odfgoMUtnjptbAGJ300zIaDzgeQexQ
vTFI4RuqTVQpvLxWSt/65Eci9kFuN4UXTK/YQeGHNtimJU22EEObVjMofONM
CUHhxjNnWg2PcIL7gytpFO67doCTwr8KT1u47NkB77t4HdPFGFCt+/j54m46
9HiZDWtlJELGKw6bJ8vKQPSubd/V/u/Q3WoSkq87BJ+/hdRkBHaSeYw7Z9sn
20mfdU4BRl9o4HxWbvtsaw8cvMByTzOODicFTvBZpBbAsbgnjb4KzOt/+abV
P0YHtnzpHapihuB+V2qIeT/AOb5AmXk/EHQn47rZEwGgpSgiXiN7fSuFv3ri
t2StHoP4X/H83EWhh+IhY+alBsWDf53FqarYd8Qri+WIy3Z9QHxAu95vBf93
IsFZBvnf2haG/Dtv+OzMGjREnLqs2knhhQ9W/r1OWOCS+8oiICn+XM+LiV9Q
0DzTw8Q/Dhv7j5Enof2MwHrGegaomUbJJfTSIbW3MNSf+z1kHbj28fNPOrk+
kh4QtoFGvvhi5pTd2wb3E2iXW+0aSB+JivUi82rJ48kabwzU+sG28vHpjUx+
iKBe7SdMfipC3l8wl70HppkcTRRvV7VL1lO8fVXqlIhO2AJNlgojFN7VWaqE
fFYv4fAuZQEf1/BRCvf46bWFwhf3bf4h6Vr/n3ne07atmeJB1VNTl+Lh+Klb
ia5tocSjiTDUoerxCdRhyPpro/qNGcRKpUPI2+sEPk0K72c/9VzYsp7gDCVQ
/94ai1D/3ZImfRW8rGCnd7WCwnefNpCkcOlzv8K3TyvD4xRbJ0chBnm6/O2Q
XAud/KX/7M9PznQopz3dfsemG9bL+p4VtukEkpg58VysHk50Dyywc6STlwfW
73T80EGe3ZRRVsjbAZrBJZPRsXSwP9HnmNLdAU0d71RFQ9tBc3KRvA+Tn+Se
DQ29TH66tr0TMb5hBnEnDw9QvJ3w/KvbfkcvS5e2laC6anaYwpU+mSN+/Oii
6zduDhFxb7MQf3wzF/E1yjW5XzS//2eeh9zZkB/11DzkxyCYU/qScwyxL2Z9
C4UbdCvrUDhBC7RqSf9MSJ9RQ55/09Yiz5wXOX+dO8QgvhxzRVzGW2Ynhcsf
b5XzPLoMUj0kVjP3Kdm+lDO2j4nzmN84OJt+FIZyljuulWbA9dopc5NBOtwu
MLaSOPQaujdylxzRpZO1D7UnuAI6SMHlt0a6TnZAl/wF0UuqrWRpabZw1cZG
kjvjyZXg3wz4dnVK/bccA76Kb2rxGqVD8OKwi5rST2GJ760C1GdvMT/Fj/xJ
y3ty0gSwbqyh9h3sV1DHOBDfw9/s3cUBra/4kM+y0FsqFO5QsCs+dnEr0f9F
BOOGyppQXF/vudxNJv7jP3m2WreYTvFw/rj6boqHbTdbjN9lBxOu34+2U7hL
oMdeCuftD/QpWZ5K7Ff4gbwtETPG9X3f5L7bTVQRvad0cH1qw0Fc/9Q1Juel
0S8iOudpOYX/GBPbReGf+tI/JJ+Th2G3K37V8gzSPCdz514mTlMR3TUT7QOZ
oikX2Wt6YM0Fg28Rr+iwV7t856fBz3BBb79qAoNO3mo+dtp3JY1ktQm9airU
DvHzq+V/JD2GmtWrvA4u9oPza/OKj84OwzIziXMPmDyEScqmdDF5WFVeofNY
5TSwKXqhbtX73m2i+KkUEp/5JbEWMr4mY3w44uGG8YF3mHP7zX3jhGxvGPL5
9T4n8jm543luz9sy4p5lPeJaLV+Rf4+G4Fu6Hon/5DldIhHzlMxiRcxT15se
anycjCIebx+sp3DpOMGDFG7jlzsVJveJOBO4v5XC3+9v3k/hB3IVWrVdO4nl
HdsaKbz8xbIDFK6T4L60Mm4xqClflUP8nE0OM7+QL7a6HRf6owtmMz7rOWQY
wBrhXCUyRIe1uiz8E7FRECfzq2fctYMcss8V/aLbSubHeBXPF+4GWlBp97NH
HeQijuVua21ayS/8C9zesXfDadq0SsMGBsQxdh9UH6BD4DM758s+MZDt4/mI
4kF0+5tuKq/tdtt0x+T2HqhzWYn8DF47gfwoiqz81Fu7EPxXeCD/3qvPq1G4
fl7YpRRfGpEdI4R6Drnoiuu/OhqZbwzNI04fftRG4S6vLuyjcBb/Iyrzr0f9
k2cVs5Ayiof1KXXHKH7WXC5T1/qVSEg/+YpxI+1F8x4Knx7vW6V1vpzQ9d6F
uMXZAxhPNiRver3t/g+Cs3+8gcJ5Ew+hzouexT0M5JAAR5fCt5eZuNTl8huV
TLxYO8tkmfJ1uBL+ZvbhUiYP7tzZ3xro4JS+YNAnLwNCTIfL9i/rIkeH3ytu
2kkjO9d1jV+waIN71iUX7e2qyD2rbLTdy8vJ6JyP+4/pDcKdbR1nbjCf9zR7
xsd65vPmmGy07am8AqLnBWkUDxvGzqM+A3y87XeT0mASxz9G4ZugZjOFq7Jo
J61/PkW46Vogn6dqNiCfe4QOV9+QryIk2bN+UHjnyt8KFH7R44LrPc+Uf/L5
NLiumOKh1ZjHnOLhXNTeoT+/I4jhiaXIj/7KPn0KX7bfVYA3IIeIKY2qpnCh
DWyHKXxe2l2G8tU2Qj5XDvUv2z+MPmHvuk2tAlVcMG7eEU7hWrSXHBQ+Ukub
HyWwC3yGCp4GSjBgUcgTU60+OrhVS7VP876DEb1W+YL3bmQb//dGsQs3yOhj
S5T854bh7tuB7ZPanWSx2JM+sbR2Mkfmzjbm/yGw91PKwz89sFLcPuP5Vzo8
ayzwClPPheP553kpHowSdRwo3WoMtz4x1jgIcYbq4xQuxXob+TEa4/6ar7IU
JLSf9VM4ye+8jcIt6T7DmwV7iDGFJlw/yvsH44mD9GWD6Hmfif6Jz9Tzgh87
+lJQFN5dxKC/+SfPAd5d6K+CtNqpOEPOvZ+Wu5z7njD57lNH4Qr+MQYU/mVs
kO2LchGhrTKG8TYxLgt1+2rbVP6w5AgxaHwN34uZ9UOMG43XJyp8XNfA1TNr
bJnxkJw29m7uouLMsmb33JWnYYOuapjgOgb010suE2HQIcUx6lUTkQCmbG8u
FHF2kSPvrHhfKdFIsxV57RqRbfDTVEF4/9V60nhjL6ErX0PaLCmNeR3cD2cF
U4P2UPEzyoI3lvm81x0WS2ZO3AHOyLvN6BMy7KQpHsQeG3h9mLcZuDyfU/sO
TFKSqf0IKU+arX3ezBF/nBIwboR/H0Pd3k1OYAGLOmJ6ZQjqvP+bPep812jA
g1apDEJ4RobVn4nz+r4Up/Dw3omTaiqh/+T5qG1CL8XPxZ6s7RQ/m0WXdEVW
fyAK3+mhf/gpPw/9w2x3MLeZTwORudoeed79bAR5pj288lRzHRvUnVHNo/CA
iC55Ck+V5TfKlVcFeoXAFmeeHtKC5cv55ROdZOCr9u9FDlUgo5c66GvYBV4i
D4LXXKNBgmmr0rYtrZA37uhhpMeM4x6K1nmBHeRAm6FptWUHnBxJTtkN3eBH
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
uyrz49NWJhPGGntRz/5Wuajn8uV9ImXOscSqkTj0jeF3qtA3WrExKlclVRAb
BLtxrnFW5ibGySf3TXcbf/1KbLzohDqfvJaOOjdL33Gi3HeSeM4WgPtu6IYc
9oX2xpAmGjv7iY4z1rhfxJftpM4bkIJsfp1b5aRg3CoK8WW21urYF1prH/yl
fzl4sfK5GDNxvTfviCwmruo8fnt63y04q6PV7s3EDzMSHXqZuGuAxfnr6haQ
fyx1yS4OBuSlf8i0K6HDu+hcK3nVHOhcyacZuIEBbtfjbNiYcbvWfZev8mwM
8HYZJ5cv6CJlbx6zX61KI/UPen328GuDmbBx+Qc5dPJm2tKZxT87SMtGqT85
V9pBOSJ0dD+UkgfCiq90bvpOHhBZwXPp5BD0hCz6+Cuhicz4/cBDfaaOZH3s
kHBsex/sTEg+fIc6R+SxP6CN8vPpb304H1+EqndbthYx4/+7K+JiGky88mjv
bSdlXzhZvRn9RsjIfuwzC2/UWj7tJAnGl5Spc2hg1EFfQ+EcP6o9x3u3goqu
1N/+c7oa6u0a76nsBMtJAg7roA61DA+hr+s25NGO3DAPHv6SwHrkyAVfrEcE
pJc7rRBp+s86FN1SjjpJDI1Dndj7PWnxXxJJ9LufxPgWy9KP7zGtN/wRx4cQ
orAiEHXIlu6I5xXN/c+JORnlEurXm7Huy+j+jPXgSyt3uVlaGqE1JojrK8vZ
UbeR0pnrZPg7CP2voohzuM/idZorqtk+LaglJASlMW4HD1zEuuY519MXPp4L
oOdYLOqq59XffmbbVOI5jeFZYqo4mKrjyBwpLjoVV7V2P9de+HQPsMvy4vmf
7AhHqv4iB44lhcePKEJmU89wPDPvR9NCV00y9bNza/V5RfE38NPar7VMlum7
ugV23GfGxfkaryONfV/CXauFLHoHa8jzwuVLZa5WkjK6TbKNHwbg07ye4I+X
ekB8C2vo3QN0yMu10RW/XMb0o0eV9T7QSOMtOQmiKu2k0aOB9xE7mX6z6ij7
BmEGCAzW6EW10iGZzzfXd3saBFtJfV2l2AAiu/36JypqYCiUIX78YD9ETv/S
o97vhq+TOIeSm3doaJO8LpybtLv4iJrrRUQZMJh4YKhZ4LJb1rDiUjzq56LL
QoxL4VmuQw/l+eH2Eh2sZ0U8LbAOHTS3Ez1/QBTe1p7A+vRLXRHiPHqF0woq
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
OF9giaDpvJkMIabOiGMdOmf8AOeqo1+OSsysSCf0O29hX+7pBl/sy0W2Dp6I
16kl1sunYn8jIF0V+xs3ZkpNDln/IU4kaeLvA8Ss2YpzKyOGTGOl6WZ405V9
bLssg5RRtzsxf4ROHumLnEn6HgbbeaIuSFkwdbI1IOU8QYdd3Amm5NVyyN73
Bd5UNYHKCusTu4XrQbvHiWu/bB8cN7ySQvXt827m36f69ll7XD7njVqBxvNI
9MlXrlVh3Sdbe/S5JpsoRL2sQt9ybes1rJtOv5QJqeseITa8XYV6e5g5hP0l
m4l3S3/eKSbkL6VhH3tveSb+/o9V2He5zsbXRIFTCvJgvvIo8mC7fpkNg6+A
ULRcifWOcV8+9rH3lfX68S7oJvhXfcY5jlfIa/zdla60uFXRcUvAbu/PRKru
njeWZkTF57mCh6wB8YZQctah5Kl3J9n9IlWpdridTNQ4eGxdDQ34g/nU+oh2
MnNxfd7ltc2ki4NtakBqD7RU59EdZRkwZl37RJ1Z/7oUpB8f2xwGZ+9+eIf+
/+0UF/VcZmY2753GdkDRxrWoEyMaP+rkJbspi2kSN6icwnOVoKU5g99Hi96S
bul3bie4TEWQz2SZR1h3HFQ+9HKQJZd4fNwOv+v8OGyGPvyjLx8tOyqZsByx
xznUzhF/nENl6f+wydWtJIQb9HF/FTlP4P6qPm0Qqez7k6hq5kTeHpz5inFs
ZXeI0vJv0hB+2ad0N7UfH/lpxDDxrUZlHFeV3SHh5DJGxUwPLL3o4bn9Mx22
ax7y74zNhYDJrV3nBAvJEZ1br/c1F5DhltWflv8ZgpZnZ2nUnNosSv0rNafe
Xvdmt/ToedipmIx62HGeDfvk2ySlv6+QlICP+QKYp9TS5HC/dIl/uz1zeYK4
1jCLeFS2Nvrtz/p2NE/VCuJUSx2lf5BPPk3pH4xU8kzNvyURuvfdMU8pbZXB
+Uj/n6OTejW5BOeHTxh/WFd/xX1hefG22br0DiLhnAvuuxsPp7CvuJu7KXcn
jQe+bl7khPmu8m0jpZPOG5lZ9HN7ocCEY4+BNNX/nxq8zaxTpN3LRmP/RMOz
nA1Gr1iaSMP8NxweVnXk8tGU0H2P+mDT/gXbv5+lkdtjIy0yetvIMH/pMzNZ
dJiXMlj7dg0DdKZfdO+l06E59Z5nZXcSXDT7Yo51qNaHAiqPO8axFkkLacPm
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
vGJMrh280wNbDWdrO0zp8CtbcaKQrxTMj6m9eahGJ/dLOLvnuneQDl+JXYu8
OkBORdySpv4V/h9r7x3P9fv9j6OiZYYyKiJlZjSsHqcQUVSKloyXUVSyIpGQ
JCRJRkbDjrL3eNgrGdl7Pe2VyC7fx+Py+/f9x+d2+/17btftuj2fj+uc+zn3
c851Lkfp1ZMD+0thKu2DFMY0Ax5X5nwt3Xtw81/KaS4POvCifJ+r7o0EDprk
/4u82wL8/9rNvpo1AsvVO7VHb06CQsBCbyuBD4srWnr3CXwoxmMPqIsFAfZy
It1rdAR41PjkvdMowLTbyPqAXQn8Z8okQvIjQ+HP7CQ/SlVkpr/JZgSiE5Ri
8tyD16IZyXM3KaH21e/AIMP4zSjpx0vf/7lM+nGBnkhf7whNKBtYQ/5apsMJ
xTMGm3JnZEN5oDGPFvnloOfNyC8703de48Bogb/VA/mj8t/UiH+1nLUV/yjL
Cn/cClEcaJRbjuLAWqaLBZq6s/8TZzSMNiHeXeVsifTNP+LxjTtWMVgBnzLK
V+zf8xXx8RvclS9ZY0uwaTFGpD9To35Ir9bNms+3PB7ChoMS0PpnLIuob3PP
TrpY6bllLChrO8qH/Pt5GO2z8AqXW9jGAnu/dyD+IpfzhOQF+JtNy/6PysSg
+3YE2mf56xLKAz/taxsqL9kLnCn3Rkh9y2LMukbiv+zPtnxGf014+0r57MSR
UTxy/g+rDiEX/E15VJb4Cj6sVE+Qc0IWoj22k/PMC3eEZLh6mEDv+SWqJSKe
j+lX12WZpkC2b3B9eFkU/G4Wv1vdOQJHNq3cdY6jELj4ZD6Iqww+Xn9g4HSQ
4B2hf32vjJH3TVLD10K+QbHkdMBtpUF8/7Tvo4DEPjzO7kvx4euDYMS9EGbl
0Yd/0HnqVv+5C0/3zVBbujkCorfrP7Q3+OJBt3VuL/C+wqeZ5LqY/s3Azhux
WS9E2vErfief8Pxoxp+Ktd0OuzwBNXGNvG0ioxCxAuIpM8S5b65NpC/+BPQN
cfPkvKY2v4Vz5Jzk+NnGWwHrpiDvfui7FHnuV0O+vSfkv4s5XmZecgfjTibk
11TfFK+R+qZW33exv0YB9hVYIn2z/RiGeFlbif3LT258sNZ0G9VzXSIZ0JyT
qVuRfHanjwLL7lLERz6PBSL9fHZO8X34021wXnIfkr9iG9m4h35U77qODxVo
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
ODuVsihI1n2UOk/5EXLviu9Pr1i/gAS+s4MtBD5TlnTXnQh8VprKZxtOSoCH
mt393wl8m3bIpDck8M32xQcBO5cg0IlJjdMl9tmWkzSJE/uc5jDz0rF1hjdl
3Shvb2mohfoiWp68VYlI44H6ZX5yvjp8KVsbJPUq6tet4aLvKrDyhDeXlF/f
oY3mCvaLXHjSxAzQPsRO4hJcUzNAPP3fa9aQH7QSYG/6BvHuGW8pJO912hfU
cJ0Wyt8pIX6970U54h2SiRZmerNEvLfNDNUT/1s9jfrBxODsu5i0TRDGNNhN
njtVHu190o+/PH1Od95UE96f/1dJ9hPm+TckkrjH3P2xMp5FH97wVzWgOuMS
HYozlanvsy68EYNzPDzppDyvOw+9586RaXBpyF0eki9kqa0Kkf1R95TIeyL9
DCyMYngU2NOfuW1P8pRzSvtaifX2+XI3kgtt4QVrb8wswdMzxTL9DMi81v4Q
kbN7XwEWf7/1R8UIDJ2+KCgRRIEPg161/ywr4ESnhDWH3TCIsh8/GWwzCHrt
XAcv5rZCoK3OKuPuUSi4nHyyuYsC17o1RYSOZ4LvBe1jxd0jULCNoeNoPAWE
t8e3THeVwrEVaS8r2wGQbOhMtlrpBf/MU+pTCQQffVF/M09kFOrpik69n6HA
qeYDO0M3fYaygZ9UB10oMC+15kMp6odCJQ8V1ZU+eFUm/lfXpAnPezOVnPal
AY+EqibuzVNw2/z5RNnrEHycjtnVvicQF8w0OVq7MgPbqFeO7zs7Ap4Oszxh
ghQozd5t36rbAHmYHYr3DhhJoLyi+ZrglZwZBQidnmAn8zmNVQJdJF6FPVwM
M8d1CTyzeG9HyCs7XTzId8atL3XYZPjbgYO5DU7iHufje7Lkvar5A8oTk5gZ
7NTMJe85Qv6cTiPp33dtOxToG3wVror5IJ5+ap806iMKrq73pP+4DQJPlKD7
wsbPPBDfMQ4w6tnymQ/CLTfms6nsO4ziTzFhv0M/wnfDOHAjvmNMbYb22TZt
GrYzcg67JdWI9PPe9i5U7+5kHvBwqF7A/Lu3IV6zEPkL4aRu4s3nRzwFIZ7Z
AOFnMm0C6iuTl27fFbbKAJyLDGgfTz0+xOvty+2UPeU5IJTvi5gWIdfnMRvJ
JPM2B+iiNUZdYCYhjoHUcx4P81oS3wZ/mm9Xd7wGy2xabAuio7jdITrZL78o
uF8El+fFzDAI53eXJfePtwcy34sLbld2j5s5DwbbBdHcnhdJ1A6kXSzLHclK
C9GHYexKitomgtd7BezI+E4BhYiPgn7DBRDmyJItSuj/nqmLqoYE7rXRFd9w
Ph0Dle6pwiyPRuBeW5wV/2UKrMVgR2g31cEDF2mmRWK9uGVkATNhL1RfnBwU
K6KAMbM55S4RJ6zwTPh3T1CAT0PXkUXhC3wqFr0cF18ESYv0vCdCCqDtpMh7
OdsZKO8U7JSj68dDPpjSmjl147VsWSPGOcNwMcB95NjfGvy3DH/DPGcV/miB
/WjKi2nCfq0Erj/txJUWavaerm/FpS6oPj50ZRy+BpyYJN+9anZuOkLek0rn
4P1iKW4JwM2kOkvg4b+UZy7PCDw8rfZtVNM+ELSXJaXuTY/AQs3OixHZBH4q
Xsv8HFsMIwUWEWWHRuGJFWOtOvH7BdffcqucjYfTcYrtzUT8EGzNZqNK7q8w
4Bvl+RqC7zGhOilXkzPSH1FM/Feq0CF44hg8ROpt3I3tZiR+/t6nxPxLQxN+
sJ53Itfrv0si5yHDg3usSW6yKtA/yFxOynVGb6H3oMvoX03ae0qDrM9hpOdn
cjbmsiareVE8bekhaWAn6ptN09RG8aGNsqCIcOt26LLzsiDld5fDyfdu8G0a
Z0pL15VB6Et8OalXKy37TEm5uLp7b/qcJijtu494kGaJHspnZsd9Lt1hcxDu
hUuh+cyMoo/RPeWDwekRTHJScIRFYaKTwL3tKQy1GmQ/Wy0lXZr2NVw2ee5D
3vc083vdTt47YM0a/q635zY8d6bhI+wd/1urLk7YO65zyWokq9wOaPc7CJsT
+jxnJu54lNDnAW01prbzHyEwuoKRUtuC5362CPpY2Ih3uIrXOElPwtoOAVys
dQQa/NWnXKMokM87MPUwvgx4gpUN3fUG8WWZGdZdFX34fhrmmZeCgyCYlv6H
z2QEXl5cPhGmSHx/16yzvbL1oLPj7/UezlG4RSPLzttHgU3bAt6XmqbDY5rN
bBYnnCGH8wizB7sj7JVKm/Ven4H6JZkcKpp2PL1smv18bDN+zrrZ8qvRBEiE
eVwXWG/EL/ArX7p4qQFf1bG548A3BdVtwrJldJ2QlPPxVcqdVnhc7u3H7TkO
DJ+AvM8IR50TSshzV34QXpeQeB7mjtPLkPdcbgz7xJC4d55+E3WajSlsavpj
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
fH4t3G9HxUE80fwDvodLSQX8xv0HoRMNe6Tw+/aBiQwqPo8nR4rMUvG5jlrj
RcWNiThu04bMd0xfsT9j0HKT6/WYv2tl4bZzY3jClFhm+6uXSKrYtW+lCYl4
e/bt73lWMtbPGob8ztpEVYTGNz31mt5ylh345g95sBeV1Y4gry97JL59vcuC
M7fHAn7Yvu0y5HG1fG1Rw/u24PnjHfC8vPA5eN577/VAWysy6uexBrmULqff
m+DJLpIVfvUPUrKpBVz6xYWeNzmr8etslfz2j/I60JIHfPsqLQ18u/HUL1Ez
MQkZxMhCHWlbG73+X+Fg++Szf9G/1KlK/tap3lvbg32VWBFQV7konHPW4+5y
vOfVN7gP3SFCHu4NdJoWZ3GPUMGvOuvg+RtdpyGfmk02Ybz4hQsnfBwaEKTV
k2PIxneodPnHYWxi53zwaLHXTdrzYtZ5EzQ5zgxdZJHm1MNZ2bGX29dT+Ub+
9tuZmhcsnI1Jf/k5C59I5OZwkhkkwlfM3w0foxBXpvdc6CyNx58qGqvj15AI
Ocaot/sjOols0ehZiZh+bPd3ngn57zyTA3/nmfzXOhjn3zpY0TNXet3mYhjk
6eIHrepI7utx/Dpd4P/LCUOwI0+LcS/OPTPIu1gO5LXsEwI5rs9RYruzyIdn
XmwB+f4SRyDHWxzl2hyjX9D6Jj+oA0hsfQbrF++fEpiJHkEc8fWwvkUhXb6l
KZecEqo+I8+JAdjXC78SD/syIspyxUGpEahYXBPqP6Muh0EuGaxC5eoHc9FO
FmGgj0i5A11EjmHnuoH6f6mnFf+tp9Vq/IbnH48ngZ5Q5m/3VWqvwa6Pn0I9
LaPQkn7/aaS5wOlECRxxZU+whOAg3rYiLGagg4JH1kddOyv7FmsxfllPu7eU
0SxGinZvKeeEhexBXnsc8+S8GrM5CadcMBckM3dhzd2yIdsP9GOmB/eK/h9x
bx5NdfT9jYtUyhAN0mTMlDFE0vuU0oAyNEgJiQZNmqgoFaIQTSpKIZnnFClv
ZJ6HyJDhcnHNlDJWz31v5/td6+c+ref3Wev7rOdPe9113LvPOfvs89qv1z63
N9HJGdkSSsV3aeRJDkb+wDUails93vnjOo38cTpDJHdnE5kR4VXMJdSB4tXf
Ozbd+0TqTQ7+FnqWSj6vWP+45eUACy4XiHG5gMe3YV6yxyWn3gHJ9fHRzJ2N
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
93mMogyCwP99GwshLlXvs+zXW7cCZT+jQ9xT5t4I+XNQRslMkcqfxIpULrCv
jTkG81Vw0d01/9MXonn1FYhva7p0YZyQ7t2atC8p/9f9LHGeYbrpbiO6yPUp
bunjOpT+6Z75S5MuZPSwdEb6unyy7ua24sbxbJK9023W4ol+dFX4j7008155
d1b4DTnmvbLeZGvbRpV4tKtnlVzbIzr5/kKBy+9KGjlfbb7ctvIWFJTG+DN3
JgO5H5f2NSumo6fhiid7Xqf/x98zfsYHwFXW8DkArnJfqcSuOvcVUbLKFPLJ
5Xok3CPiBXZIZd8IZuFtCmHe5nT9422sf5y7fWRAk3m/q5GSSz7DvN9t6dWK
OycThnIwH74e8+H3Yj68sRynkdNgG1k4cVHrxRYaKXeYe4JzZSuyJDUzZ15t
Iz2tCopnNrWQgY1ODIPxVvQS8zndp/E5V2M9Yy/WMy7Fesb/1D/i9/og33ZN
ugv5tuPothcao5FE1tlngG/Iz1oP+IblnVrf/O4YlrpAEK4LTNc5BmCdY1GC
Fufzhcy89EmpaXI9HZ07dV45VT8F5dQrbfqZ3UiGxcg7DuXVkfHsfnTndV2o
20/JbP6lOvKY8NFjQ/NqSB1ZFT+ptT0sPExdzMOcrn/M/z/oH6frBbSwXqD1
+mnAeQoc6IDzyFyxs5JxeEcUc4rAvdLS4SXgA2lLXHr0FqWy4OeDGD+frpek
Y73kh0QhzTTuz6h7MFnRwjkDKS1lOxZpMYA0lt+r07T4gqQTdKzcXlcg4xsO
8btm9SGTzASxdMM2JHtLOFPnQwt6t0Y25PHmNhZe5WvMq/yXjvJffpiud3DE
eodqvQtg9310FOwD8/+Yjt76TFg1T/VNUlNPAb8l3Y8YV/yew4JLF2Jceroe
MxrrMYPjL3Ef76eTytfdhV1FWknvsThyz9wWJIX1FN+xnmIZ1lMEnrHZLLCC
gUKPHdflamXeX6Jp3i/03yLbecL1WQoM9LlVcPVBZly1lT3/KpN8yoIbz8K4
8XT95nOs31zb/gX48NEbVUA3IdvaqMmr+IpFrzGM9Ro5vQqAE2qc4IB1YsK3
zK+5tIKQdLgOnzeqXgGfT4+Qkh9a84UF1y3EuO50ved+rPekYd3HPqz70MS6
jyevNp46x/z+GcvDuMuZ3z997Z/uWVpXkcry9eOU3vNvsoUxpfd87fO5YP3P
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
K9QQTyNwOA0XJ1slHNB2JtMbDlQ+J75niIyj8jk67+OKc+ERyN9p4MW/7VQ9
8PVx/zPqOT44vbeMg9cHaX+y+pa/uBfNaAbH81PjHe7Hf3f/+pSNjoWfCb36
swU3Wrf2Bm9hA853LkFLNJBqV8zkIkUefsOHV6SlVFR8wSO9gr6tfD+ElOU4
Td9eLEeFJeacUTu/Uf0doYdBB4eQqpN42UMqH3w9yve3EHH3l4qiVXet0WGh
qevuhN2cOudA7MlVvRzL9NnehOqvSYAfW5OqAXFBRB27g94JgXn55xky//zO
9WuYlBgF3cgb43ht246sJYOVG+La5+3pMyL76CdqqqSbGrqQ2NZFtqqDHejc
45DSxKuN8/LMWWSeWTdkdxpxT4NOrNIi7unmdMFfuJ4esv06foK4L7ZeBZ0E
Ppxz1jsvleUkstrMp21O5b+E9Fy+D5X//K/+chysjJiHJ3xL4gmNzubkhVDl
M2fQwgKNUvnDfznIwuc18r/xEuJr786t4IdnXzwfsvvnejSXOfmb2MMVuS+B
g7hf8vtNn1joXkCCVxhU3gr3ouMvdP2OUe+L3iWTvxZzcchH66fgQerz+sNK
k1HU56WNfG5vOeKIjo6o9+n/7UGvTsvd9SykIGM2lbn1V3LQuU85nIMqDbhA
56o7Kvm1eHFl3LflzT+RrXiZCTOVD9LL1dSvE36C4gh2gsMN8Wq+Ebq+6Ase
7FL60HwgD7e2YbTi5BpGagaPwX6duJIJ8yHTe1i2xupIo/drKVnEnuXgqG+T
xPzAk5kPpY5qW6GTwo8hb7Z2nz/UKdYGyRYqn/mLZR+tAdx+gFwo+KUX1wp+
OHhpF3o2azlgTJVnNsYtZ5ip8pwi8MewXtof4U7pPZyPe9BGww8MjMYUxJlu
uSw9shQdJveVp5H7ylnIfeXyB9zYqPoK7TycvILKT6TvzmeodPDCvDxAGZkH
eFHQDP6M1XldwA9U3H91ODRl07w8wB8yD1BcLO5DnNcl1/wSYm/attrKt2Er
TVDNurNQx8GsYyEPOSjfoamLi6G+b8ez91Hpermv+oOpdBuFvM16N52Q3kp3
fY7xDnQlzKpR2KwNUcpy9Is6O9FDL6Odmb970NSmwhdX8ihI8OcvzzNzOSjP
Rv/qV6tuFDhk4/TvWieKTdT/cbmlDnW+4qg3vpqP+0aJpIUl5uJCfSOXVA8P
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
U4p+MdHoFyMsjwu7zpznROI85/8Yq+JN
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["z", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{361.34830134782874`, 264.09826743950623`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-10, 10}, {-5, 5}, {-2.260327871345165*^6, 
    14.358464976578238`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-1.572670672516217, -2.2889061723173225`, 1.933291361935663},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.8474769264683437`*^9, 3.8474770119424143`*^9, 3.8474771642376423`*^9, 
   3.8474774311491327`*^9, {3.8474777764520235`*^9, 3.8474777800440083`*^9}, 
   3.847478191232373*^9},
 CellLabel->"Out[185]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzUvQe8HddVLj5vZk65TbrSvWrGVpfSgACCuFtucbfj3h13uRfJluUiy9eW
e49cr3vvsR0nJLRAKA8IKRASSoCEUB4lJBASCD3zVt9r77PP1ZWT/4P//f3m
nn7OzOxvrfWtb62959DTLz/37ItOv/y8M09fvP+60y8997wzL1u83yXr4Knq
fxXF//o12A5aXNRwvymKnn//uyimuv8S/a+aNWvWFPpX4r8an6J3jvt3tqJ3
4pfh4zrzLfTZWXz/cfzXXggvt76Pb3mMX8evaWTj3fx+vvT7Oaz/rs/egv/o
yH8ofifdVplPl1v5xpun+ZkF9AI+9XZ+ZRP+Ixh0Mu/crt839kDxWn5nLxBy
X0sf3HHbDrPnMy3bhV36fxO9vhvfv6Xf67v2f30wPFVNnH322fEH3+M+2AoH
28F32lmAP31M3+A/eV/8kx4rvZ95F39mC/2v/W7a4Jd83v1n6T6+tpLf+6HC
9ta/jT5Y2nfwTuS/aDl/0b30v51ai36kpB2Pz2Y9xbcu5bfckxmE0k5I8kJn
iu9bzG+5O/N9fKr4+2iXZePR7vN9C/mzd4XvMzzU9n0lvdWMQ794YIrv3Z6/
90479e2wd218R/PZz37WNvniEr+1G+8Kj6B9L5tucYd9rxgivWHVqlX4dQAD
/N+zv+y863Roa/vy+e7Lk5PblufwJyYnJ+kHOvmfGYi/dC5/we1TfCmeDvxS
2IrBaX2puKfb+n5pbedYvngYH5QM4d7vm82fvXUrOynjBWcevnHGlN84yp/O
eZ90D2WjLx3NfCmfjcis8dkZ/G05/5jfZ/2N2fYb/JYJ/Vgr81XO4M0y3mM7
9cf8ppu2sg84mLgPle3DeL996Pb70Xfmdi7z3B/yzY30ulkImXDLfn7uNv88
OYq+EVV+dHP8o2CWBceUYJb08/O3+eeFfkwvEPu9mQYyWjI2Mkr0aME27+HS
bRufG8JL6jizO9fO7Nz27jndtz6WsgSfbTmoXl/YM3gnisd15vc7md9fmPl9
3vdOv7hJ378oczq+Iu+b5lh1M7uzOLM7HPNiurEw8xt/wjfXTfPnBzI/v3QK
j53swfb992DTNPdgMLMHy6fag574TMyaAPBH/DPXTvOnhzI/vXKbfvq7/OUb
ww+a+eR+cDjzg+/M/2Bf1vBP/JPX4L/EHc7IfP27p6IOU7PCb/NzV8fjHg6O
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
FZ5sAuQYMRWcLoIpb+PXgd/S13eXYULyYA9dQbQ7tZN997NM4rVRj35DGHxp
GS8zlK6kvPOtg8IWzEHl81WcrvWqfQnXroq+3RGi+LgWojKpZcW479MYQQJQ
xRiPaTvinKXYx9HVPz4+ZMCs+mF3OOO6h/vxmMpZhX7BmP0GGwhxfcf3Pa0h
TB+YoTQkp9bWTZvcq6d8dSA1mneFWBEuXI9m8ro2kLs+u6TXDsmNWAn12unE
KiwMoKWglfiKwKfZUiy/JXFofQgFpI5qzntlWAsTm4q+sjHw+j9LpnX8zY2z
Kd+lcgCGBCt6CdvhXBctJUyAV6t4QAWiyscCfASkvhOsxBN7iwfYazcQ99q5
xiKCyEsslabWEvcaMfF5NW0M73qL4Spvod/RU+aVmVKcYSwPDeJSDNCWCGqL
EKm0trahWuiNakC+1kXWMSOD5lY/6A8YzGfJGxMORIMwJxM2qkCEtt6cLqtZ
RQRpJBMpcg3mdd/norWuzKKm/fFs65NbNsf2ntvUW7T3pCiFWVOSR/+ka+Hj
NOLnzgldrZZHX8BETNfhJEVJpmto1vyF9aOBaMmq93pf1SVPvPB1VJR837i3
tG/c5Ftbx5rvQDzqLS2Ps5xkV25AlD1EphXIFuL5UYxJj+G/x6MepBCICu7b
68R9e2JivBqFVCOIOUV9EXWaM2gfRUsMkXYuxJ++ZeSi9p0TVk6eqhuvlXSB
t3yOrEUFZv+4+48ydYVbjM+PZpKHNj2dCSqV+DV5kl4YzYSrrpCuaYhMe8d8
Sp+nJIJWxUmmf/z32pW9JHZFQQyppU29PxvtCiypmGtRS0vZnzwvTAn+lPA7
tCmMXKrUUjID0UvXtf2CU2cxcSE2/GW8HBtYUrE0JDGbOFphr8adsP31DSGB
+bukqU8jFjX1SdSyBCaUNHj4gwIVWmH19jHLySklr8Lati3Roub5lS0KXWUC
w5Xk1WxJWtV+2aLPK272IF2+bX66NkyhKRBbFs2ycDptyxKY2pr3SslYNBNf
pQtX1JaKky1VVpIw21OZ9bHxfrStK+rqo5ExwKMR/J8LYKUzM7RKfITdxePD
ksO4rzcJQNOhGRb9hkM0m2L2I9kZ3ROk965p8z/f0i6XC2D8DEcqeCc2m1cU
raRuWLDcu5In28OGh4iFQ5IMLhXFCy/Z7oqHXu1Ci8Lf+Eqi9aqFGR8E67r7
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\
\>"],ExpressionUUID->"09acc4fb-172f-4230-802e-3e626e4db09e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"%151", ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "1.4138898460263842`", ",", "1.5705742089105743`"}], 
      "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "0.6037036808012747`"}], ",", 
     RowBox[{"-", "0.543476710270031`"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.847476829743438*^9, 3.847476847398404*^9}},
 NumberMarks->False,
 CellLabel->
  "In[153]:=",ExpressionUUID->"1950c05a-99b0-472e-81a4-f0cb5c54718f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = -0.5569594172233866, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], -0.6037036808012747, -0.543476710270031}}, 
    Typeset`size$$ = {450., {131., 138.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$98005$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = -0.6037036808012747},
       "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$98005$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[1 + Rational[1, 2] 
         3^Rational[1, 2] $CellContext`t$$ + $CellContext`z - 
        0.5 (Rational[1, 2] 
           3^Rational[1, 2] $CellContext`t$$ + $CellContext`z)^2 - 
        0.16666666666666666` (
          Rational[1, 2] 
           3^Rational[1, 2] $CellContext`t$$ + $CellContext`z)^3 + 
        0.20833333333333334` (
           Rational[1, 2] 
            3^Rational[1, 2] $CellContext`t$$ + $CellContext`z)^4 + 
        0.175 (Rational[1, 2] 
            3^Rational[1, 2] $CellContext`t$$ + $CellContext`z)^5 - 
        0.04027777777777778 (
          Rational[1, 2] 
           3^Rational[1, 2] $CellContext`t$$ + $CellContext`z)^6 - 
        0.11051587301587301` (
          Rational[1, 2] 
           3^Rational[1, 2] $CellContext`t$$ + $CellContext`z)^7 - 
        0.025967261904761906` (
          Rational[1, 2] 
           3^Rational[
             1, 2] $CellContext`t$$ + $CellContext`z)^8, {$CellContext`z, 
         1.4138898460263842`, 1.5705742089105743`}], 
      "Specifications" :> {{$CellContext`t$$, -0.6037036808012747, \
-0.543476710270031}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{511., {202., 209.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8474768204203453`*^9, 3.8474768524199505`*^9}},
 CellLabel->
  "Out[153]=",ExpressionUUID->"6477b9c7-871b-40ac-948a-884382556260"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.847476812094836*^9, 
  3.8474768145456038`*^9}},ExpressionUUID->"b3eaca0d-88d8-4e31-8901-\
29cb67671083"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"z_", ",", "t_"}], "]"}], "=", 
  RowBox[{"ComplexExpand", "[", 
   RowBox[{"Re", "[", 
    RowBox[{"Expand", "[", "\[Phi]solfin", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.847473730291339*^9, 3.847473797380623*^9}, {
  3.8474739230007553`*^9, 3.84747392680009*^9}, {3.847473971018011*^9, 
  3.8474739796638546`*^9}, {3.847474228994607*^9, 3.847474237771651*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"6043b570-0be7-482b-b88a-f20a1c3ea1d1"],

Cell[BoxData[
 RowBox[{"1", "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["t", "2"]}], "2"], "+", 
  FractionBox[
   RowBox[{"9", " ", 
    SuperscriptBox["t", "4"]}], "8"], "+", 
  FractionBox[
   RowBox[{"21", " ", 
    SuperscriptBox["t", "6"]}], "80"], "-", 
  FractionBox[
   RowBox[{"3303", " ", 
    SuperscriptBox["t", "8"]}], "4480"], "+", "z", "+", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox["t", "2"], " ", "z"}], "2"], "+", 
  FractionBox[
   RowBox[{"33", " ", 
    SuperscriptBox["t", "4"], " ", "z"}], "8"], "+", 
  FractionBox[
   RowBox[{"549", " ", 
    SuperscriptBox["t", "6"], " ", "z"}], "80"], "-", 
  FractionBox[
   SuperscriptBox["z", "2"], "2"], "-", 
  FractionBox[
   RowBox[{"9", " ", 
    SuperscriptBox["t", "2"], " ", 
    SuperscriptBox["z", "2"]}], "4"], "-", 
  FractionBox[
   RowBox[{"21", " ", 
    SuperscriptBox["t", "4"], " ", 
    SuperscriptBox["z", "2"]}], "16"], "+", 
  FractionBox[
   RowBox[{"1101", " ", 
    SuperscriptBox["t", "6"], " ", 
    SuperscriptBox["z", "2"]}], "160"], "-", 
  FractionBox[
   SuperscriptBox["z", "3"], "6"], "-", 
  FractionBox[
   RowBox[{"11", " ", 
    SuperscriptBox["t", "2"], " ", 
    SuperscriptBox["z", "3"]}], "4"], "-", 
  FractionBox[
   RowBox[{"183", " ", 
    SuperscriptBox["t", "4"], " ", 
    SuperscriptBox["z", "3"]}], "16"], "+", 
  FractionBox[
   SuperscriptBox["z", "4"], "8"], "+", 
  FractionBox[
   RowBox[{"7", " ", 
    SuperscriptBox["t", "2"], " ", 
    SuperscriptBox["z", "4"]}], "16"], "-", 
  FractionBox[
   RowBox[{"367", " ", 
    SuperscriptBox["t", "4"], " ", 
    SuperscriptBox["z", "4"]}], "64"], "+", 
  FractionBox[
   RowBox[{"11", " ", 
    SuperscriptBox["z", "5"]}], "120"], "+", 
  FractionBox[
   RowBox[{"183", " ", 
    SuperscriptBox["t", "2"], " ", 
    SuperscriptBox["z", "5"]}], "80"], "-", 
  FractionBox[
   RowBox[{"7", " ", 
    SuperscriptBox["z", "6"]}], "720"], "+", 
  FractionBox[
   RowBox[{"367", " ", 
    SuperscriptBox["t", "2"], " ", 
    SuperscriptBox["z", "6"]}], "480"], "-", 
  FractionBox[
   RowBox[{"61", " ", 
    SuperscriptBox["z", "7"]}], "1680"], "-", 
  FractionBox[
   RowBox[{"367", " ", 
    SuperscriptBox["z", "8"]}], "40320"]}]], "Output",
 CellChangeTimes->{{3.8474737531967316`*^9, 3.847473798695613*^9}, 
   3.8474739273794985`*^9, 3.847473980403045*^9, 3.8474742387317924`*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"8d3dd3f0-7311-4c5e-81fe-291966a14f70"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"z", ",", "t"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", "0.8"}]}]], "Input",
 CellChangeTimes->{{3.8474764481151896`*^9, 3.8474764558601837`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"6b3027a9-a1c9-4ad8-aa49-046b6ad2ebfa"],

Cell[BoxData[
 RowBox[{"1.4642136259047618`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.9811989333333337`", " ", 
   SuperscriptBox["t", "2"]}], "-", 
  RowBox[{"4.6198000000000015`", " ", 
   SuperscriptBox["t", "4"]}], "+", 
  RowBox[{"10.156500000000001`", " ", 
   SuperscriptBox["t", "6"]}], "-", 
  FractionBox[
   RowBox[{"3303", " ", 
    SuperscriptBox["t", "8"]}], "4480"]}]], "Output",
 CellChangeTimes->{3.8474764566819067`*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"5618d195-d877-454f-af8e-3b0a98669318"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"1.4642136259047618`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.9811989333333337`", " ", 
     SuperscriptBox["t", "2"]}], "-", 
    RowBox[{"4.6198000000000015`", " ", 
     SuperscriptBox["t", "4"]}], "+", 
    RowBox[{"10.156500000000001`", " ", 
     SuperscriptBox["t", "6"]}], "-", 
    FractionBox[
     RowBox[{"3303", " ", 
      SuperscriptBox["t", "8"]}], "4480"]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "9.091433821863836`"}], ",", "9.091433821863836`"}], 
    "}"}]}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[144]:=",ExpressionUUID->"49c50c72-e069-4412-bb2a-aca504cd97df"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Zui/26Aqd/Ev7iCuVukwwghMr47/0sucxm+wLzvUU9JDylLheuOVabyI65Nf
qiMdSGmziJ88Mo1P/+G86oBoQfvHTy+77j/40PK3ya/JNNDEp5I8lP8HV/el
2KJipgEr5yc1bn5/cPeScwzmMdRweeUMsw/HH3zqUk+8WTwVrOpWqq4PTeG/
G7V1koWo4G4Mn/3tt1M4nzS7oVwxJaQK9r2+bzaFn//jet9tiAJkXLV/sQtO
4YPlYQoVdyigtDhjPfnPJO58fXsuUZoCmvUuGOdFTeJdJ4yK7ELIwfo+4bX/
zCT+bjapZeYgOYy0SySXSE7i6vlr4DFKBhuXxsc/owncPvzlTNRZMoh6Z8Ss
HzeB3xjcvjfATwYcmy9VvzpM4OWcsrEcn3YxuUee4R0b4/iSXID/m/4drKyr
5fW5r+O4u8n0uUv+OxiIH/w1nDyO77erMavl3sFsy+bF5lTH8bmPXOmOF7ex
se3Txr6U4/jCzlFROc5tzPtYqddG6xj+aM5vKq9hC4vp9a2h8RrDg95F4h1a
WxiXVOf4A50x3EBD47P45iaWfVWDmZNpDNcp3fhmhm9i8pUpqs96R/Ecqj93
ZKI3sUqyjXOir0bxp7SjK7ctNrGjpufCXwSM4pZMln0HxDex708+vz5gNIon
vfnnurO0gU3I3F7XGB3Bb/hzlnplbWA3vIfEat6N4Dflpo7UBG1gOx/0jA3u
jODN0uazCdYbWCzlc6/mkyN4xAKn4le1DYznBFXyaeERXJTdp16HdwPLTXKt
6fw7jOftl/r6fWMdUxhqGLf/OIz76p7MPje0jhn63FP1sBnG/TPYP82UrGNa
XxLiNOT27Hrz8+wZe3zO9GnqzSGcGPBOfhC7jkm4vDBs/28Ij6dwpz8WtI7x
vi/Ozs0cwl3GzoTIe6xjTJRVm97eQ3hhWjaZnN06RmZJWGNHh/ADt3/clDNb
x9rGX/JXtfzGfQitjVmVdexz5McfVl6/cbq7pY1x+9axfOlvkYsce/ZSFd5F
oXUsrv73kUcVg7iITuA7Cs51LNB1aXG/3SA+eewyXwX9OuZETV3QuD2AByUm
3N0mW8dMX/A6XswZwK1C4zpbSCRMaFy7OWOqHz/bdVj+vz8kjDry1B2tB/04
ZVCU/uQICZuTclbvUuzHn28LXzrXT8KIi9G5bAF9+KH6oE/7fpIwt7HW4HDq
Xjy4LqbR8SMJOxUxpiT2qgefLdwUMisnYZpSaxOfzXrwPFtSikUJCWO4KGS5
+qQbt1MMe/s0n4S9HXU74CHRhVcFU5d5PCFhKeFBw9QNnbi6WPGhZ49I2F3J
B8m5Hp14n+UvFXSPhFm5vKPsL+nAReGBzN/bJIw0stl3EmvHf1y7fyLiMgnT
G4l/oGrfiucH0B88gJGwl4Rf3+6BRpzHMc/aYHANm3rGq9jr34DH3z1OGdi9
hsne+HC3jKjHaZu0uKp/rWGvJbblPGzqcB1ZhaiIxjWsMDwi8NddAnc43j97
rHQNmzkn81/hN4S7qTitGBatYQdVm0Sj+RBeQJ8mfalgDXP4yvsowL4a324x
1BDMWsMGg86pyS99wj9UP2MvTV3DLuzP6h+K/oiXknYofZPWMOf7MgdM31fi
H959977zaA0bPeL5a8e4Ag8mDjh8j13DLs4UBb0fLMONb0Xqn4xewybSF8Xc
fd/j7jWRr8kj1rBLJ9SahBhKcf4aMcrpO3vxbQd6tWaV4M6pX1/Sha5hbfZB
B5kuF+MhtOV9jjfXsM5qshC/pDf4yKH9zbOBa1i3SEzzIFGAE2PDkRX+a1jv
bVZ+49kXeNEPH7qPvmvYwFDSpXd8z/FY9V/K6zfWsCE9kQoBg2y84Gtbo+/1
NazO8Dg93e9UfLOtxe+g9xr2ldYuv1ctEX9dpvSfpNcalv6kNcqOPw7vKzgN
ttfWsHzeebTbEI6zTHHJt1zdy4cG/6rJH2+chbvtW8geVqJ4a108a40NUR00
vrqHA6u8xcUvhGA/+ndy0vewSneq9eW79zBS9LkGhj1/XK91WVw8E7DiiOSI
yj3MOqV4PZ4zBTtE7xyfu7c/g4x4e/XnDIzu9kxYy54+CpV7aSulOViypVin
8l48ZK3kJx5E52E+QqNz7T5r2I5X8I6E/UuMg9mDs8xvDdtk+ff2g9JrzPFT
ovf3gDWMVHTZ6TR1EbaieJlfMngNWzUb45jseYu9142mfReyhm34KYzo2rzD
3CTfCgbc3tNfP60VS5Riho4eIr531zD/iy4zYknlmOy8TzrzvTVs5b2o4RWy
SuyeT6PaywdrmC9lf0alZxV26pvp5vX4Nex6rtWpk9gnbCfV68LTlDVMfUGi
R8cXYdvHnYZ6Xu/tzxsW6SJHYMJMXKj57RpWjv1WvjdIYNr3JisHytYw1bi0
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
ABb5Tr8=
       "]]},
     Annotation[#, "Charting`Private`Tag$93242#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.091433821863836, 
   9.091433821863836}, {-1.4364864033122538`*^7, 2333.09065604653}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.847476460409853*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"a87b99d8-e6e2-47a9-9eaf-fb32d7d38155"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"z", ",", "t"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.847474247250201*^9, 3.847474278039507*^9}, {
  3.847474310690469*^9, 3.8474743150778217`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"ad0dcc92-c24f-48e2-8173-deafe3e25e84"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
hbbvuDlv7l7r/4NPW9j5WvWVBxkfYpKHy2iVYwYtJPvB39NEVA1vtHY3zZvG
X9Ugud3oSbQPAfKnAqsPyXpmM+MHTDKxVMfnmSdOo34u5Lcf+xHV6vBeYfRL
JvmuR9O1+9KNov4j5Fs3rLekW+AJxieYZELrJeui5RKyN8gfSN+pRBPHs1RP
Qr7A3grXG9TfSn1TyN+o5lR5eaV30uivTHJR0PObS/tfJDuE/ILhJWseuvJV
Gv2YSZ5puDV0+b3z0th3+3td9695dsuox4yvMMlyGyrE+LrGC2M/zlFmcs9X
PmMOj0CjfzPJdhXyhKTr7Ep9Ijyfe3Ejz1y+8EIY7dasH3qyv3+fDs/IbiFv
vqu5Bq81UV8JeFDolTMpwRHCGAfNevWDV+aUaXSJ7Bbybb9PnTZmwGpmt2a9
y/gntd5u3cL2Cfx93ds9Wk3znymNdmvWv/9IM+N+XHu2fyBFzzxp6ZSNrTiP
Z9YHp3sfMLpBC/od8k+GmNK4n/JkdmvWEyb61eufMTvZLf4+L+x0Rm254LyW
buS1zMSXHsqXlK5r7t7Mbs16zOSP2UttLc72J6To4eUrOLcdNVEa7dash97f
/PmKfz3aJ0F1/5uwpyMrr2Z2a9afXDhT99BZwfYz/K0fD8dCw+rtZLyZWa+z
tMaFkiXWM97MrLd0yHHX7HmO+pEYZ8vV1m5ude0CjfZp1jvLmCHr2zwl+yS9
5qqTZ9dFbp9mvdWzyhXWpiawfVNx+pvwssv71TxCfhXPIbDwbYeze55TXQf5
x34dL57UnpNfBV7ulPv1uVM6k31inJbRz1K+tIpi+4L+fo79Iw6O2jqM4jLk
p/2REHM75xK2XyhOF9rset1y17b2RSw/F1b3uzXwdRu2jyhOX/R6nuOzg24s
f4vTwDNDL5A3r7kytHrSU7JXjN+78vaZK758sPLRlp+8B288PvHXdbJD/P1w
+m69rhR8Qbwq5AfPX/wtf5Mk2p8E+XpTarXye6WR/4R8wqxSjd9Pv0n7bCC/
+Ybn88D9gyheQ/5okcInqmRvzvYvxekDf9bLuTLrACuvZPm5nTBbzxs8n+1r
itOPzsr5x4vK+8l/Qr7W5OvhJ7OeJP8J+VOrdidMOPKE/Cfkx/RIfew59in1
s6nO9v8WvL5iGsoPIe8Q//bp9nGpktmnxu0T+ub+E/IK+9S4fWIc7j+JP2f2
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
2Y5ccIwi+wd+s9zjOy1dX0joh+S/Puy37qaJ1inmO2y829fT9lFkP8A9/khc
WLDSAVrnwNOXbvbic/xisivg5UIyl66e2IHsFXi7r/PfR+cuQ3YF3C622LeJ
7VeTXoB3fhh7uMv7V6Q34KKo10Mv95xkP8CbV7pVvJr9KPIPwAt0ue4SUWk9
2Q/weZkfP2xf5ZiA3oD3/5myZlFXXUA/uP7o2OvhPoXfk36AC3OllkPmriP9
AO8b8HPjylKHyd6Aj8/Uq1nxTGtJD8Anr/PzelO2Iz0n4CEegx/l+jmQ9Ah8
buzOdodOjiH7Ad795uT+uVN2kP0A9xzS7kPHeRFkJ8DXDHkx7tCrb7SOgJ+5
Fb9vfrwHrSNcJ8G7X+fvCffJbwCfeGZh1tRa52kdAu8dkTCtQ9h6q91Y8Dod
Bt85PGcLXQ+4/Ty/ozNyx9BzBC5nR3k1e/OW7B/4wanF1ra8ZaI4gv/LWG3X
qbufP9L4wF2Pjkifw+EH2QPwHx5H3l1dnDUS+gE+/d33uLCRJWh8/N+XqIS/
FldJpvGBh2ZacOnPsKyB0Cdw435Ue3oOzfMcfLvmqA/FfeALm3W4fvRP30Dc
J/DCp48f3edWOxB2aLkO5SGWeWN8Vkc7Ed6z/qTTVxfkD2TzkZgP5HGd6v3u
T1h2PI8lv4ql/KTq9RY7nz8uYcnbkzB/mfjxktfhH3n5fUncF+Zt0Y90TRxe
fcHwiuSXgMuobV1Guvsjz6G4XaRv8LioihUjcb/A2y+7+npwij/dL8aJq9a2
cf5MvoHsOUo8R9wX8C2bolcUDfan+wJ+aejd6DQ5rvDnLvHcIY/51PReWXXM
zXdkr5DvuHVWxIaSxfAcyX80n3r1k6tdvkhmP5TXQY+4by9/u/wnW/lQngM8
vX/bChvqpKXnCHzxk1zzd95JFWy9SKwXyMNvpdofOna7zxvcrw75Khv3dVl4
ZT75MeDFvVy29szwFv5OxzgdhpR9FV72JOkZ8mfSTVuY5Jsg2TqVWKeWeVKc
WTRrdFjlHB9ofUL+zqIH4x1vJvB1LbGuLfqlcaqdXDt46mkT2RXu+3SdTNnb
LUxPdgi8wr7kn1PWpCf9Az9xMiK9XWt7wqHXxo86fn616hnZGeRDrw4u3yc6
QTK/KuFXIY9xop9dfVGj3BOSw+eOgdOnZJkTI5gflvDD0D/wPSNbvWgVfID7
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
peI33LZ9zzy7L2vcb/oqVcvzSVuevvn+4oesfiNgfUhCp/C0cuuW0V2qZrDq
f8CJbFUvjM8ujj/ONunsBut6Yf5cNR/V+EIxPuFzVrW6Pqt9JpvzWSwPsa6j
z2kCn47NLBv3uRUbXcyKZ4lyjhjV1UHwcVj+TPN/fyJMnzgvh40880t8/co2
bv3j3AbaxH3UQXRf3vcbtKn1znp+WXG/9LxYHcrPF8s04zIVav3D2o9g98t4
lRTtsVv2l0XLWuVZ3UryrH6h+2L5NuHzm9Wt5pYpk2wTdnHM9Km255Qt8yQ9
p14plqbc0nRyRIo+xDfcWl+zeof7bcyf8EIbzwendXQQTwtu3Vsvq3U+ZVb2
anfYzVMuaFwu/kFb63MBT7dm2KKnLeZbcfZcaPy6O4Zl7zHdT1y7V/FtbDfr
Od8fp6cOaTLGT0Q4/umza4oV79Gv5NmSbv4iqPOp6MsfrHkRq4/YPgGaD+mf
XVcoxheK+dicD7XYJ43f6lGBhIzT3MTglEVLxnT9X/HFuI4IZ89LKPRP8vmu
Jz5KcU/SItp3qtPjtHV97W91P49HXn8xsmbzlWNTrXH23aE9eYod9BVPSuxx
0fJZ8fsuv04uvpJD5tzceWODKlZ8ys7Yp1eXZJcbPrZ/FDnH6icvVnlxJMvH
H3qDauubdMpk9atdco9u0iHxpTbKvnFwoztWP3Z16AXveR88xbNWhYYOcrP6
/xf2IV21MD8xo7h7Dafv1u/7+N7t2gjv9H7C088cniHQ6odnni5c+vYtXzFo
sz67T4rVftj8hWL+QjF/VbwQivsifPSqF0vLlfYRX5bsyOzeyTo+07NQ3K8N
z2DhqUie+UnCGc9A4zB7sPJvxxuNfrjZdv8b+gVDBz1+UX2z7b64gHOPIzvP
91U9R5oPe15C8bwILzmwed7Snur9QifnXSnW7a1VP8yeOd8uArJ2O1gsm3We
DKdxWJ2u8qsqfoPGaXjNtaJLq1/aq+jhs7bWzKHCaT69H9WrlOzjZ8NP0jn3
BsOC5m+x4kw/UqEf1fOi+cQ67n9zt5a/zb7NaslLX6U2/qbk/79+nNbO67vV
ftj8hWL+PL/Vs94/0S3vBut1gzcdWfD87T39193JjZNPWvEtZ+eGPuwUrdcs
1/Nb6FUrfueKVvH8lRgt6fjwteNKWtedijdWxTtVfFTxV/91vajyOlXdpMpL
VetOVWep/LCq/vq/+RxbHvu/8iQq3lvFy6l4JFUcUfUFVHysqg5SxU1VfaTi
M1X5kiq/UvkHVV9DlXepeFRVHq7iV1X1uKqfoqqbVH0NFW+m4mNVeaOKJ1fV
+ypeTsUDqPh2FY+nymdU/J6KF1XxHiq+VNUnUuV1/zXuqPJGFU+rqtdUfTdV
3afqZ6nyeVVfTMWXquqF/1p3qOoXVV6qymP/a3xX5cmqPoWKt1H1O1R8u4qX
UOVdqr6qqi+m4gdU/UoV76Hif1S8t4onV/FLqj7pf607VPyhqn/3X/ltFZ+v
4jlVPL+q/6vqf6nqX1Vf7P/mRW15VBXP9l/5fFX/WlWPq/pxKh5JVUeo+tSq
vqqqH62qO1S8k6pv+F/zf1Vdqeqnq/hP1T4BVX2t4slVfShVvaDqv6jqDlWd
oqprVH0fFU+u6sur+koqvkLVn1LVgyp+Q7VfQsUnq3h+Vb2s4lFVvKuKB1Pt
x1DxIap9Iyp+QMWTq/ovqr6kqu5W9TdVvJCKD1HxJ/+Vh1Hx5Cqe87/ypao+
tWqfkmp/i4rnV/X9/yufqep7qvZLqPaJqfqVqn0Lqj6mar+Qqk+n4uFV+2dU
/RQVP6baR6HaF6fq96n27aj2n6j2Dar6UKq+larPpeqnqPovqn7Nf+0bqvqe
qn0gqn6oqj+o6jep+giq/UKqPpdq35Fqf4JqH6BqH9p/3Reh2mel6vuo9l+p
+jWq/YqqfS+q/QOq/TCqfY8qvl2130O1r0a1r0DVv1DtA1TtJ1H1O/4rb6zi
+VX7HFT7WP5rP2VsrufHU1N9bfwMzhFwvOw215jU1Cw2fgA4l89t8W9c/t4/
41t57DVvJ696WUtEBljyN84f5v/n949KnNfd/2a9545z3PdfeeJRzZsPyekt
ReTtf+djwxflsKwjPv8y/96vDX5Hcf46+F892+DQP+Lby6Enor4WzEr6B37K
R+/d8Vl50jPwXNeOdw36XCkQegCeY5X3u1NFCpAegNst6+1rrlaQ9ADcc/LJ
SdecPUkPwJNT994JtCtN80Tcu3GmTuk6+fNHYj7AD3hVrli2i0sgrgt8VJr+
l3JetaPrAo872sCcf+g1md1wHtld7r49ZHXnpWkDMR/g+WURu65JbjQfnK96
1Dn7lGD3LPReF+BBLTbsX9U8LekB+GH3G2d2NL0gMR/gO9Ne8C2SeFRgPsCX
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
Qd9+Xfljk5B7HF+mOjUd6tSEvaCT9gLZBTppF5D+r4P+L/jEC3wi+Eon8wec
sK9f849Og3904B9R96dD3Z+w+3Sw+8Q9pcM9Je41BfeauKd0uKfEvabgXhP3
kU7jPtLtETj9qdO473S478T9otO4X3S4X8A/VP+oQ/2jsH91i8T9BbtD437U
4X4UdZQ61FEKO1on7Wiyl3XSXia7WAe7WNxryhIRtwWdNe4dnca9o2jcOzrc
O8JfocBfAT6hulSlieAT0hsVDb1R0dAbFak3kv6moL5V+EMU+EOEHqhADxR6
o5Im/MBYX0M/VDT0QwX6odDnFQ19XtkocNiJGvaCAntB+JcU+JeE/q9A/weO
etJ2l+2P+8V84/fCPj2K5stUapQ1mvvrCileAsc+l8161SHrhQvj2OcSwkVd
toK6bOF/U+B/E/adAvuOzzvlz1+tY+VX7F4q0wd59Y8Ix3nJQ7+7ekli8B8+
pdjug339bvxr21mb7Xj/sMf7TjDhws5VYOcKu1iBXYz9YL34pJfLGvk6Mz8g
3/4+4cI/qcA/qRW/w3e01YjHFRB51Jz/Leo9sR/kY3O/RMJXC9w8Xl/BAo8T
cQdBB1WDDirogHVkXrrwV6jwVwh+UDX4QQU/CL5VNfhWXSJw2OMa50LFuRBy
T5VyD3WL79uqTe8lXhP5jXaqc48uKe2qnWJ9G/GvEpn3S5/O/ZjvF/hvazwu
2m3Mv4sZh783c8bf3u0PhPG9hn7/G/79LXbO8xUiDmKtbg1za/dxajDLQ/zu
AlEHhH6c61KKz/KutIP3ibm+R0b8WeSj9wYRd8s2HLhr/7xnWCDfC5hL3nVb
0Ds1z0yRN5tlGE73vnmeQ5Zh3sg94/oGjVTN139lCAsc0WJr9VoinyrTMHPC
8MCzri9Zb8Q6M7sWfVsg+5tB6IcGDf3QAP0Q61BfAgP6Egh/LPuZzfuiZBl8
z45O6zg6WDXP13pl2Brqt6/R13GKeT5PtuFeyXbRhWLPiXjlK8Os/Vmxh5au
V8zzAxMMB2z+mOTbPlTkDSbogJvn4SQbqqw61C/1QhWRN5hguPNHzGE3p8Yi
/y1BB9yczgkGB9L/hR2ngx0n7D4d7D6sQ+Fcq4E1Bh289v61yPNMMLx9H1Hk
w6fPrG9j/14Dn3+M/ae6Yo4nGJYIvz32v0To53j+YeOWdfQFW6oC1wE3zy9K
MDi3Gb8lPCpU4jrg4lzo5LlA/FHSH32LcS4En+vA5+Jc6HAuBP/rJP9jnQVb
l9ZI/jePYi4HMnVWLlf9LkSPNgg660Bnwbc68K3gcx34XPCtDnwr/Co6+FWE
H0aBH0bIEx3kiZCHioY8VKQ8hF76TvipUI+J+JqIlymIl4lzqsM5FXJbgdwW
/mEF/mHhT1bgTxb3goJ7QchnBfJZxNkV7xVXCvw7/TrbHdTHRkEfGxHfVBDf
FPF3pW166StL5uSTfXgU9OERcVgFcVgRR1Bk3DZE5PMARz0d98Gme/a96OMB
PEPg+O4FRL8O4KT/WOCy/5Lo+6fVJ8oi3wZ5DunWaz3fxlQV8fo86sXO5TfW
bi7v30wDzp25fEgwtDx9/PnLw/ZCbiTogIt7XME9LvQNBfqGoI9FnhL0Qw36
W7xvhsBBH/Rluju93zD3Hc34uyNeg34ywFHXtuWz78UdU/KwPoz8oquzE0Z0
W1+G7U3E31FfDBx9lrZ61trvE3VTyGE7dfttd6XexMd8rqmOWEUdMXCs49Dx
ZeuIIc8YRxxkYP9PyZEtcvyliOPbZ9S6OybyFcd5ERdAPyIRPzUgfirqtVXU
awNvS3gngTvj/qxo3p8Bel3vxAC/ld0OMR0Q30d9PXD0g1pX93ZAxslwoVdk
GurVNh7Ns2ub7L9kQP8l4AdJX9peeUPN+b7fxH2daZj6l9K5mV1Xcc9mGorV
6DT06aeBTB/E99u9fFunatRVpif8meg3JZ7X4XnsH3rFkVYtAyr3ybGjoUe1
Iz+keV79K0PFNLt+YQsf8P6xTpPQM87f//tcYf/Ab3572MF+bj9R35Gg+yds
79RtU3L4EP430FnoOTroOYKeOg166jToqQM9uS6d6FazyF+Fo5sdZTsIft0+
21OK2ba/yTj8up0Jh/8nhtZZmbTi7ng1k/HpRP+g9OlHY2+8ZjrAL4R+ZeK8
KDgvQv/XQf8XersOervoT6JDfxJxLnQ4F+IcKZ1EP4R3RLfm5HcV50iR54jk
gwI5A3kLf1Hop9KGnhPCef8k/xXYX6KfjIJ+MkLOKJAzQi4pkEugJ/qApQ95
9DPkfGW+fwNIf8h3zZRvae5PsFOSyN8l4u8K4u+ij5+CPn5CzitSziN/XkOe
K5DnXNdD+olr29B/xlnn+KWTNPp0xYl8M/P+HuXUtVbdfE5uLcm/Czy4+Nq4
vGdKyv4AKvoDAIc/JDLZhOO9kJfYru8Gz+btTjCO/kVLZjceff2rKur77NS0
uyXfPZ5dWtQLZOpQxyfWV+T6qE9R/W6UyL8vSPQzKafgfUV/5py+4uZ0UEAH
87oPy37O6DPmcMQxLXSDJ9OZ9De1j/OFiJcDi3J+hdSLgEt/FL67Vn9mLRz6
QKm2w3xaN2vK/IZ8DPTHE3RTQTfsB32lGs9peyyuYiH2by+jez+zlHeP3l6V
+Ht9oO/brFTRvUPvVTeKeJxOIx6nQzxOxGd1GvFZnYzP4ryjb6TIP1SQfyjq
8RXU44t+kgr6SQq+VTT4VpF8S/RRNOijgD6iD4OCPgziOyr4jhJ3Ilzwp0Wf
ENgR4EPBtwr4VpxrBedai9/wXsEi7xT4AZGnChz+yR4ZP27sHa9jHP0xPgwz
/Dg/6Tb7/ZAf1WnjsQpR9RuyXxT97nwIF/0PVfQ/ZLlB67e/qcwvdcSD9Xb4
XZ2zb9/st7Me6+3wu+oFjrwpDX+4Cn843kulvK9iobN2nArzZjyT9P/eWQsL
N7tfl3H0wZN9FJEP1sU9aoQuTyP+7tQPU90p+ktgnxMXfdp9t70t0w37HEy4
uF9U3C+yb8MrqhcDbiA/cG+v0My4/j8UETdRETcR/TxV9PMU97KqcS+ruJdB
B6zTyicxO2lCPrZ3cO+suTZxXYGCT0Q9qZ2avCa9g+2zC+zHQD9Ad6qnE/e+
miTyo7B+Y6o3NK8nslVTV03ocLtENPupBtE6D6iOQ+g/KvQffBc/sl/Syi9p
UM45B/cn3KaCCcf+kceFfqrA0dfiPvlnzOsEfxoUJ3M7CH7sqDz1Ymb4rmI5
7Ej7NL5pXb2ZrxWf0xCy4yY8aNOmT42XLA89ye5rdt3Xbahiz/x8i957zcJa
4z+N+cT6M963SNJuu9e9bzOO9x0mcNhr0cMr/5v29ZaoX7ZWAy8PcL9wPLfe
3J7NNjTdUXKAV/dFqrnfKcuw83ho1T9vbRJ9y7MNK8KndA5qPEYVeq+huchj
wTpvXE5V6HBro+gzkGCAXSPyNwwa+RsG5G8Ie8SgYY8YNOwRA+wR8zqdBEN8
QvjIC2eiJK4DLuwXg4b9YoD9gt+FfRdSK7zX39Pv8PPA/V0+vnd0+yDprwP9
hV2pg10p6KwDncX31eH7mtfb/tT1HxO6vNSojqLfhZ0COSC+uw7fXZwXHc6L
yGfTaeSz6ZDPJuJBOsSDBP8rGvyvgP/F+VI0zpeC8yXkjwL5Y65v2Cj3Rd8b
+MEy5ze1vZ4RLeWSoiGXFCmX0JfvvvAP43chZ4T8VCA/RZ8lBX2WhPxXIP/x
faEH9mq8zOHybzf4u6MP3qGA0mnVyj8RfsViSqf3th3W+FsZxX2nyPsOdkdj
UYdO96CCe1Dcv4rG/asMFjj0up73ShfZWtaB9QrE8TXyrhXkXQt7waIuCXnv
GnqU4iNw6IEa8W4LvzTqkaFfCX1P0dD3FOh7Ql9SNPQlBfqSqHuy8J/fF35s
0QfPIv6eoYFD773q5bFpzxJFfi8V3wv0h/9287yQnTfr1mM7DnPBboxI9l2S
WJPvKehRj0L7vt8e9V0R51HFeRR8rmrwuSr5HP7YhjOXLY5cEcs4+vS6ZL/f
n+L3j7z3FY17X8G9L/avYP+CDgroIPRtRUPfVqBvC304Z16nud1hUXd8QNRT
izkXaucjY3bHLimuN4/T2aml6rT73ePtHREPtVZ/3N/fO/WfpdLfq4O/F3IP
92mL1tGTj5TI1JnrLQm6nsJPCDzh2uiLEeEZom9Glu7EbdeXY6395H4UuR/c
a9JvDxzvhX3Cr3VJ6I3oOwp9GHgs5TX9uPnjxtpadxmnehMF8yCAoy9oUeqT
ALwcyavhGV1HxfW343gKz08pmWgs9m/O/Caac6EUWGfe1w59CbZQHS5wqitV
gtJcWs896MHyAXGWadUCS09yyKmXRN9Cmy6r7IMVRS/qOxTUd4i+8Qr6xkvc
59f95BUNP48Ff6IvPdbBOYIfScvPI/0AmI8AexA45hcU0vAzlKB1BH0U0Me8
v4qDur7gvNKbOzvw+pBjV0f9fJL8xUYv7lkV96zgE1WDT1TwieBDFXwo9Bn1
vugDDHsHeiDOHeKMiU9vjW204Isizp0B506cX4PG+TXg/Ap5q2jIWwXy1rzv
yk+dk9Ancd5h7wg7V5F2LvSiH+cCmgxw/sq/Cz2q/ptL1osXv82p1xBzKMR9
p+C+E/1S1LCV5/L6l7NhnOseGoXMP9jLnnF8xysNF7X74ZRz3vEdt4dUuLjT
eEfQ01qBHSfuTQX3puBDBXwo6KBq0EEFHUT/UmVSrx6NX/jV5n3Cb5/ea3W5
i7sbyvkj6ngh98CPzUl+ijl9Fn05AjTwM8JvDxzzQaTeBfkg/UXYP+SemD9i
EaeGn03Wlct+CHgvrCP3ibpI2S9XroPfBX6j3JUt5QNayPlHCuYfiX1a5DNg
rorG71rkRQDH74r3tdAr5NxkMc9RwTxHMZdKxVwqsY4q9RnKv1Ub9rl23fCk
GePU71p9Gj1me51Finxe0Xhekc+jrnPb7LSb41voJa5IHOcrIXL5SLt3Oeto
+YFxL2g8bxGfQh+hg3SP43vR/FaLOMh6j+4dxnTNwXHePpjmCFv0SbgV3rLa
xPWlLfbpvsJl3reRJSztl+sDU08vLmuR11EuxbPQ1j9y+Bb8WWtnp81p/2v+
MvgwYuMn56C7ZXgdnDvH6Gdjrw7N4SuxjoWeUOft6QoLvzla8C3txyLfhtbX
opsF/avkHT/pr0tlLPJbaP9MH0Fni7zoKqa58xZ5yLR/i34UubpVfHBpZVkL
fT7oz5ByIXYOFjh9Lwt5Iuf8inUsztfuq8fTzvW0nKNHfGKxDj2v9b4W8rnJ
8+x/274sY2FvSvpo8YnWd9HiTy06/6fnSIvPteig9V206P+f8r/Wd9E671p8
pfVdtPhc6/v+P/KnovG+/6fc0JJXWudOSz5onQstOaAlT7TOC+4z2WcGOPf1
Gbc7xqNHQyPuCbzHjPcBfazHVDDingB+K3ba0Pfnv3Lfc+ALnlYv+vnEB7bP
gYcnzM/sPvMz+/15zknh/oscnZI4X4rXH1TV9vzCZyr80cBbk54Gex74iqrG
wdPLXmN9FLi6wV2xe5rFdjXwHn/30o3w+cR+Q+DbV/j1XHAqg+O7rB86dnWI
2lwW9GF8ydrfmzYPq8V0g35xJKFJ4sr3uZhuwA07hk/s8TqT6Qb8r7qrpr0p
eoHz+YBfCPm0ZP+1f5luwB2cut5foo9hugG//nB408G6KKYb8KLNW4wOK36U
6Qbct0CDEr7hx5huwD3OJhbvlfsS043ts+LhFX67cYLj8cCrDui6z23sO6Yb
P3/hmnFK5VxMN56D0fhC/NedP1gP43VOvfb/3sYGc8w5f+pglatVvP+4z/oK
8Iiyb5RJVbYzPbme7OCzPT39jzE9gYeFpm9LnTuP+5UDnxZQLuzCwAVMT/ab
+n/Jf6fiIKYn8KelXEf0XjuG6QncoXZU1PMy85mewAMbeFb4nn80+31Ybl3r
NWNwzcNMT+CXd23K7tP/INOT+49OnfBi+OGbrJ8B7zrf/cY2Vyueqw78dSOb
yc3XOTI9IUf3+Zfr0C05nvNaIHdbRf92sc3L9zw3As+fm1iszb0TR3LmWxPe
tO7mDwMKLOLzzv6hcVv2lQ9vwXQG7qJfPKLprTqcfwm8d7PAnlPLfuN8RJb3
6+y7DauYk/8H/POjYqPTu99m/xpwxd5/yKR4H6Yz8MGDPU8umDo7Z64w4bvv
dz7r+PEQ683AnWs/67TyxRWmM/A6ETNdG9x6wPnTwB39z7WJ/i2J6cl9Heps
7uK16BHjfA94dk0K2fKV55rgHpgi5C3wVDN5a51T3ynkJ3CV5CfoBny9mZws
xvGQE0LuAfcWcg/4bJJ7oAPPiVp512rn2fosD/ke23jII3++skbwD/cXP9Sl
zHUPFz34B/iRTlunORwurcf7AlcKxhR37rWP3xd4QqnCPjc87I14X+AD3wza
eGLUc+5bDdy3SPtmVfeWxO8y3iqoiBpmrKwHHYA/Cz2Xq1g5e6YD8B4nPA6/
bdqM6cDzo0ivAB1wb++K/y3a/pMn1mc88fuAmy7BLfWgD/C9A3+b/2KdnunD
dc8PvTttWOTO9AF+Qr+69cLzDqAD12l+D/ZslmRTz4jzBTyQ/K6gG/DHu3QF
Dj6tYATdgA+7EDfxUpIr0w34x6plS7VdqGD/jJce5lly2ryWTE+OI6x9ZvQ/
6A25xPjDzp82NsqqyfTkOIOgp4wjgJ4SBz0lDnoC3+QyteeWsk2YnsCXjlh4
JKyAjukJ3FxftbKSOOgGfNSw4wUbutVlumns0wIH3SQOukkcdJP7gd9c6oHw
D0oc8SrgJzqU/hJSTa9H/z7g33a1zPM4paERefZyHhP6o3Ge+94amXfWOOsb
kb9V/i78oRJHf2eJw38kcfQ1g357eIL7rIBBnnrEvYC39tXvnOfko4e/Evgz
z8tpIXv1eszT5fnX9F6YF457c12hINtWTW6qmPMNfOHXNZ+6tj3Afb6Ap9S5
PqGF7zQVeUtsRw67E5Tq7c51tsBvHH7ePXXuEwPmWAMPWvt54brPDwyYJw38
Y+GHVQ8//qRDPwvgyde7bjvS31VFXwDgyxbbhP9efyLHIYAXKDr4jGFIBMch
gG+q+9Z7d1I810EBn7Qq18fnthmc18jvG1cm9sVNOyP6qeF+dP35+sWH2cc5
jw140aKfljc497eCeeHA1Yw82XbVi3J/K+DnkvINTatZX8U8b+Cniz//83nQ
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
Dvg9/M5jkjNc9y72819CZpF8
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxFnXe4FEXTxffend29d/PMrgFEBRQTmBNgAhOiiIiIChhBzAkFEVFUwEQw
I2ZBzCKYc1YUxYABDKgoCuaAGBDF7/w4/T7fH/t0T29PT0/PTHd11alTbY46
pffJjalUanQ5lUor3byWSuVzqdRmSr/OplK7R6nU2arQV/9nVOG1Qiq1hspX
069XQyr1XUnnqXyWyk/X71CVzcynUmvp/28zOk/HG6u9nOoMUP4StTVUv8d0
rW5q+xzlD1L5k8p/oDplHR9cTKWqSjdQew/q3C767zQdL1Gbi/UbpfydqjNa
6Umqc6p+/dTG/bruOrpmd9U/X/8NUvkBKr9b5eurnUjt99bxrTr3TP1/jP5/
QL8pyo9RerXSI/X/s+rb5EoqdYfOG1xPpdqpzQPV5pX6/03VO0p1HtV/M9TO
ZJWdo7K1VecK5Ufqt76O26jOBapzhM67V2XH6Xil+n6Yju/W8WDaUXqI0jP0
O0z/P6j6d+p6GyndTdf/R2M7gfHS/40a/2nKX6T8WP0Gq/7jqveG8perfLjS
kfqNUf4UpRP0/DbRfVyrtKuu20W/a3TORUov1O9H5WuqV1N6ptq5in5pfH7S
8dtK82qntfKfqB9f6P+H1a9bNYZjdO73Kn9ZfVuiNFYbnTQOy5RfTfnL1M4U
nf+Fjh9SfrbyzWorr/Oa9ftbfZqhtkar7kL1bRed+4fqrqHj19Tm18pXlC/p
V1b+DF37WrVzv9pZyjPWuRNVL690un4z9P/7auci9W2Q6o1XnQ9iPRPVT5T+
rP//1DUPV9pPY/g+7w5jr3NOUv25qvOe7vFj/T9E7T2r/lyhNj7U8Wlq4w/V
/1Hnn6C61/JM9Xta5y9V2SGqM0+/H5Tvo/RenX+B+tak9ETuReV7c121319p
L5U/qt+D+q9Mqt/ZyueUfqD/v1f93kof0PFklZeUzlEfcurDurrunxq/P/S7
RcdrJalUZ/Xpcfqv/Ekqf1fpAh1frXNaKz1T1z1B7fVROycrf7Ty99E35Qcp
P0b5z1TvWtVvq3SBzu+r97ij0lGqc4rqjFWdTTQmn+r6Bd33Rcp30/X3Uj5R
vfXVhwd07vEazwlqZy3l/1F5G5XPVH4T5a9T+XrKP697+kTt5HVuTs9iptqZ
qPz6avMtlaeV/0L1z9O9LFS6dcnvWqLyo1X/JeVXqE+36Vm/qDbTOn+Bzl2p
9AXVuU/XfIZJTMeT+O7CO3Op2rtL+V+UH6/8kKzf16qusa7qzVDfdtS1VtN5
7dXOyyqbz/uj4yuVHxP5u1iv4G/iPPXhOZW9n/Y89Ub4Xtoyn6j8FR1ndPwE
71eY0/Yr+jm2UZ0TmvVOaZxPVHq+yvdQ+Z4qb1Z/qjrnHvqj4210rSt0rTNV
p6Pq7KKyX9TeBspvyreput/ruJ2OZyv/adr3sJPqbav/r+LdVPlKlW+h8l+U
b9BvK+VnagxWqHwz5WM9u490XFVa0W+e8mWlH6c9tuurrZPVBxaIl3hGauMl
/TbRf9vpeDP9P0HXOlZ1/lPZiyp7t+Tx21j5H3n+yndQvTd13kIdr6Hj/fVM
G5V/hTlc1yvov7t07y00Dtsp/5jyX6udA1S3l+oUVb66yu9T+e463kHtTdJ1
91V+V+VvVL6uOn+qTk7p1XqHp6jsCr3Dl6tvB6qd3vRXv414L/TfpspvqPzF
yjepD2/r3nOMh667rupvpf+HK3+K6ryoOhcp31nlu6r8A+XXVn4L5bur/X+V
f175fYt+N9dRfrr68nx4J1fTM99axwOVP0plwxu9BjxQ1bug9DDV/1bXPpp1
TWUPqf42qj+IsdI7/2DG5/ZWvoX6OVj5gsbiGKWnqv4BKn844+OOOu843t+U
n+3xyt+q/IdZjy3nHlFyeXs9hx1UdoLyV6lOKXZ+qNr8JOv34Vgdbx+5b5er
zrcqe0XXukDHFdU/SemZqn+g+vC0yk/X8ZNKe+qcIcxXyu+m/Fncs+7zNrVx
g8bpSOWnprzWtsx4refc79Q+ggn1jk98L6er/X9rXrsb9WzXUPkw1julHXX+
46q7XN/Ug1XLGKOUNpc8zsfqOiep3hnMXTXLBZx7T8rPgjbvVf7LrOvcrfw+
6sspyk9TfkrRY/CL2j9I9/hCxvfyttIlYd1H5jlX6f2q/3Rs2WaIrjlH9Zfq
v290fLSuNVbpQ6ozMO06M5R/qOo2xih9uOp1/GTmAN3XdP3/W7PlpfNC/ZU1
yz9ZjUOh7jZzzOtplz+oOr83h7ZZyxLLcd113umJZai9lf+vZhmjqHMHp51/
UucUKh6bB3TuBmrnIpVvqPSHrGU45LfTCr4P5K6j1YeDdXys+n5m4jo91HYn
/fe06vytcweF7/Ahjc3+kZ8LY36q/rtQ+dOU5isee9Z0ZMnxzKM6vkfnTVR+
GLKV2v9a+Ud0rZ+RZfS7TMf76pw3eS76f4V+I1R2Af1hbVAbfzLHq86pPC+V
f5G1LMv7uUbNMmZK178y7fUoq981ys9VmtPvej3HUer3e8rPUn9eV/qf7u9Z
tTufOsihuv47ymf0G6vyOUobVL5M7d6k/Ee67gS1sRFrho7XrHi8H1R7q1U8
ruPVl4zOaWLeVfuX65xHVN46saw6Vb/XdLxGxWMzS+N5XNry4WwdP6dz0zr3
OJ6L7m+Qfq/qeBxzLf3Rb6jKbk57XT9T+WH6fc6cqL7dmPY6vZbaaan0HLUz
Uf9PQH7T8W3Mzarzl/J3Kf+U8v8o31/P9zDdx1/q/5Gqe0TWa3ZrlT2ndLna
+V2/f9THI5E5NZ5n6vwn9F9JdRdp7FLKH6R8X/0eU/4P1fuXb0Xpapqn5vNt
ql9z1OZHfL/KH6N25uncu3T8SpPkO6WzlF7AXKr/DlDaWX07ivHQmB2ftkz+
ptrdUeXHqvxUle+mfEbtfqf6B9Ytr3yoMV9L/z2jum1UvrvK71L9W1V2ZN3r
93SN//V6d6erzRuaLfNPD+2PSLwv2E/n7qf6q+vcTjr3gLrlnrV17rPM9Trv
edVZW/89p/Pu0nmtKt6LzFGdfYNseozafi7ttWYtjU+97j1IrLo76vxv+V6q
3sdMavT5D+u8a5gDdT8vx97nVFR/G527m8b0cJ3XW78PmM913QdU/3bVuVhj
W1e9R9VG55rnMK71go4fzXlPRLvsh65l7WMu1X38rPxApeckLu+lc49J+7r0
Z76On9Q4bKvrj0k8fz6mPr8Ue49V1jWPqlvWvF9lA3StWWGtuQm5Mu09w05F
v4NrFiyfX6/8Rmp/zaLzb6oPE3Wt9irbQW0OVZt3agz21H0cF+T5Fvpv17A/
msw+pOh0E9X7SOdsnPLzWk/v03UqX6y+nBh5rzGuwfuAy5ENlW6v//ZUPyfp
uJvqX6y0pdJa2nuKuWonVvtXMg/o/ldX+c3KL1B5nXlWbbyhPrfVOVepvI3S
s9Kuv77+61G1zPO70sc0btuoz48qLdb9vK5U+VnK361rPB/7Hl9r9J5leN17
9azGI9H/59G+nv1u6u/QtO9luK53EvtKpbtmXDZHfVst7bGar3wPXfNttXl1
g3UFBf33rq77WtVlW6tsSNp7zTXRK+i6LXW972veTzE23OfuGbczVeedrPLL
eJdVnoT827rW2ur/lsi96BCU74KcrPwWGqvrVPdHjVUHle+q8m70X231VFrW
vR9Q9XkrlLZUnc1VZ2cdd2Yvz7zHN6n/dmJfpXSRxuZO/XeQ0tuR0/R/F3QZ
+m9fpUW1uYba2bTR5/yhe6rreKTScXoGe6jsEN3jcxqfZ/TbU/XeYB7jOqxj
ifUl1+u+RlRddmDF8l0P1dlHx8erfG+lTbrWDurDAPVzof57We/VXmrrTeVP
VH6i6rzFnrLJ+UUqW6jjCcpvo+u8VvM+so0G9H2dt1ej2x1Y9Th9w/ys/P7I
zKwhGa+B9A8Zrydrt/KDqtaX3Kw6J1fdxzz7TbU5l/mdNbvqusyZv+nctvpt
y1irzVPU/xH6b4bqVlS+MTKo+nSf+naP2rxF+cai+5Ot+52czfqr/I0q/0fl
r6j9X/Ws31N6ge53ifIZpcNKflefV1tTVb+P6v+m+jcq31v5X2teYz9r8Do7
Irx7y3T+GeF9p93Jde/vPmEOV/5AdBk69wW9W59qXO/WN7Jl4vt4VX37uuJv
/n3152Bduy3zmdIlKv9N+Xkqv073+52u0aT7/UrH6yvdlndMv7bKb630RtX5
QXUKOr5M184qbavyxfr9rvnsJvXla+U3RO5Wepzqv9Hgdf0YZH/9Xmvw3ML8
8G7F3x1j+JP60aLJeou80kadX1D5ucwzYRzmVfytMXe9o/z+uodm1X1W93uV
rr0L67L6tUzjESs/QunxqrMDsijreMV9Yd1cS8fbq/xdjdnZac+fv+v4AL0D
Lyq/UvlWqtOR56g6v1Wsk9ku8Tz9R8rz9qyq9UNH6P911c7zDV77Z1fdxjHo
ovRbwTqjdB3VebLBx4flPVefp/diD93D3hqfe5T/puI2WPfXVv3HG3yNAexr
Gi2L3Kn2/1LahfU96zmZ4x91zn9Kj1P6Q8Xvzoc8d+auIONtoDY/Vtqs30l6
Xxbrv4hrVPz/GUpnqB/7q937lV6dWP46SeVtdO5s5RuRyap+T0eqPFV1eyOU
/0rtvdzgfvxSsXx0gtJ2OvfDBsuI/1Qsnw5nbCqWW4cpfU3PbBL6AqXrUb/R
/92v9nfnXdLzfVL92qnR81ei/JKM/3umYtk+QfbRfb2Xsb7mqprX/3Up13vy
nu6pqnR8wTpO1vURqtNa9ddFdlK+hfKtlF+75n1dK6V3sr9Q3at17vCa94wn
qs4TFe9XTlB5XLKu9FJ0gSXLBiOQ/QqWbx5WvbtV/17SsO6hZ35d/69VtyyN
TD1Y596kc89T+UsqH6fjZmQB3Vez3u0d9d/fSkv67aL8Dqq3tdq/TO2epTYb
1ObLKntafR+vfnZF7tS5q0XW3axUmui3m/JblC3vnYUMrrLtGq3H+QudRGTd
wTj2SSp7gndW7fWLLLtnIut50N38lbWcj7zPniavPhyDrK6xmqHjY1n/y5Z5
L1F7P+vcf9PW7ayXeH/1IvqTtHUU6Dve1T1fo/tZoTbO1be+gDFXOl/lt2lM
dtM1p5S8dn+ivp1U8nzbQ/nXVWdTXW8NpbP120BlO2ls31b+RcYIHWPkOR9Z
p6X61ELp2exfWCsy3iMsyHt+OlDpHNVfEHRBc3T+dmWvb6z/6EKRB7ZHt0sd
3cunecsyc5W+Rn31L1J6mtpZ0ej91VPoFlgT2S+orap+7+q/uvo4ReVfqnx4
ZLnqLh13UP0NlF6o8i/RXzZaH3RHkO2Q64YUrE84Wun3rF2sdzw7Xf8+5X9A
Z9vgOQ2d+095z2mHKm2h658SWe/8Y97z4gCls/WM+jGHK52ve7tA164rzaks
m/X8c2LR+rlOum7XknVoWyv/kdr7VvXb6PiMqu0nd+lZtM56z/xE2Lezf0fv
wb6evTM2BvaJyIrYD77TM1mk/IHKD6naVnMHet+qy6Ypv2bWuhLaOrdqG86D
Qc/wlc49WMedmvxuppBXqy5jfX8+6Ej6MGdVnU5V+Xbq20xV/0Nrweux9+7j
WBtr3k9MVH5w1ddln9WybL3MMo3BU0G3hOzyZuw9zmWq+xlzhf47ROmGGp8d
VL6b6vSvOm1Q3YOr1hP+p7R9zrqMxarXJus9DPuXHfLef/2jvp0S9BLoJ+bq
nIGq87T6c1HYXz2p/IXKH4HMrPz5yh+u/KPK/5TxXoxz5mR8j/x3tuocovQ+
5ueM9Rj9dXxO1elMlV9btJ6tv55dVLL+r5/yAwqWtaaqj1tF1p0i1+0YWf+G
7Nsp6PGQWRfovvIZ684e0P3en7Hu4xK1vw8yp9p7MbLONtZvvvJL0tZ7nlq0
zriz6jTovDUj6/3Pylj/vA065oL10ON4r9PWD2+u44WquzRt/XDXonUGLVR3
p8i2QmTfWO1soeMjubaeb8K3qvQOfc+HYBNCR6d7P0T/H6Bzp6m8l8p/UfmU
JNj7WJczfkYco1vLpj2+Y1W3O3Kvzt1E1+nPe8jaoTGp6XcQe2Cdu6n+O1T5
ovLtlN8fHQrfZdb64h58e8jtusf71ccpqnc4egZsMZF10y8q31r5fdnHYitQ
H0rK/1XynvXEgnWl2CQf0DBdk7V++Fjlf45t4zlC6W45jy8y4QZ6H07S/7vo
HkdlPL411mndV6PStXkXEs/vl+rcfRLPX2OV/1XjeCg6FuXX571Svq/y2we7
xHF8ezr+UMdDlK6LDkVle6nt03StZ4O+etuQDlbylu6lQflWqvu72j8SvbLq
b6z2T2UPrX5W9Izm8o0qba30Bd4n1XlcaadgB1mqcw9T/cG67tm61nuhfGTG
70xF+SuUXyvs2Z5lzQx2lus1bsMztrX8EttOeTTjpmvNU74vuhv9dsKOqX5+
qe/2NF3rBJUdVfQz2RWbUmLbxjCd+4ba3zmsQd/oXjqw/is9T9f5JNhTPtU5
V+l4b6WtC35uPdTeT7Htm/2UTsxYBmiv+oOKTrfHDpvxOPAtIC/Q/rk6/7Lw
TbGf/Kbo8o6qf0nG+wLm+r/LHvuL0YGoTiuVbY79Qv07Q+V7aMxPU/mavBc8
H93XHzr3etW/OGPZhv3GNGzoYW0bovot2Uer/t+xbTHnK91DdS7PeL35S3X2
Rseiay2PbVc6W2lHdNToxZH9da3lKr+R903pRo1+Xy9QG5+F8XxH1xiq412U
/qx7GaD/+6v++Sr7W3VW53nousMy3iv9G9tWdI3SSzP+jphrPmfuCfPJytg2
sGuVjstYZmOPtJ36drba3xuZWc99hPLDdR97lbzvXF/X/zjyvgx72XIdH01/
0TkhmwQb2VLVf4RvXOmu6OFVZ39k6sS2s6mq/5PSfYKsdbXqrhP0FFFim9rN
qvO35qlhuv7l+hb2UDsXsh9SOxvqujfqnP3V/qt6n+9Vvo/O7c67wv5F5+yu
+mOV763644reT/dQ/evCHLU9z0/jNjlj+XIDtXm98vupzhlF/7+z2rtGZf+F
fl5atE5jH9X5LbFN8NbYczC6Cq59TtH5bjq3T8n6jlHo2Kqe+3sq/aNqOXef
qm2V6F4u1bknqz9PZC1Lszahc5iYso6E+ufwbML8ubuOG1W+TaPf4y5qa7TS
Xrrfs4v+fw906dgTNffurL7clbN9kL3KX4nl7n2rnqdZ6xlfbF+fKd9LvzXr
XjsOQ67QuZ8jqyBjZ6z72Zt7yFnXw1p4h9Jtgy6mKWO7MPm2YV6/QO3/nfi8
Ys32bfQk2MIOLjm/sZ7DSnQ7yFRKU7HXk4PY04e1hffp6MRt9lH5eN1jb+X3
Yw5OvJ4cUvU6Tjn2uH1zlm1o97+i35f9sWlkvPZz3Bh7vepXtU6sf3gub2W9
x+un49sy1qmxLk7PeD1GPxXFXg8H6NxbE49TXfc4Xdd9Oeiw0L8xnpfwnFQ+
M6yD/XXvhyndRPe+eVhLx6GjiZ0/Sm1+X7KuqG/BeoUBjdbdVZlvIp+fr7m9
o5HNQp3Jamdsxvso5r7bdd2uYT+zouw1C1tD67z35FvqOp10vIb+e1XPf82y
n30LpYv0bt2ud2kr/b8wb3kDuePNmjEPYB820/kHKr85MiR6YOY1pSflvY9m
P725ftOYK5DNY+MKNlf6mu6nTcr7jS11vJX+vwj8Rs14DHAZQ9WHy9PW+Q/H
rqf8PmXvpdlTt1J+in4z1FZWaRdsHxr/jPKt1U6rjPfBK/mGVf4fNmqVD4hs
P2qp/MsZ25FLyv+i/19UH35Xugh5BZt8zfPbYcrPxpaqPsTMaSXrCn9Wukxj
EbEnVXlDze/Af5ShU4tsv/tDx7117m96Xofq92bWuuV3gw0dW/q/iXWqfdlH
lqwP/Ya+lyzPI9cfkLf+t4otRL8LlV9H6fKa18k5anupxuPLRsv/fzVbZl9l
h6xaz4C+oaRzTkCWwC5X9X4QnfP0gnWoTTq3ULTtp6j042brQ9CLvF21LA0e
4faq949rql/HKV9jndZ93KF25jZaRsUO1UrPeUDZdqiLNSZrl4wvmqXy/mVj
QcDsgA05hnlA9caDe8pb5pmHjI+uUfnBSi9R+VfKH8p7o/wX6H6LtqctVv5w
pdvpN0P57Yu2ZY1mTafdvNfgr5Xvx/6WtZW1J+959lflj9PvT5Ufzxyv3wvK
d1O6g/r2kPI76h5viL2ms7bvovyjyu+k/Ll5y4TvFK0fRdZC5toL2Yu+863V
jEMbrzGLdTyMNQFbg/JnKn8KmAq1dXrWNrXP9JulNp7U/+uo/cNV3p3vMbGu
7A3V/zxxP+lvz5LXONa6XiWvoaylV+a9Ds5XWfu85TTktY76Haf8HKWHJpZn
XlGbXyr/svK9Y7+XvJ/o/m/Ne04boPzhiduhvRvynnvZXz6n/Cbq2yTlLwf7
ofwVyIYl7yGvVnphxnqcdVhT9C7sGvZTG9Z87v1q+xf9bsNurfRX/e7iu1P6
IWtl2NdflLG+qLXyu+i/JxmH2LiwDlljUaaVrK+8nb1v4uvP1HjeW7Kd5j7k
Lu5D+fnoVfPWi6IfZc1g7WDPeLPq7QSurGRb6AHKz1R+G8aCdZF5Ve0fovyu
2KZ1jYFq70+100L1L8M+ofxU/bbQd3WC0gnsi1XeU/UP029UznbGk9XW59gG
mH/4rpXfXvWvLbmf6PPfLNsWDI4OG+47Ovd8pZtjp1W+o/7fX+3fm/M3+23F
3x3fXx/VG4xtEmyDyt/NGTt2hH5vK3+k0hP03wm61gKl5+m3ac5z79Kq9X97
KV03b93raerXSN37oZHtqFvnbS85kueeWM+Dbvt65WO1eUPiuZU5FlkSPRky
MLLw3vrvcz3HUbH3z+Ch2O+B83iXfbrqXFyyHvYSpdvmraMZWvKcztw+sGT7
8zPKH4VeU/0+XuN4gdKoYswt2MihutZsZBts33njVI5R/e3z1jsMUv6Z2HvS
jM57StfcWfmzdD9XFC3Xfat2V68YVwNWM1OyfNVP6TS1kQ2yFLa8t5RO4dvP
2UaNba8v5+i4g9IN694XXadrbgmOBDlR6Vv6P5WzzXgT+q06d6jOetggdE/D
9d8eGevQaLNt3TbUU9kP615WgDdSvddzXpuQ8w5ssu1xec74V3RynStem7Gh
sVZXlC+HY665QOl9GuNzM9aJfKLjLTPW74Mz6IQOO/L9tskZ98hYtKwbk/CG
+nBDxjoB2tq/Zp35KHCMSh/GTqDy1XVuHX0675n6OUfplznrMFlfsFV30zm3
s1dBPlf7uxb97W+bWJc5LaxR5JE5NledLYuWQ7apWdd4BzqxmnWWW6ELz1gP
/wV7odj4jo/KxoAsVL6P2pkYsB/YzOYkxoZ8rDo35TwPgA8ZF3m9W9DgNWPV
2qH23kr8/yeq3z5tHO/BanNEwJZ8ia0kNi54QdnrCutLF5VtnHZ5X9XfVPfx
lfJl9ftT1dtLZacz76rOIpUfpONLctZVY6fJxdYhHaP7nVE1ng4M0gMZr92s
/VcVnSIL9MtZjkLv2TPoxHhnrit6bO5XnXY548WROd5UenBkXd6GOePhOfe2
ovWfM7A1lI3tmlnw98Z3N0z390bO2HfklVczllU4B9vE6TpnHvhf1duA90zp
jsj4kXWC4MnBRYCd4vkzftvru3u45Hfnbb3DW/B+aVw+oJ+651Gq21PveXNs
eQa5phjZfsF++Ieynwnr6cu63j867x2VvVG1nmRD9NY6Pooxjy17IYPtW3Fd
7FXYqrC77aLyD8B4RD7GBveq6m+Zsuz0puq1RT+p4wUF263+UflBGbfDc+2d
sZ1vV/Ypamtz9Na6v+3Sxrcg3z+DLUbpC0Xrk/FBAMv1ZGw8f4P6Vqu7PK38
7IKxb3cg48S2BzWrfHrR2Dl0zuhjm1T+VMq4JPqAjbBasV56Xs04fbANc3T8
cZAnkSuxRfyt/DYqf0r1ftfz3SDY8hgj7gsdNX27S/l1KtYrX8k6VjWWELv/
OjnjzJBB54SxerjBtg/sstg/7saOkvb9v6t7WTNtO3hLjeN2KpsLZggbW9p2
yY45Y0o66L/3Y5+LPfpO9K/oAXhmVeexX6+R95gz9g+VbA+9C1yt2jk78nuF
bRkbM/iT13K26TLfcZ0/lb6sdoYp/5fym6WMQ6edrinbgzj3h5TtzNzXemE8
W6WNhUP+7pkK8niD7Zr7pyxrYd/Hzv9xsLP2Vnkb5BPeKdU/Q9fakHbY14W5
GrspbWLnjMCrR24TO+mBWduAsf/ukrUtHBv5/IJtUtim1tZvZ8ZP7a+m/Ibs
QcBeZoyDwU69X8b975zyGDAWYH3eLLo/C8FyF3wfz6j/35U9t3UDa58z1m0W
dl9wwyp/pejngs3pq4rld/KM1WpFP7/F6kv7os/7kPUe2TBtPN9bZdvfsSnv
qPZvSNtmDN4PjMCe+m9yzntbcID7ZN0m78NRAadHfeRv5PDH2Dcmrvu2ytaM
jeObg/2P+TDrOWh+1Ta0xeCCMrZhTdPxmLTfXd7bb9XvdkpfV58vbzb24gql
R9dsRzum5r049jPW6e0T55eqzddr9ttoV/f3wXfCfILMyPrH2gcuBrtea+WH
RfbpmBb2b8xFzJMfFVznMzAPzcZ/1Zr9veTCOvJN3uOBn8axut4jec8DPXWt
8br2g3yjRWMwUmqvsW7851yNSX/Vmaf8s2EuYU5hTvuh5vzr6OOzxhw80+B5
D58L8A21smXRpzTmq8X+fzaytPq2jeqs1PHdkTGW6MIqwUaNrnOTgIn6RvfS
quj2/gZfqfJy+G9Z1fbq7kqfzVgPc4POvTVjXAf/tdO5T+vcTdWHcyNjMjl+
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
SfxguJc2KLrtMUFe+jxnjvU9NVb/B0pvQec=
           "]], Polygon3DBox[CompressedData["
1:eJw1nXO8JMfXh+feuRzPnQk2tu1snI1t27adbPjLRhvbtm3bNja2kw3e58l3
3j/6M3W6TlVX93RXHXzPqck323m1nboLhcJaA4VCD78/VgqF9yjM3FUo/Fwu
FOYYKhQW7i0U9oOenfIOHMfQ4Nb+QmGfVqHwUrtQWBu+66F3h56Y+kngPxSe
e5uFQoVzy1G+gfo9KL9P/UF9hcLn9Lcy9dNWC4XF4d8D+mL6+Y7rv8z1J6DN
bpT/hv8h+FeE3pJymz7WoXwj/e1JeXiN61J+h7GXSoXCFfS5MPVXcm4X6hdo
FAozQX9OX9Mx1l/5HUP/C3K90+Ffi+t/VM01vNZY2r9C/R70dyTl34bCexX9
7Up/BY5H4V2dPrembl6uvwN1U1D15GCh8C7n9qP+I9osQfuJ4f8Keh3oq+uF
wmyMZyLabsA4pmE8f8LzItfbnfaHUP6L9g/Cvyj8x8H/D/TD0JP3hP4bnnco
7wf/KZSnon5qnt9o+nwYekroqaA3ov2t8K/K+B4t5z9YlWuvyHEcbe+lz9/h
XRf6GsZ/dW/up8DxEf0fQPEM+vuZcX4MvQD9ncrz+hb6JehpoH+g3294di/T
1yb0/xXlQe53Gequo8/dKP9DH+/Cvz/9nUb5B9q/Bj0XPCeW8nwdy/0cf1Du
os1jlEdQfwLjLzO+Nyk/SX8HUTcpPGdwrduh94MeBj0uY18entPgnwv6OMrj
UD879dcxplXpbz6u/wPXe5b6LaEfh+chyvNxrEX7pal/h2d1F/xbU/8E9bNR
foz6taFvh24x/j84nmP8u8G/H+UPuJ/roKel/ij6/55zt0LvQP0WzYx/Msay
EX08RV8fwn8b9ZPB/5XvOzy3QG8P/8aU34Rnj77cc4W2VzGG5aBnp/5T+l+E
+k0Z71rQS8L/EfRh1H8J/+rQL0BvB/089IzQY7nej/Q/J/QfXO8+6penfg7f
V+63D/oH6g+DvhD+66CfoDwWnml5fjdy/Mr4n+HcLJS/hecm+LeDXpfyG/Dv
7v/HONfkfX4Zeifo+7je3/wf33D9F+Afn/9sV8q3w7cx9Q9SP5b7eQL+9Tr3
9wTj+Rqe5+GfmvrvGO8kPIN/Ka/H+dnpfx7GMCHj2bEv/W9D/Wb0vRW8W1L/
KP2tSd2f9Lcp9ZdyvSV816Hvg+cW6ueEhrVwHOVxOOo8zw3po9f/Dnp86tZk
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
P3s0R6kn9/DJYPyE+guVmZWdz4ZeuCcysLKwWE59m8doX+H6p7iOUD+OOl41
Ps+z0SemGYg+4fyyrPoR7e8uB7cofvEu+H8YjL9Ve7Z27ZPaiSnQ96oPVrz8
XI3EKk1fyvvg+r0CdX3c35Mde/2yPYkZq3fWz5l7EpMhBlUMk74Vz7me3t2M
/VA74ikdeXaEeEX4K9Xg+sT3eU759q9a8E+bUD4e/kY7tluxZfe2gwnSlrCk
mBD/y2Ziz4zJMjZrX8bT7ooPTV/afJXoS/rM9J3VuGa1GvtFjW/pmWZsO66x
z+rr4f5H9WTO1D83QyXfid+LvrofWrHFi+06px0Z8OZS8L3Khvr/jX0Tky02
e236K6tP0J/xHmMbiZ3o51yT+j04HuuNjq6urg9e+X0W+jy0nfi9e3qjk6ub
j1+PriMG+gnf/3rWt9/7oo8rI25ZTUyGsqP2d2PfjihEf5yonvV9w57Ys5Th
G9XEfCjbK+OfVs16qOy/dylriT5CfYXiC5zrjAExFuTfRmx9xrQY2/IR/LvD
u2cx+Dj9K34LytjK2i9Bnw59LfX7wHtIKbFVp3LuRepajeBZxbWeKd6wFlvq
ctD/awe/0tOdd2QU5TZ9ngH/NcX4L+9VnoZu8rzqtL2zlHv1npVtlC/X6YlP
d+NaMDXitsVvP9BZry3r73qXcv9QYnWq3F9beUkbpPbhYuIZxFz73vv+G5uk
v2r9nvwnyh4P0ucuPYm/ubcceVbsqxhYZULjQ/TVagPSFmRM4hSFfMPKB2Ly
1qB8UzVYPf35W/QlJu7OavCfB/YFXyvO9rXBxK4ZszWJfvFqaOORjEtyznDu
WJzrn1sJxkssm3F0d3T0l52h31J+KMe/tkNfMMm95awjrifyqN9sU46tpN0b
f6ZrnmufYxRv8L9SbJ36LPRdfM/1rrJ/6u5pxyaubfxir1GN/U7+l6v53pWJ
lI2MARGD+k4rWOuW/207MpKy0s3FYFaVn8SvauPU1un1jU24jDavVePn0t81
d0/044FysOTeo/5D42HFI19TCv5YO4j2ENc89Qf15fNcy8WD8qx3rgRPq09v
2c7cMpHvB/U/i+esxrftGmk8i3gf7R3KEMoSxnEYz2Gf6t+u667v/qfiefUX
+2z36k7MnD4CfQV79ca/+DDH/n2JKXyK8kPVYO3E/H6kHZP7GL8rmPQHqSuL
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
662xhtqglX9cE10btZHO0ow/yVwxrtH6C51jnWu1oc/RkX/WLyRGUnlmTC3Y
6936Io+JiRdPsV0p9md90vqmXdN/bMV+YSyfPj/xYMY0bljJHGKsozGgi1ay
PjsfO4c6l27C/7fwUOIPxaJPRf3VlE/hOqN6g2F6v5oYzQUrwXe7vvi9/cr5
j/uCddX/qiwkxkj53DncuVyfnflolG/1Na/EuTPqwYybq2KNWrDk2jT0T3dX
Yuvoq8YW8ktPvifxcGIdn4D+shL/r1hHcxCZi6jtmtAf/VJbxN3VxB6YE0Yd
/gp94v2R8Y1HWKyR/DfmwTmP6x1fCjbbnDTmpvmJ40PKD/Yk34Yyof4A/QLK
iv/lM6D/aYyPof9GLbHzLegm5d+aGeu7xeQDul57eH9smuKPp2/F/6of9lHf
fXiepu6DYvI9zcT4nuoJBlD86HW0n7I/MWpiwrWHm4vBHBbmstAGpS3KGFL/
v92awX4+2hN54o3B+O6Vb2esBP99YTEx4s9DN8qR1S8uBo/uHO1cIS7EuVs7
v++yOp+6X6EcX87xxeC3XxrM96w+Mnkl+Hb7+lh/TDm4cb9dv2GxhMaXib00
R5O5mqanzdnwL8g9vD6YeGSxueaEMjeUOrT5x8xDpm59Qim5i8wJZm4w/bIn
dvQfffNHl5J7SXlPue+5VmRZ/SZHqh+UkyvJZyD+XfvjNR15Vl+Y9t3rirEh
aksUr+69/tWdnD3mXFIfVB5TLpuB8T3WE5lQvG2tllwIYlDPqwbPoi/YnF0f
64+rBi9zLTyr1xKv5txlDjJzkRlDYiyJeVUeaAcXIT5Cm5/49N8q0eWN6dI/
NF05uWGUr5Wz928mt5I5qcxN9SLPZH6uNSHjm6AU/O0szpXU/w7/F5W8K8bI
bVkJ5lPs55/F4Mff57i2JzKZ8f/igfT1isEUi/mtMYTa1jhmp/4RZYWu+CD2
pe1XHM/0RD4wf5N5TMxnok1F28rXHC/0BQN0Hu3/gP/LnmDglYd8J3w3xCSK
N3zG960/PsBxoD8YDDZUn+XUpWC2xeNOUwp+d6pasG7OaeK7t68Eq7Uk56am
7k/o73qy/vxWDp51Pu5vaeqnoX5n/af9kR+UI24oB3vnOeNJtdFrqzce29wx
2uy03a3iO1cKhkks0xW9wQPol9Y/vXsx/ts3B4PtM6eM69N0vEP36I8qBo9v
jICxAuYkM/+YGD/n7nmq0XfFb4vHWgaeaWvxhx3K+JaHnq4WjLVY69/pb4dK
/MdeWx+svljjzbWlj6DPxwcTQzwl7XcpJkbLmE/jhI0XNha0i3NrU3eVNkj/
S8ZYUN/2W2rH/6R/p6uY/9+cVeauekdfFfXXsAas2xXMttjtZSrBlv+tf8r5
t5F4dePWD25HJjd+9fJqZPVtq8EaOqc6t2pD1U+kv0jbqjYF11LzDmhrMN79
sWJ8cJOVgxESKyRGSR+tmFmxLpP3Jl/U343cn/d5GO03rwZL6RzsXCxeX15z
mpzYiEzn++B7oaynv+G5jn4l1lqbpbquOu94pciLrm3mfLqmnPVKe7NrlGuV
PjB9YT9p06pG5zDfibkC1EWMKd4IfWPywcQav0B9Ef4vq8kP9Fkla5c5na6m
zaOt4O391s3XtGYtWAfl5bVq8Rloa9LmNHElOs+y9D+2P7rQVcpUvcm5YD6o
O/j/NulKjkFzDZrPRKyOOQbNNSgeztxi5jQzt9mb9DlJNTmlzC1lTpqP+hNv
aa6aG+rBNhtTO4W2+XbG7fjNTXW18h/l4cXETxivLdZaG/OE1K/WjG67fMd/
o/3A3H/a4I090UZysHNfJbaTYZXQs1E/UTWylHg/53zj4f7DHND+xmLi347l
GXxXjEwtlv3Zwci6BxWDpzmyFNlcmVzs/fHN6HqbdvyLrkcfd+rF+hsPeQT0
vV3JGSDe7OhifMb6jsXLHAB9XVcwf336w7qSY8lcSyeVIhsrI4vFX6OUb1VM
g9gG8T6OTZn821IwedqfvKbxl+ZZMN+C1xTfpg1RvIa4DW2Lxj3/1LlfYxmM
mTZ2Wn11m0r8nT4bMQ9iRMVl3dXR38VeHA79KvRd1H/s+t2Mr3OBjj3K/Bz6
0n0ffC/EcKmvP1zM92+82wPFrDmuPYeVouv6PRmr4Hwhr/qOes+gNk/oKyvJ
n2M81t3c30AxmD5lINc317njOvLe38XM+c79+ldc68QriVtSvih0nq+xGx9W
s74p7/5Sjc7u+us6rC7veuLcqj6tXm1OAfMimB/BeMYjSsFOuQa6Fhpzbuz5
H505U/yLc/0dyjvNxFAYS6G+vHclMTnG5hiDJObWmH9j/9XBzLfm8zZW1G9k
Uup/aSQ3pznWzLWmTqdut2ox+eh2ryb3mDFU6s/67PXdG/M1J33tVk2uHvPz
aCP5ejDYd2MgZi0lPtncbf/SZ2UoOVDMheI7K75LzKDzqTEJYgrNWVBWV6gm
l8Gh1dDKJMomxiOJPxGHYi4FbUTailYsBk8mJkNshjnWuqpZo1yrzBE7RJux
g4kFFSM8vJT8JfpGlBGUFcxXp6wztph8cL81EgtvTjdzu5Wc83sSg3k0Yz2b
MaxfCeZs0kbyTV5N3XvF5HM8pJrv35hFY4CN4ThR32otsR3mfDH3i/kprq0m
99Qd8B/Yn3hCMeb6ax+qBHu+VC3Yd2OcN6ll/jZWzJx/5v4zHtG2x3Ju93Li
HQ9Sf2A8z5bjB9MfZgzXKh39zdxuxrQZ2yZeRXuwOR/N/eic59y3nzaOjr1p
q0Jy4qgvmuviSvFY/YkXdQ72e16jkrn5ZOrvL2QMxlse0EzsjjkvzX1pbgtt
g8aYjawGNyV+qtEXfKxxWq79Yj7Eay4HXewNJkd8kzE+ynPKdcZmFWnT5/rD
8aW5AQaTa8ecPsYb639UHtLnpO/p/cHEaolxM/7k3cFg38UkaZ823sjvcd1K
7O3GsLler1KJPeF/rgl9eed995VxlHVKvcFriu9Ultu6OzljxBMdUghGS6yW
Y3SsaxZj49Fnp+9urWIwF4Vqvh1zVJhveNFq4s2M6TS2Uwy8WHjtz9qhxRf7
7Pwm/TbN42TuGOco8yGbp0ksp3Oa+VTPayY2zhyI5kJcrhR/pRgxsWLqvH+W
k/9QXfiiZsrmfDX3q++38e2/dew5vZz7Vt9hT/LBai8yt6U5BM0l+AN9zN+V
nJfmvhTzqe46XSlY0HOanVhP6otDsfcZ67N9ObH1xoOZq1DM2ohq8hiJ1XPN
NV+qeFmfvTFWP1C3fDnYFjFfx1Ty/PRVG69pzN5CjOernsg8xpf+0UguSd+x
+lDeJ+1vxgAaC2iMoLGCYjrE7IuB+g8LxfUuqSbfrr4MY3qWrMXWaOzOLf2R
n4x5vmggMQLGQpuvdbNCcoKaG1TcqPhRMSHijZW/bPuJz7gaDLZYbHM09Nfi
89b3rQ9kjlJihNaBnrmW2CHj84ztvZH271aDYRfLbo5TMfPrlZNb22/G+EZ1
THVNc2x+Br0K9NX9WdNc29Qf9fVq89D2MaH+k574yMUzNsuJtRED8Eg1dhvt
N+Z0/Kma+FLxYqdWkvtb/Ki2/wuNH6pF3z2lkJzSxoj8NJh79xnOVUo8m9/b
sfA93A7uV/zvN33BfytfmVv6vzm4knxn5tY15665d415MPbBHLDmmzbGwVgH
MS/rV4Mnt6/vOP6uJmem+VP/y6PaToyIsSLm3DCfqnnBnAuVQYy337icWDFj
4IyFE5MtNludwvxZ2qrF23zal/g4c5bpT7q0JzqP8RTbiSfQB11Nf/Ia8/aH
a2Er+bLNm/1gO5hbsbfGzJjDTYy1WGvj6Y0/MR7FsjH2vm9iGJTDlMfENhhT
aWyl/iTzf64Lz2Od+CrXGuVHc227xuqX2UR7cHdyTpt7eoVSci2IiRUba86F
u3i/xwwkF8OWzeQyNqe1ua3FoIhFMcbOeD1j8sRzius0Vk/5zdgaddpPKpFx
lHVcU8w3O1MtuYaMgZvFb6+cXBBb9QcPav4C1yJz3IqBXk8fZndyTpt72hgV
Y1X0IWzCeGf1fS8kZs2Yjz8HE5tvjMf8pVxvnc77r+3it8HEphljOW8p7Tfp
fJ++q+anNpfxadrwatHxlUdXq0T3N+bsHOqWryUWTX+ctlJz+pnbT/+Q9sHL
yvEfijlbopIYLLFo+seN7TWnx5iOf85YeDFnnzaDvxGfdp42Pq4xfiNYNn3q
5v94gTG+1p8YumGlxIkYL6JN1PyT5osTT2iOZXMtX1VO7nQxrOZ/1r5hbkpz
ZJkr69BW8nGYl+PldmR4ZXl9guYjUSYyv7l5zpWV1I/cG8Ac1+a63oJ2L/Vn
TI5NDK5Y3Ck4xq/FXjuikByZ5sr0/ZyrEDywuODzG8l/p2x3cTsYb7He5gA2
P5+YaecB5wNls1saye0wWW/ya6pPmntrN9eURnxI+pLEQN5dT4zELaXEgxg7
MX4r/7X/+XGNtLGtmNYb68kpYm4RMVdHNIJpvbAUPKtYV/3dxnYZ06R/13zq
6nbmwDH+0//c/36GQnzJPlOfrfrBMOpf0wY8mBxPE7bzDvku6ZOduxmZUtnS
/3ebVnK4ajszZvD6er4xvzW/lzVawWyL8TJf47et5PAVA2b81fj6thvBopiz
89p68FfmBjEm8ZZ6cqLob1uM+ruawe//Z8vlOFT+euo28ntsBE/utcxpchh1
LzWDzxSn+WY5PtbH1Dm64nsVA2WeZ/M9i406GfrxcnJSnws90E588S4dfUH8
uW3FrB1eT8zLluX4+IyFOZRj3+7EcNxej09R36I5Vt3v4Ezub0xvZNDdodds
5VmZY8hcQwepE3UHA2s+T+PntPWa08h8eeYnMrbrFo7foGvt+HOMDRIvKeZ9
ukowH2Lhzedn7Jg5j7aqZ04/v5Q9EJzrJ64lNtQY0b1rsfFq61Wfe7cVvK62
RmOYfF/N59bVFR3deL9SO/HRxjKL35oF/uG9wbAf27mea4nr4UutrHGuda5v
L7SCmVNnMIfxEOWH9N9WY5M335s5ssRrv0j7Uiv7N1h2jXL88mvn1d5bbQXP
pG/aGJUL68k3byyhOWi2bQTzJfZrF/qst4PJFLNnzshmO/H+2qLEaF9M+/Ha
iRU3Rlp5x/yyxoZpM/R9NUbyrXLs2cZO7lgKblT8qPga42XFxpgTzfhj4/vN
/T/Yl3hu8+ePV4uNynhN49eUdcXQGZ+/SSk4MPFg5pPWR6OvRp+svlkxrGJZ
tcc+20pMinYcv3nxVMb3GmsgpvGWTnyvueOM2fV7NQZDP4LvmLEZ4rfMJf5C
V/Ba5gssdOUbMP+geKP+rsQMij8yR6Y2HN+xr1vBM/V1xccp/sd4Jm0fG3fl
e/D9Wqwc/7S+BfPdis3dXBm8kZivu+hv267Egq3fiu3JmLEN4b1/KLkKfoZe
H/or4zW7g0HSnvYmbc7tyrm3GsmZqo3MeDNzqXa14180xlp9V/zES92JUXq/
nhhZMdVTFRI7q06gbmA83pX1+O+1+TrHO9dvVI0cpTzVaiVf9Vpd+SbMF228
vrkRxulLvgDnq9Wge4qZz4yhUo5QnjAeXsyk2Env4W14NyrH5ite7Ebnlkaw
ZOY4cL8W8WQrdiWGVnyO74t6gfqBsf/m4Duw47M1Fl771OWUV9Gn2ExMwHXQ
a/Rkf5ab6qlzDnIuusv76UlMn+vTbfVgZZ3jnOu0v9r2IG22jcQEGBtgm0ea
yammTfDrQnKtiZdarZR8muby6ta2hCy3+0DyI4hxFOuo//bjenIOnlJNjgFz
ERpDt3M18VHG1mmj0VbjnLRTPc/IZ2WOf/MpiFkVuyqe1dyj5tYzx542ZW3L
5in026yZS7AWvJ6+4R27g4cTL+naoE1b2/YV9bwLxniYP8r8mOt3J6by5Hry
Z+lrUAfVfmN+Ttc6cx6NrieftDKJGEqxlOaQeqQS+4e5pcTPaqsxR8ePnfd9
xb7YdLTtGI+/Xncw1CfVE4O7aS32GmNzx7aS+95cReo/5rc0JmAb+I9vxN9h
rLlr7v6d+zEXljrBHo3siXBRIZhw90caaCZXTzf3NOhaWorP1XxZPY3kXNLu
oP1BfJs5lXoq0Re1dxujqk9UvIHYQONL9LEuWUiuVvFZaxSCmTR/uDkEjLt1
ji23k0Pn0krGrH/G99Nc19pYfX+NybymknfSWM2/WvnvXNNd283Zv405EQeT
y9/3WVnLmE3fT2Mo/63Gv2FspTE7V5WCuRF788RAYsHMqTjLQNZI18qr6O+h
WnIUr18Kpk5snTmfxZgvUQh20/2b9LPqb3WvJGOsty8Fw/lKB3OgDuuccH49
+dvUo9WnfxwK3nWlQmL8xEfOU0mcghhX8W3mUF9qIPGW5lbvamZvIvdYcK+F
wXZyfZs7S312r2ZyQZkjwlwR5v9yLyG/H+Pt3i0nN65zvvGSszcSS7BYMfmk
jFEwNsmcI8YuaD80V4V7qrxSz3r6SjXxDcY+zKG9kvLixeSL+mYouaOu6tS7
/r9RDb5aLP3Urvd9iUldyf+7khhfY4CMBVJfMVZG/+8KzeQbNn/jT4XE75tD
w1wa7rH0bD05Zsw1c2dX8h+7/r9YDb5bLLgxr8a+Pl/MfkinUn9DJfnU3G/h
/XKevWue8W76UPSliMERi6NPTt+c8dPXNpKvx1wE5nAxl4v7iymbqN/9OZQc
8eKZx+vIo/u1E0Nqvu9X64mB+recPTCMjdq/nRzfxiu/IbYIemw5c4z5+fRJ
6ps0nnu5RjBc/5QTsyS2S1nducP5Rn1MPIDx8JvwzlxWi01T2+bmmvnaiYEz
NlLMktglfXT66rRZa7tW51T39P023kb8njnS9ak+DX9/O3uxmXvLeAT9beZI
F8Mnlk8dTV1NzNvIZnQq91jT/6auZX4XsW+z1ZIfwZhe47HEYIvFLjYi++9a
Cn7CnCfmPnmoEHyaOWLMFaPPZR/oheG/uS85pMzP9V8Oo/7Yxw4dSr5442HN
/2z8iM9Qe/VfHX+vOTi0F4g5FXvq/l7qdjcpL9Yjn+zbH8yJWDJzspmb7c6+
7KdijgHx+WJMxZqa78i6nWizdivfuN+6ORnNx2N+RmP3zdFjrh7z64vHNqbF
+AXzx5mL7drO96JNS9uW/594A3VydXN1FO1jK0Nf1p/31fgFfUT6isSo/dHK
O/VtIbHPvmvqk8ZK6uM7pR7MjdibI+D5E/6VfGf6g+E0fkkMjFgY82l92og9
VyyT+cW+aiQfkmuDObGanfnV2EhlpMvryVFkriJzMO4KvX0rsacvd2V/CXVP
7RnGOBo/5x537nVnTNH/7w9nvN+YavK9uB+Aa4l7ZBgv7R577rUnBuSoevZ8
c+83Y0LVJ8wX5/uqfGL8tfk4lc3UAdUFnW+NARcDJxbO/f3e6+BFLhhKfiBj
EY3xMdbHOUA8VKHjr1d+066mfc3cUuag1F5mvq75Kb/Wir1Ou51YU+c77YLa
BydtJX7TPDPmm5mslXyx5o4yh5W5rNzPyL0MzSFlLinlM2VtbZauh+5v9UNf
cpgY7zj1YPY+0Sc2zWDyP5vfWhnS+Cjzebt3kjKQ+RUdg2MxB9NTzeTvcG8O
fe7mOzDflrku3EPQvQQdo2MVw6p9wnw65tNW3xRP4x5e7uWlz3ebevZnKRcj
n5h/QQybWDbXQ+25xryJmxM/595qi7SSy9acn0dx78NqseW45+Jj+m6a2avI
PZjci8n9uNw7TUzPQCt7krk32Rvd2S9MTI3YGvU/47XErIhdUR/VfyUmR2yO
GKUdOj5bfbc7U/9LK2uE+TrNteDa4f43ysK+3+YPFP+jL0AbofuPvNKKP0u/
lvFl4mfMlWVOXfGPYmTEyjj/608wp6O5HbWJuh4qw/ms/E/dH8X9uZRdxGi8
2Ei+Iffi8vs1f6cYGP26+nfPbgbzoh1Ye/AX0PPX4z9UR1JXOqCR3E++4+4f
ok6jbmNOM/PZuUZNWwjWybVL/Uc/iP4Qc8/ps9d3r/ywQz36sHHlxpe/0Qxm
Ueyi3+fB9fjg9cWLWRW7KmZC7IQYUrGk7qdijhXxOF/XMoeOqCSmx7lVmUbZ
xhx02u4fGkh+a/f8enAg+4t9oK5N+00bWTPE3pkf2rXEnHvmtTC/hbn4xE+6
N4b2Me1k7hHnXnGvdGe/NOON9SPrT95zKPHQ5gDxe7iznj0d3dtRndL94MSk
ftxZ/8cOBQMkFsj4le9awdCIpTGn/cv15LQRe63++1/+Dde4SnJOuha5Bs5R
Sc4a10YxPmJ9jMEwFsP4Zv0u+l+mHkoOIXEH6uDmE3FN1Q6tPdq11m/K/LW/
lfKtFerZS8Bn5v4wQ7XsXWH8gPFmYkrFlqqfun+I8dNiAs0RWGkn36X5ppQx
xBuak9q9e8zRb65q97QxBl6bzN+t5BAzl5gYGLExxpiJ/zEHkfPD5+pUXdmT
QvvVdcpk3cmp4H5kxiAZi+QeH+bbNie3vgVtvu7XY4yZsWb6+PX9m1NR/JMx
nO6/+Is21a7kuPpv/SnHH+icbP4d7T7af7Th6x/SP6nvUcyu/kr9m/rylTGU
NYznOaeUGHH3DjB+U6y6mFGxo/of/Rb1CeobNB5SLIsxksZKmtNczIv7Dw7v
2EPMhaOP+/VW7MXGURtP/Wor+WnV944rJP/Yfh17qjGe2jOnqUfW0Sd4N/xn
t6LzqutO1I7NV1lps459vdrOfOxeWcYjGvNk7JN7MLh/6XaN2Gr+87HVM/+q
G4vP155uTkp91eaMUz/1nbtGfGo57+L6tF+rO5hT9091znLuurmQ/Q7ML6lu
Zzy//o8LOvZlMZobwvtMOVgDn4f5k1xvlb3dg8D94DZp5Ft3Twz17c0bsQ27
h4X6uTK436I+R/ebXbmRXBTmpPhfPfKfsrQxCO5HZ4yOsTpigs1X7v6A6pen
FOK/NH/d/cXE8Os/cU5xbjHHjPZpdWR1ZXOcaI/Wpql/SZultktj3Ix1M6eJ
9uRNO+M3J7j2Z3O27FCK/mF8n3u0ii03htn9V42XFJuvjKTvx/1/jA03p4O5
HYz5M/bPnHDu52mOFDHUxtwZe/d2M3vjuYeme2m6J5a+ffdYdP8/c8SIqTKm
ydimUZ3/Vx+p+T63amRvXWNItbdu33k/zJmq/fSKzvdtTn3t1cpo+l31vyq7
/VHPXgnumaA93JzeYrTNl+xeG+5/py5mDi7zPxgPd1opmCL36liaY6HuxJAo
3+mPM3eTe36595cxqGKxxWTvWU/+XNc+MYRiCa9vZO9M9yTVPrxz5303JtnY
5LGd90Ufnb5v8z8Zy6TPSd+T8YzmtjFH/gTKohwrdGdPCvcLNV+sscXuGebe
YeYTNpZJn7a+bXOqX1KK/GU8qP4Ec2kpI7zXyv6w2jJnLMT/rz1mw2Kesd+i
+bqMFTfHqrlW1f/EeYj3+LOR/FpincX0i+13/4dnCvnG3Q9TvIxYInNqmVvL
+UBfkDll1Z/cf8xYSHM8/6avvRXd0fn91FbwDF5Lm7+2f/eIGKUsXcx+muac
P7YQDK35Z91j0L0GjWHU/2R+ELEoPjOfnXioNYr5Jv02jYE5vpBz7ncpnsy+
lSn9/8XYmfNFm6a2TXVQddG3isl/qbzzdiUYCLG/fk/ibMXbPtPK8zeOwXiG
l1vZX0hbvmvG1/T3WiOxka5Bn9WTH0nsp3ta/tSMzUXbizk13d/C/E7zdfCB
xsY91UjuxImKsUdrn7bsmvNzPTZ//Y/mqtAXoIyjrOOcYj5a94JV9pgani9K
+V6VXd9Sdm9Hvtuxkng9sc9ibsW0X1KIvVJ7gjgfn/Ff0D+1gucS0yp+yv23
xWCY3/j5RvYIGV0I5vifRvbT0vajzrdTK/jPDYrZc3bWoXyjfqsrFZMPzvgn
cxv8yzWeacRGYb5FsefaLlzTXNuWLiY/uPvhyKs8Ld7fPRXdW/HwgdiG3d9A
XnMAmAvA/XLEd+9SyH5xxpOtXAzm3Hgu90sw14A8Po9dG9k70hzK5tN1Pwax
9WKIxBK5H4O6qvhKY73uKSeX0BSF5Md0Pwaxf8aLGPvlnsvuS+P+NO4/7H6r
2kZ9R8UDun+Bz0LM/hKN2Lu0hWkD0xZmznfjL0cUk0/d/Tu1jamj79xKfhlz
56iTKT+oz5h7RZlH2ccYONfadYvZP3XrRvZS9j9xv1P3HHbvYWOY3C/a/9T/
dsOO/VZ7lrmbVubc24OxF9qXa7Jrs/gpsZliEMUiftdI7IBzrHOt9kFzqS1V
6MTyNLJ3gf+B8Xzu/7BkMTF6xuq5B5N7MZlz65NG8v1qKxDPa2yg+1n4LN7g
en818474rnjN7xvZ88W9X+zT/QbcD0B7pt/7f/jQcrCIYhrNX6E93ZxU5kDu
buf71TboHifudbJlRz4Ug+L+ytqzjQvSp2w+OPdvc6859wRxb5CjarH/LsB/
flst8c/rluJjN57cfEob9yTfjrmG9IdNUgl+3dwJxueZx8V8LvMPxT9rThnz
ZX7TSgydmER9usbWmcNb24A5DdW3tdFdO5AYHm13+sTUDbym+Zvcv0tctfjq
Hzr+ADEX7vc5QTv2cTFMYuL/VV6sZ+8v96hzvxPjX81Dpo/Q/L/GCCvrG1Os
P8z8pNoOXDMWLSV+Utyv+N+zhrLHtvK6GFLtv9rHr+S9uGIwvmXjA1evBK9h
LLc6oLqgOWvdD+eDVv47canmR1E/OK8Sn6C+Qffv03brnjrurXMEfTa15ZvT
sZYYXPeS0AdjbK7xheKUxCstAv99tezbpr9p1VL8CydVkz/F3MXiEearBU9s
bnXjC82rowy1QDP+XXOc+E583IqOr65vfsXHm/FPiCHVBvJPK/t0awty/1j3
kTWmVNy8Pkztg7/W4+tRJlI2Eh8xWyU5D8x98FgzfZtPyVxX+ifE7JkftN2O
f8WcPtqYv2hlzzb3VtMGqX/UeDuxVsaAGQv2dUf/0Yekv1R8lXuBamPX1m58
phgzc0T+1kq8+N2dOdD9/MRXaRu/jf6mbSSnq/qWe55qX7+slRyR6tDnaH9q
ZO8fMSRiSbxfsQojO/4t/Q+uzcYUGlto/mK/BfdIcq+kK8WT9WcPzAcHk295
dHfydYmnds1z7dMn4n7O5vfVVmhOunco71uO/diYZ/FVxp8Z+/g89TM3kgPB
uCHjh8yNYP4I50Jz3L3bTHy5mE8xZZ9wPyX6+E3/Ae/Q8I6/x5zB//kb6okX
NmeSNtvPWvFPGlNlPsy+dvK1GUv5Ev3P2oj/x1y7+sj3pv1h2rm5n205RtYS
Py+m1hxvn7aS32DjUjAB5rM1X8UPhWBaxLaYs0J91j2q3f/K+HcxuMbcjWkl
34B7LbkHoXsRmjP8He7nkIHkEhdDoO18oBZswf8Bhc69kQ==
           "]], Polygon3DBox[CompressedData["
1:eJwt13m0T+UaB/BtOJNzjjM44RqaLqUkObmuIalYuYZLuU3IeE3LPIZaEoVK
qUwZryTkqByUdXOtRCKkMucaImOG6HKcUM79vGv3x3f99vN9v9/ned53v3vv
93dL1wFt+hePomg9JMCFMlH0SFoUbYdpJaOofGYUzc6OopMGh6RH0XiYJW5Z
Ckc/NjmKVkPD0lG0GzepWBS1F6fAo+Jbaf/MW13cEdZmRdEh2ma8NdW4B35W
sx6+vutvYKK6h8U3ZkTRgpQoehduS4yiPLka6SdXjcLUKPoVTvIegEK1mss7
KymK+ohb8D+pRiZNEzlbipNz9Kv/MVDH2Db6MxnxdQX+/9Ie5Z0IR/R8GAbq
OU88U+0MPSTrJQlexpWSb5Jcr8M8OUrKlaXOFQu6Rq62cm6mq4yroocSuAS9
D6Nb7foGeXLgYXkXy3GKtnjQQUc5/mmujWmryXMa95V1KZRrbOn4fp3TXx/+
ueJF6XGebHEWjMNl6LkETXO1rsNV+Tbyf8r7jDhfzk3iSepWNc/ZsECeveY1
mLaXHubT5Km/WB9f44pwvXA94QrfL9DG9TFYo79qNEOhN11nuZbyLuEt0stx
8SPqbtRnMb7P1V7CtwXX3rosp0uC9/T3Ju1bkKqXNN4iuSPxDPm+4z3tN4/n
J79bzHcrfClfSgl9yvcxfjddJv9Ovj2wSN1aentOvu+syzWeTHxV8UXax/Ry
U9gbxpbSJfE+J24u13HlN+ntIv43+X/Ar5HvMu8l/Eq9fIg7Qrs/zEEvQ+W7
n/YTukt0ie5JZH9+A/lqzxd3Urex3yvifxvuKN4KPeT5VL7uvNt4x+C60uVC
d/6xYc+7fkGvTegaQIJ+Hy8Tj1+V717jj4lL4usYXwcj5Ms0hzw9fqDGu3oM
L4CRuJl67ib+q55/DOutbnG6OS7n4v8Fv8v3TUb8nIfnvQ18FXrGVbJ/BifH
z84E3s0Z8Tuiv7oDIFEfu/GDwnOkRm35/qLmdn3Wp/tCvAGK063At9bX3+nm
qLFdjXfke991V7k6G+uh53dc3y/fLHUPmvc6867JW0ue/a5by3u3eC5dIc9J
mum0c8T56sxTex5dVTmW6O1XdTrydoLK9NeM11Rnh/X4Gfc//ZyguY+2g3ke
4L0P30CN0dAu3HO5B4bnjuZD3Bjcw3wNrdmrYQ74tfqaQjc1Pa47WY1+xtea
33Rcmt4m8D7NW5N3l/rXxInhncj7Hn4hXNfLQFwvvvz0eB8WiB+mfSjcS1wX
vTRSo5caT8mVjDtsbsvEJ2mX8Jzibw/txGmwVI2l/B9AkRoH5Ruvh0T+XFwt
cRP+uvIMFz8DV+n6Zcbvwly5SuJ+KhPv+2XW6SPIp08K+1iNhvrq4V40hml0
l6EtzzjeqnqqLFcJfZ9W9wq+H8xWdw/dJzTbUuPnPVOumnQN5LvV3OYbm4pb
RDsszIGurrEaND3LxO+NMzRN9dFLnAvl7Its8TH8Ud5RrtP0mwqr6C/ir4X3
dtj3uD7i4eKHeO/n3YfLVbueGk2hn3o/4PaHNdBHDi4dl0jzoH4O8k3CdzZ+
szjRurwhzg/7j6+knAlQXfwE9HLdGd8pJeZWWZvqru8MMNYgfAfVGGkfrw/7
L6xPWPvwrhRvVOMpNTrw3QHZrnfgt0OGvZYOM1yv5xtgjjtoJliDTe7NRlhM
/4ocK/X4pp7buN6iVkn5k+E712fDd5B/h7gC/xz3bQ/tP8JzE94bMMj4t+I3
jB2Va4Ea/5F/nDnUT4yfy+/N43O/pdQYitsnrk/3Kd2zyXF/9cQlrP9ce62A
9jKUMYff1Y3C9z41fn9cF3eEGeG8oXZdvvJ0W/3WxnX22wUq4Prqb54+ssI3
Sr5D6mZBkvvWAlcEv8l1g7o1rPsKviFQkTcFJvK8mh7Ximh+k29O2LNp8TM7
nPd2WGXuR3Bn5TtG87IaQ8xrFdSR72u5svhX8FyXrwhycPVwZc3hIMy0BvvE
g+QYb54D9NMfRvN3y4zPD+35FtPOo6sc3ve41+hX4/aGs0Y4D8hTXS8DcKNp
xuOepyuQa2X4BuFqq91H3nvCuxUW6fel8P4O3xg4S79cXIP3W3M7K98F8XE1
WsE9vCPFb9K9TrPUfX/QdRPc9LAfwllKnYm4wbjucCicw/huTo6/NX2T4rWp
qHZ59yPV3N7j3fnHea2iPipAHbpG4i8CF/Yibhn/eflvgwLjveXcLccYuTbQ
3UF3jK6K+sf09wtdfvDgO4XzBc2XcGc4B9C9xduBt5h1WW+u6+Be9+oEX1O6
JmpU0WtB+FbIVzp8z/S7HGrSbTR2mO7F1HjdwvqV5R0MvUvF75rwzrkS+gjn
ODUTPQd38Y4RvybncL5C+Y7hy8s1IjP+jnfBL+Kfwdsfv1AvrXh20Wbpo4u+
39Z/S/FV2jN83Wm78lRM++NbkBF/L8PzWDYlPqeG8+pp+RJoEtPis+Eg3i2l
47lXxt0Y9jTNXtxDuNvF1eAcrmFY/3B2k3e6vKf0ccA+GGe/bKHpa+zrcF7D
TVFvMgwztlO8Lyfe12F/94M5dM/DZnPL01c5Y/XCebJU/A0d4f5OhrfVOhPe
RfL/KS0+Y2zR811l4nfrx2GPw2fhOQj7lP+c+OlwdsUVqH2Kr64ao3gviXfR
LaMbkhrv17Bvz4fvoLobcNfgQviumt8U86wUzrZyvMh7M74a3Sv8HXCFcl2C
x1031uso9+WSuSzNjv/vzNfLO7BQXAlfGd4XL4abQl1xkh5a87eC83INgEXm
1trY93JmW7ti6p3HLbAmv8v7gPiEfmZY3xz9PRrO8+JrvNNcT02Lz3w99XsR
/xndCdyTUEAzG9JT4u9j+E7m/fF+GJ0U7+Va4T+buCnvE/KUVqMx79/E5Whr
GLsb2tI3C/8f8M3D/wD9jtXfj+Z7ISN+bm/Bd9NvX/FQ2nyedmGNadPFU2kT
eF4MZ2W6/nTPun7BXEcnx+f2Zvg9OfG7+q6U+LsZvp8t+DvIVyjuzjNMrobQ
0X04iHtA7UZ6+wgmhP7VLW6sNM3/AZqcFns=
           "]], 
          Polygon3DBox[{{4905, 3592, 3715, 2409, 2408, 5023}, {5058, 2580, 
           2507, 2506, 2778, 4051}}]},
         Annotation[#, "Charting`Private`Tag$78615#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1lmtolmUYx+8d3r3P8x72rr0rC9LUgpk0g/bVGobmqag0alESWKkpqFgS
YgeLcip2gCzJbGkfSvsQJZptbs65ippoM2dusyIlRglBYR9sSPT787+F9+G6
D9f5+l/X/U5avGrBysoQwim+Kr7BhhDezodwvhzC1EwIvdkQPoHha76XWfML
27nvYp+vDeFIEsJO1s3Qd+tCuIb75lIIFzibBvMTFSGsgm+I+4+hLehs5vx5
zjfUh9DIfgr01qz5JXcG+if0GLpGuF/O/hD7i9AfONuLrnb8e7I6hIGrQvgb
njXcDXF3mLstrLuht9XY53XYOsX+G3QMJvZVPi8UT1wrjlm5EM6iI83Zr6qs
78aRmFno+gA9MzJe/wXfSva13A2zbiTm/uC89SFXiHZH0DuO87PQ+1Lz3J/a
32KVfZ5dY593wV9IrLs1se+KQTkfjP6fhh5Q7pBt0jn+LGPdFyyv839Zvwbf
ZGS3Kh980zn7A0VzM45Hsu9VWlY1Uj2bahx/I/wfcvYo9HG+Z8jzYmhXIYQl
rA9BF6XO+7OcP1ayzTeIfR01XstZJ3QTNEFnW+Kcya5im4jsJuxNTm1fMaju
Y/g3gftz0Ke528/6P9YzqccI6yTnmgxlXJfGesc9CfsF7GEidCN3bTGEWxQn
dE7GNZsQdUnnhax9US6u5Exr5WRb6tgXJZaTvOou/ElnR6V7Io19MYrMRSjs
4eeS45Nu+SkM7eOus87xCee9JePmrTrbVS2VO+VnRrTVWrLeb6HLiKsT2Xfo
uR11xoAwL2yoJ4Wxg3nzz8+5RvLnC85aU2Ps4dR2+yNOe0rOQxk6j36vQ66X
2r3CN4jejdCuOvfgzfWeB4r7JDTA34GN7dDxEavCbCFiVf5UcVcm97sbnAvl
WLnJwzNGjF/FeBTXCvimYO+jSudE+k+ibw9nx3OeJ5orwpbyNL3kftkV8yb8
KLfC8B3EeRH9LamxrLXwvBfZX9F5FD0NRWNdM6w1+l+EtmDrNP49Rb4P8t2L
jrXQ9+FbX2Ff9rAfhnd1nGOaYbp7Ff1DyLaVXSPlQDNwKM4QYWAa+0usu8o+
r4yzTLnXfDiCveuKniXCrTCg8170ncPmP+g4r74qOH8788aosKp+Ff5VgyL0
hthfE2MvaEapdppvwq3mdgffZ8hNgA7kjcle7n9MnPMziesjjKv3PsXvB9F3
NfVpR2Yj989B+6GXiOdYEvs045reWHSOboK+UGF8qkeOZl2brjhX11S779Qr
Z2K/CCPSqX4er5mp/k3doxsiniQnefVLNuc5Kv+FpcsI7oY+EmeUZtWC1Bhb
mPo9Uow9rH/DqcvwjEJ/4ntRWFVMJc9M4U21V53VI5KRrM6+ZH89+x3QE8pt
7MHfs5bV3B0hX1W1zpty3x1z+nniN28fdHbqXpuTeiaqdlM5X1bteSucSaY7
1kL9K7y/WTae9U6r3zazn4l8Z9n4Gor5FK5Hsu7tpoznmObZisQ8ByKu9J6q
t++K/sgvzQHZ3gZdXus6at4I80vZryau4azf7CvvtXRrXoScz8S3MOb/AWhP
wVjQO3J3av/ugS6p9YxS37XFntIsmlKyHvnQEnVKt3pTM1AYU/+oX9SbD8W5
p/nXFt+gzYl7Rr2jHjmeeB6dSFwfYaYaOiM1Ru9M/b4Il/qfsjW+p68nxrbe
5MOpa6BaHC55FulN1Zv0fWJbA4nz2hf/D6jX5JtsjUbsvZS4xqr1+og/4fAX
6P74Di3VTMRuO3QXst/FvuuPdsZiv8xvcJ224Nfc1HWZB709zkbNyP8BJnhX
Ow==
          "]], Polygon3DBox[CompressedData["
1:eJwtlUtsVVUYhXcLl3POvb3n1t5qdUANSkI1UpMyNSkoRF4SwWBESUxQASEB
YmRAJOpAKzbRiQqxFAImvAc+wqu1LbmAxKitLSm2tBIEjQMTE0gZAGHAt7rO
YOesvf/H/h/r32fGms0rNlWHEN5lTWX9WBNCzHeCwx5wkg+hF5xEISwA768P
oVwM4clcCE/UhbCLfRd6b2G8txxCO+sqDj5LQ1iCbCO63diP4XN+3joXkXek
tl0N/qaK+7F/A/xFbQgH0f8F/UoJH9gk4FucnSoQG/sNxDKWs78+hHPYt7J/
vOj41+JrPetMjePt5K4F6E0BN6DzFLqzWY8Uvb+M/3RKCA+DG9H9jji2sraB
x/k2IP+AGP8Eb8HHOs5/5ayJ+E4S03tVvlP12pJafwzdw+Be8j0I/o/4u8lt
cb1tVN8K+27kzxFbD/tPwWV87ga/ic8z4KY62w4T74fgMexP43clNvvRfwad
O9x3Av3b4DmsbeCfsPka/z3oHOH+i+g0l2xzbxq1SO1LPVAvhtR08AHkRfAN
tldKznc98lFq/DGyIWLvqnYNVa9O9uci97+b/K+X3bu12Axj+yUxHK02B1Qv
xaTY9mDXT//a0B9WP1mfgCucbapyTyLwDGxGuGuWVp19TvpG/6Oy830I3Qv4
7Kj1ferN/+IveHnieMSpFRkHxIX5ieutHqgX/6LzSskxKlblrNxnlcwNxSQ+
LsZuhLsvs5Yk5qtkqmlT2TGpPl8VHGsvOi3IatCvST0zmp2jWXxvc3YJ2VL0
DoA7sG8klrucnS67/8q9M+PPC4n1lf8y8Al6NZpzfyciz5tmQzHsLJgz4s65
4Prt44492DxPTIfR/QH8dGSOiac/l1yLDdn8Vsrmtzgr7hZT56Keq/eF1G9D
hbWrYHvNSkNWz0bVn/t34P9R8N+x5/keZ/9kMyauN0eePeWoXFtiz863sWWK
8XvwsxifjTwvmpvBB8w9cV79f5Wzd5DfxP9r4F5s2iPnq7w7WfuqfNYHnln0
26EcxcnfOLvLvoC8H7yONS/neZgOfil2fKr5RvBc7pg9zTHNA79OzjH7HciO
Ef9ZYvor9pvYnvFNtanNu57i+yj7IhwbzOqp3MaD39tViWXKSbkNxI7tPDq/
gxcm5ro4uSjxPGlW1X9xUTOsfJW3ZvtS7FnRzPyhmc979sSpVnArPiZyzmlu
xknxXHwXV7ez2rDbG5s/12O/zeqperszex8Ug2ZInBA3xPn6om3UC71Z8qX6
6z1AZfL9Fr+UGyqT87I19fy+yAWn9O5yx+2ce6Re6f8gvr5PjgN511vxXEN2
hHwfpMYvJ34z9d5NZ32O7DEu6CuZc+KXeNYFvhZ5/tTz45xNTT3bmnH15xD7
kdj125y6JqqN3hzV7z5qagcB
          "]], Polygon3DBox[CompressedData["
1:eJwlj69rQmEUhl8V51XxTr23GlzR+z+YVwYbiOaBiIJhSwZBWBJREC1rIlhW
rIIwxF9BLMJ0poWFpTFYs6ztudzw8J3v/Z7zcU669Jh/8EuKQxDWFnVEWoWl
Jeyp66Z0R30Lp5BU4T7BG3E24Y+++0sp50L9jZM1pD7Ogqzskxp4r5CypQG5
w/sP3hR/ifOWkLYM8k5+hBHODW6Pnk/uT/yxw3OS0i/eNbMMeRvjfOE+R6UD
mAEpg9clq/E+Izvjb1hwTFakrwAvZFnLm9GdtQPGhbdHm+yD2cTuVf5oce/A
nB47JlkQsL3drujpGd4+7l7/Vb0uhQ==
          "]], 
         Polygon3DBox[{{5141, 3587, 3588, 781, 2391, 5038}, {5032, 2256, 708, 
          3258, 3257, 5120}, {3696, 2265, 2264, 3695, 2495, 2496}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1l2uMVdUVx/c9w9x7zrncB3OvJj7qE60WKWACaER8NK1+8BVjJOknnx+q
oKXFASugKI6vGsEHOqKIr2h8YGQEBkaYkYFBMTJUoNGairYkFbQIVHwG8ff3
v5vcm7X3Omuvs/Z6/Nc6x15146U3JCGE3xZCaIF2Dw1hL4w3yiEsht5WCmEA
fi0N4VpkHoCe2QhhNPxnoNOhLcUQjgiWHV60fGfF/Fuh3W0hjGe9Ejo7C2E/
em+F7kV+KC+dh85x/E9qDeEa6FbePQz+Nujz/Bfy3u15CIPDQliGfQuaIUyp
hnAk73mG54/VQ/gzMlVkbkPvLvhzoBPYr2d9gPVHDcs/gezbue86ucW6C0U/
Owf+h9hwXcW6pFN+aGLTH1nfDB2A/yfW78Pv5h4nc/bvnJ2Y2z8zsOuFNvvh
UOwcBv8zni9Cfgz3HQ0fsfBIxWfX8Hw1/8kwH0amzPorbJiAnh75ivXNyC7A
/i94/zLoech8Hfk9rK/jbDvyJ7A/G/6J0HPhXw+/S75MLXOfzrP/V7z7Ecgp
9ivw6Uj0bmA9vBZCHz7iCmFUzbLKB8ldwPl7WZwC7UWGcPzsp12p7/g59D/8
D2DDZ9B9/L+E/z/lTO68+JE7/Ru6L3EM5mL3L6CPK1+Qm4qPVkCfrJt/Ws35
1gVvacNx3IKuY/DtQs5sRM/T3OnyaOubGL6U/WbW09D9FOs53H0zZ2azHoWe
t+DPa3PcD2s6JxT/8eioIPcJ63ll27Kn1bFZiMzh8MciM7Xqe01C9jv0PcHz
76FvJPb5Vp49x343+0uhf+HO98K/BXoRZ3by/H3oisw+nIy+oez/yXp97lgq
Xm/mjuM2+K2560s1qTwbxL5O1RH0HuT3p66RPtkMfzn/V9psTx82F+Hv576L
Esfwl0XXxix8eJA7XsjZDYnXqAw5OkuceZDNssTndVb605JtmlRzLNdDryAu
c+Bvwp/dZd+3o+Ta7OdcF7acUXUdPcbzG1jfwf1XQyfyb0f24ty5JfvGpvaX
9MzMnNdjkekouEb/ULJdH7G+nvVbiXNd95UdmxNjk3Dp9w3TjdjZnTm3Zduq
NufdVGx+GRv2po7pJNZfFZXc2K4//A7oSs4Ogf273NgnDDwafhf/S1LX/nD4
65CZCe1hPyNzfF/i/19k1mY+87dgnc+nXp+dmi+dx1R9z9Ow4c6C/TatZExQ
votfjbUT0Lek6vucUfT9zkFXF3KXQZ9Kbc8XMf6K4xb2u6HPIjOe56eWjE3C
JVHt1ybGQ+XyEOj8svNb2LiQdV9iO+V7xUA10xfj8Tp0MTLvJMaiwdw1qFr8
Te7cfIj19oZz8Dji8kDZ57ZAa7lrWVi1ARl+YR0yq7jb9IL7wrvIzGBdA7vu
Z78kcW/YCv+ugjFhZ8Ql4dPD2DomNSZ8iMJN8H9VMy4p325H/uPc/UA956HU
OHxLaqwWDkyvuKZUO1eiYynrumxTLuOHcfAxIfwVO79B/v7MeC+fqpeoHyon
hR3qicIT4cpaYQrPH6kb23coV2VX5vV9mXP1dM4v5r0L6vbV6roxv6IaRKa/
5t50fMN9QzbsiDUuTJ4JHZLZP8XMGCQsUt0dXzM+P1p3XObgg3FN+/98nh/F
+p3c9a78VywUl0ty3/2OgmOs3FSOKm8/iP1PmKl+1V5w/agXKi7CHPUh9QLF
+q7MMb07c+7INt3t24ixwlrlkvCpH5lDeTgCvYdUnB+yZzR0fpttGVczHgkP
FC/Vv3BAfOHFiJir7zWNQeoFiumYovFKNaVZRXgmW+YWbI9q4+ohjuly9CbY
0oP87tQx/RK6qG4fqH8Ju1TP2mu+0ln1XN39poLnkWlN18CnDdeOZNXnRkY8
VO9dzpmrOLsBfq3F64+Vf7nzp5NzA01jt2YPYeyuGKMDqfvpj9CWmAPKhXVN
zzT/4L13sp+C3g5oe2bcnp7ZRtmqmuxE7h54LzQ8j12JDZuGGXuE1epnl+f2
g2a/XuQmqv5i3grrRtZcg/3Ijef9p9Tcr3X3FyN2CcPm141RT8Kf0vSc9EHD
+lVD6sOaP/RO9VLlfh07t7Mfgc7B4HupZlQ7PTG2qknFbkzEOa1XIjM/9bvk
S/lXvtUsqpxX7m+Lc6lybHTq/nuh7G0aszQv9ce76E7tqWeHttRxUC6p96j/
qQ/q/l+nxpxvUsdGMToY5zXNxoNxVpL/NS8Jo5TDs/HttMz4c1PmHin/z8qc
73tiP1SP1js102lGkq80u22MOKPa7k3sO/lNOK8+r/rXjP0DtrxaNUYNRr8K
u4Xhmg1aOL+H9/VWjW3qu4rN0U1/A2jmV+3qjkdGrBfmayZRHigf1Pd6S+5N
/581emOfUs7LvsfL7l+r4hwyO84/P89BZcdMs9OE1NhegP661TWuWte3wEHO
vs67zuLZa/CWpP6e0TxVTd1j1ySew5TnwqKBmnuz7Eygs+B/jkxP3d8Yiuvt
mikqztWOsvuRbND8Jhv1LuXEnjg/aXbSHKhesS7zDF9Hd1/8dpBvhcOaQ1aW
POOpV0mnam1JtH9f7L3qu+q/sk3+0eyh+XZnnGk1r+m90qvvFM35B2Mvlf3K
D9Wv8E45pG8XzZryi3JWfMno+0T5vCbWgs5r9tOs1BnveFFq/yxO/b2kPD8E
OqrVuKd6U59UzxBGa25U31H/EZ6rfjUDaMYQDsyLvV31oPzT/KDvrWLuuyu2
wnDNhMod5cbhFeey+oK+05Tbwsy5Jfenjlhb8u1g/OaRT4Qtmh80Vg1kltUZ
7TVXrkg8D6nXyX7FT9goXNT30U9jsCFB
          "]], Polygon3DBox[CompressedData["
1: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
e9VPwnfWfJYP8kUxVi6FQb3HdkfG5n/8Y7dM
          "]], Polygon3DBox[CompressedData["
1:eJwl0M9LVAEUxfFbQzWaOWoSFIEWrkowFyGBTttWKSL9Aa3NCMJcFZEoBZET
gyRphCCtRLA0Q41opKEEldpYLSRoE/1SsU0Z9RlmcXjvfu+55973jpy/2N61
MyJqaRc9q4oY2hdxjQ6pZ9TZ/RHpZMT6nohEaURTdURneURPScQVygl46nkA
L8Xv7o2Yxh6ZneNfktNsvoW69Vf5XvJ/V3+jQfltfB7Ri9+gLr5LtK7/M1m8
5RzPOPZbPbwj4jB2oXAHtWGtlMfSfJPCOtSP3XHC3S3qGr4+yuELNIotVRbv
u+3mqbKIZfWsu0/tjui3I+GWab5l/bJExIasBrNX1ZdlrZidsOM0llWfTEVU
2v9AP4/fr7AL65b1Bj9DeXkNWMr7FN8m3wu+g/5LWkYr/kXugDuO8j3Rz/Bd
pzWzI5Sxr4o65WbMfsLu6L+jCnfWmztGz83ew3Iy3/P89T1fsbNm//mWZnxU
fxHbxv4ki/+08G2N3tvph94kz7A9r70/LOwx91HeKzs+u/WW3Js0hK3SvH6W
b4a/judDwYu9xVLuO46tqX/J36IVvjG9/+GfYWc=
          "]], Polygon3DBox[{{5024, 2305, 2304, 3716, 3482, 4794}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{1842, 1, 1584, 3780, 16, 2420, 2421, 2422, 2423, 2424, 3771, 
       2425, 2426, 2427, 2428, 2429, 3727, 2430, 2431, 2432, 2433, 2434, 3773,
        2435, 2436, 2437, 2438, 3737, 2439, 2440, 5031, 2441, 2442, 2443, 
       2444, 2445, 2172, 1525, 2491, 4, 2489, 3, 2760, 373, 2, 3355, 1327, 
       706, 1842}], Line3DBox[CompressedData["
1:eJwl1FtM11UcAPBTA+GPiSjifSkKpll0MUvJdPNSpr7oZkx03jVBBTK3zEs0
q+WmUywBb4RXVPCCaWjKrNxQn5pvttJyKbnWUh/U1rzk56yHD9/v+Z77jwPZ
s0snlTwRQijzozkRQrJ8vbgqNYSPWMRiSjiTGcIvKSF0iXl6CAlxKtfUeotr
1ZrE90nlUwpoVr9vzNvypxnL79qV6p3lI9lMNb1Y5ywt+no5ywZnqWAjX/Al
C4wZ1DGEcQ6bZ0yVPNEmhDfkKRkhXDR/hPUnaF/vYG5SCH+rTdXO0Z94MoQP
zL1tj2K1n/Xnqj3S/lB7uHyuNWuNWaP9o7UL1f7TX61doy9LrU7ex5iNvku2
c013roHMoIi/nOEbYyrsWWt+X2NyyKUfz8R7WbO/OIBnGchzfK3+vJjHC7zI
LrWXxJcZxCscVxssvspB53hNHMJQ8hnGHee45BzLjZ0Wv6OzLeMkhRRz15jT
5u+S7zHuO3EIOxlKYEr8PenLF1s4x3ma1F4XL5DHRHZzK95f3zz5PflR69fL
z/IDmSznW/7Rn5YWwmVbVTpjFdVsZguHzN0qbotvwJrbxRq+ojZS2yHujN+J
3eyJ66jvFevYx34OcFa9XmyI3y2uz2GOxDX0NYpH4++B7+19LH5rmuI6zpvk
vNPljfpmiDOZxWzmMJd5zI9rGvNufLcUURzPbo+F4iLWyeuMWSwvoZQy3mMJ
S+Nb8s5S27uL77PSeyrznk6qVWmni9PUCtQ+1y6wVonzDdOu0bdM7YG/g5+8
82y1h/YrUkuWL9V/U7tQu9yb/tPfyVXt8dqt8f1bK8UZUkmQRlueoh09O7mf
8eny9vF7yDPEDnQkkxPW6CRm0ZkudKUb3elBvTFl7nnVnsnx7vIl9IzvUV9l
/D/C6fi27FEl3nDHHuJbdGe9ej9xG7k81D9ePKieI47jgdpn4hq1tmJf/lCb
Feep/SZ/M+4R7y2W0oZP+DW+Ud9lhXGt2qdYTTLvsInj5k0W/zX2gHFXxK3a
3UijVbtavY88mwr5dbWu8jFsYTSHqNM3UzxmzVHi/HgXGuL7o5yPuZzy///u
x2OWut8=
       "]], 
      Line3DBox[{2493, 6, 1528, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 
       2256, 5032, 2257, 3738, 2258, 2259, 2260, 2261, 2262, 2263, 3751, 2264,
        2265, 3752, 2266, 2267, 2268, 2269, 2270, 3725, 2271, 2272, 5033, 
       2273, 2274, 2275, 2276, 2278, 2177, 1532, 9, 2766, 382, 8, 3263, 1128, 
       381, 1843, 2494, 7, 1586, 2493}], 
      Line3DBox[{2499, 11, 3452, 1533, 2279, 2280, 2281, 2282, 2283, 5045, 
       2284, 2285, 3754, 2286, 2287, 2288, 2289, 3755, 2290, 2291, 2292, 2293,
        3721, 2294, 2295, 2296, 2297, 2298, 3757, 2299, 2300, 2301, 2302, 
       2303, 3758, 2304, 2305, 2306, 5046, 2307, 2308, 2310, 2016, 15, 2502, 
       14, 1924, 390, 1845, 2501, 13, 388, 2500, 12, 1590, 2499}], 
      Line3DBox[{1352, 30, 5018, 2332, 5048, 2042, 2017, 2228, 2151, 2077, 
       2060, 2136, 2061, 5029, 2204, 2238, 2237, 2205, 3744, 2206, 2182, 3742,
        5035, 2184, 2183, 2185, 2088, 2024, 2186, 2025, 60, 4088, 437, 45, 
       1138, 415, 1352}], 
      Line3DBox[{3859, 180, 2419, 2046, 2026, 2089, 2189, 2188, 2190, 5149, 
       3770, 2165, 2224, 3769, 2223, 2225, 2226, 2214, 5053, 2098, 2240, 2099,
        2131, 2155, 2229, 2035, 2217, 5052, 2040, 3886, 210, 1794, 690, 1495, 
       3873, 195, 667, 3859}], 
      Line3DBox[{2028, 196, 4900, 1781, 211, 1983, 693, 1897, 2564, 212, 695, 
       2565, 213, 1800, 2566, 214, 3447, 1520, 2363, 2051, 2231, 2166, 2066, 
       2193, 5049, 2030, 2103, 3722, 2102, 2148, 2127, 2128, 3763, 2063, 2191,
        2062, 2029, 3730, 2093, 2124, 2092, 2101, 2100, 3761, 2047, 2126, 
       2208, 2207, 2028}], 
      Line3DBox[{1521, 216, 2567, 217, 3353, 1325, 699, 1898, 2568, 218, 701, 
       2569, 219, 1523, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 5050, 2372, 
       2373, 3740, 2374, 2375, 2376, 2377, 2378, 2379, 3749, 2380, 2381, 2382,
        2383, 3767, 2384, 2385, 2386, 2387, 2388, 2389, 3768, 2390, 5038, 
       2391, 2392, 2393, 2394, 2395, 2397, 2167, 1521}], 
      Line3DBox[{2571, 221, 2572, 222, 2970, 703, 223, 3354, 1326, 705, 1899, 
       224, 2573, 225, 2485, 2216, 2113, 2132, 5042, 2227, 2244, 2243, 3779, 
       2213, 2112, 2050, 2212, 2130, 2097, 3732, 2111, 2222, 2034, 2096, 2125,
        3777, 2095, 2033, 2192, 2065, 2187, 3776, 2064, 2109, 2108, 2049, 
       3775, 2032, 2110, 5055, 2068, 2169, 2069, 2195, 2171, 1524, 2571}], 
      Line3DBox[{1140, 418, 2452, 2141, 2087, 2140, 2147, 2146, 1140}], 
      Line3DBox[{2090, 648, 1482, 2333, 2334, 2335, 2336, 2338, 2090}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{3781, 1124, 4044, 1346, 5283, 4255, 1806, 4256, 2579, 5016, 
       1538, 4744, 5324, 1900, 4046, 5064, 5153, 4048, 786, 4047, 880, 5154, 
       4050, 787, 4049, 5197, 1127, 4258, 1348, 4257, 5234, 4051, 5058, 5198, 
       4291, 881, 4054, 788, 5242, 4053, 1600, 4056, 5243, 789, 4055, 1131, 
       4058, 5199, 3897, 4057, 1912, 5155, 4754, 3898, 5015, 5005, 5333, 4259,
        3899, 5006, 5335, 1603, 4060, 790, 4292, 5237, 1606, 5047}], 
      Line3DBox[CompressedData["
1:eJwVzzdOQ0EUheFLEhJY5JKccUGJoIE9EDZASyrIOdoSOwI2gITAiAy2SaKG
BRAkPhdHd+b/z8yb1zY5NzpbFBFz8lYldRHvkq6OODRT5nR9xIv1SUPEq05f
bcQBXlYTsW+O4F+FDtfL7WGl3HxFxDPWg+1iJVhaN6P7gXVLnh90d14u8CP+
0npHP2dmJKfTpZvitvFi92yZWe5csnwy4d06m3gRv2G+2nfKEz/h7KPukyT4
M7OycI9vDslpwet16Ce5deeDXzNv7Yf5T70HnXadF1nlHs0Z/9lm3nPXujfy
xw3oHzuXN6fkCr/TaS38t5xj/fyv7oq0YLf8OLZs/yNL0ozf4GN4k/Ui9i0L
0mhf7p3/05JFkw==
       "]], Line3DBox[CompressedData["
1:eJwVz0cuhmEUxfErEUH0sgBTvbePD5/euzC1ACb2oKyAJdiJIQMkRPRe1uD3
DE7+595z3jfPrdveXdnJi4g9+iuLWKuMyFVFrGNtRcQqPplX8Kgm4ldniR+x
W8YanUW8N0+URPzI583D5gWslp/4bo6fpW/5NM5QlexQNsVP0pdsHIfSv7BV
Vqkzxt/ZjeKnTjb56ogzeT5V6OTSm+hDvmU3xA/qDWO5PJvuSDt619nUyfAD
OgNYptOPD9RHB/I3vR6+l0rl3djtxlf7K99dU7H9hW6X7NLciS/ydsyYO7BI
Z1+nLd2R7qJnnWZsSZIV6jTxjemdshs8tr/FU9mLf/W6+Rkf5RuyPj5n148F
Og2653x9egP9A6oPObg=
       "]], Line3DBox[CompressedData["
1:eJwV0LtOlFEUhuFlSyEDcgOGOMhBFKw5ydFCBOQcUEKgIWEmMZECKKCBijug
oqHgEhR6wiWAggeInGeYKCIUPFO8+df6vndn/9mPx9M9qQcRMY/Mw4ihoogL
DKM0EfGmOKL1UcR2SURdYcRv+wfdJcbwhNMpa+PU64/NE/IMJlGm/6Ubcf6t
roGTlE3prrAqz+qfynbRxWnkZHUpVNnXODnOhn4P3bImTk7/R76i/2v+iAr9
V/RwXnHKzYX6zziRVdq/oawgYsf3kzOn8pn8XfZ9vLOv85udv5bP4gZzeKY/
dOeovpfXwvknX8B/LOI554jzntOXfz9OtWxJd4tlJHUvZAfoz78fZ9qZM/MF
NvUJ1Oi/Y0DWzklxiuRfkJGdo1b/A4PmDk6aU6zfyr+t7BIv9T8xZH7NufMP
90mAS54=
       "]], Line3DBox[CompressedData["
1:eJwVzkkv3XEUxvFjYSeCCmqoIXZWfQ2u2aoLxNAEiSE1NcSQGBJDosZ2yxYL
78gLUHMu13CpNunnLp58f+d8n3Pvv3pg8stEVkTMyr/ciJ/5Eb+kJi9iH/cy
KYz4y+1470o1t4099q8fIt65H+b2gogtrOLT9t38nXlT/uisY5vOBlbqHPJr
3hd2q/ims4yt5hX8zH/SW/K+lUV51VnAFp0T/sX/VOjM2/22m8O0TjZ3LAm+
2b5cZ4a7kWl50Znlr7yb+Gs81bnEOvNZTsSzzpS50fwdy/jJzPfKgdsnv/2k
M2Yel1I+ZdfJfTM/ciPY4H4UP/I73HDmW2VIUjqDmNA54u7dl+gN2J1Lvzzo
9GG9zlcs5nsz3tyDST7pbtt9l7mI78QOqfX+Dz5JSX4=
       "]], Line3DBox[CompressedData["
1:eJwVz7ky3wEUxfFrLVLElhdQRWJ0CBHEFjP2YIZBgr+eUiMvkCbGvu9L4zHo
eItYg8JSMIN8FN85955z7m/JTYy0DydFxCie30ZMZEVMoigz4i/2cyLG3kUU
mqf4T5jGJ/sxerIjGjIiis0z/GfMotS+7O6E1ntGo06JeU4Wbubpe/ln3il6
eU06L/w73CNPXiY7Q7PskD541h9+kv6CzhfeOfrsLTpH5lH5oiyFt0TLeRf4
YT9w/0uebF6WpdIVWiH/ae5H/puIG7rKv6VrtPL1O932ux3gtXpXGl2XpdMN
WqWzIv9HB3ltOl/Nm6//ZN+iH+Q1vEskeN91qs3bsgL7Dv2os8e7whCvXafW
/Oj947JdnW/2a3TI6ugAf0F3Eb9xj279TnkX/Q+r20XY
       "]], Line3DBox[CompressedData["
1:eJwVzksuw3EUxfFroCjVt3iMLEBswWMFlZAYKKkgkap3NGIHRuqdSFiCgdeU
gSlhE1gCEj4dnJxzv+fe3/8/WFmdqLVERJX+uiMuchEH6Yh9Pp2PGClE9FI5
E3GTjWjo5uRn3Sg+K9/ih/i8/IFf4kX3rXgFa8Pa6Y0edZ28gzYoSQt27uwe
6I68M+w2Ye7hbXxJ/9O812/yYzvLWLuug17kkn8v8W83XXa2KEVPbqr4vb0+
3Ynbmjlp7jeP6T/trWDdPE2ndtbNX/J483/trpkz5ixNyXleTkXk+LJ3NrEH
ewPyOzbk7hrrwlK0LS9iZ96uN7+FpWlH/rXf0J3rds2T/JXXsYRuRr7ybkHe
piLtYf+10jRP
       "]], Line3DBox[CompressedData["
1:eJwVz0kvg3EUxeFbM10YY67EdzEv7UmIqSltlBCxY2vHylg11tRYGjd2vpIQ
Txcnv3vPOfef9x2czU1mExGxTA3NEcW2iDKe4xOOdkQkqd782RrxiNstEQ84
oDMi+2uPqLP3Y4ruzVs6d1iQp/Q+3NZWOuY+nQ35M00nI3rta/wJzGDJTUl3
XX6L727z/Dc8kN3w8rJrPOPXYBP/ia7MOdkl9nhvVT6OXbJv2pX98HZw0d5O
1bpp3gVm+EUc5v+6qzJ3y9L8Mi3RvKyLl6Msness8As4JFvhjbldwk285Z3J
5nRO8dV/JPAF92Un5hnZMW5UvpXC3Cj7ok77kX3Pe4c4ZT8x/wPXJTix
       "]], Line3DBox[CompressedData["
1:eJwV0TVSQ2EYheE/BAYNhIQNUMOwDVwGtwbvkI4Ka3BZBhZ0AbACZAGsAfeE
8KQ4835H7r2ZSfXoTOd0JIQwT8PxEPIrQyhIhhDFE36vQsZf8uNVIQzK8txR
WQSH+F2bCJ9NhDBmMyCbcgfZJObhtfwBq/hC6rMJnk+6s+5+qrW5t7mQ9/B/
lKEVeQp3fCdhf67v5ifcGeqN2eK2Po1n+k79sufSWCn7xS7asonzpzYd/JLN
D1bIvrEON23K8cRmVN8m/6KY7BPbacMmpR/Rt+Z63Zzf/pl7D13J7/gy97Fd
s80HlfLv2EI1Nrc2R/pG/i230b/ioq4J132nWHZo08C/UBH/jCW4pj/Q3fAL
nnnCR6qnVd2s9+/n/jvbf31hRY8=
       "]], Line3DBox[CompressedData["
1:eJwV0DkvRAEUxfGrF/tumBnJTEKloME3EIWtJaEVUwgxIcZWIQhRaxBLQcT6
AaxDJaH1UfwU/5x7zzn3vZeXnsgNTZdExCR2KyJSVRGdSOPWPkf7qyNm6VRN
RE15RI+9gF7c6Xzzm1Er2+Kd6HbZx81jqOP/0kvekSxrzqCe/1wZ8YID2YZn
vZlf0SC7Lo1I6r3bN2V5twP2edoo/3KzYl/FMEYxgiK/Sb6mt457t1m6gAxy
/98rT+vm0YZtnRvvW5QXvS8h/6Cf2JF1u/nRa+Gf6pzhindML3COVtmezgz/
wc2+OclLlEUsm/vwyC/oDpqXaEr+pN9uP0TH/3/CHxOUNRI=
       "]], Line3DBox[CompressedData["
1:eJwVz8kuQ3EUx/HTLQltWVh0I2FPWtOONxA7rSFpCCsewiOIla0hsbZHRNBE
TLcoCRJTqBDDA/hYfPMbzjn539tenh+ZS0XEJPLZiHQm4hyjzRF7aR5ncq0x
4lZ3ypdbIo74exTcdMs9dMVuF3+nX+XbGiL2acbNob6jNeLJLNFV8cgP64r0
BRe6xO4lfZZTZseYcpvIB/r8/1soYE0uNkW8mk3LM5jFiZs33ZZvKtF3XNnd
lvvNHuzUdVlvVTHGf2JXP2D+wZf4cbroJuc/vviKrtP8h+/V9+Gb36Gb+hv+
FzVvXaOCupsFswn9ujwoD2HJzYZ+mc/RP2doQEs=
       "]], Line3DBox[CompressedData["
1:eJwVz7kyQ2EYxvGPyihiSWxRuQWNGctFSK2IEEuQWC6BwgUYyx2YoUVFYUkc
EVvBKNEomNFgNPid4j/P+Z7/+37nnJ5cKVOsCyEUsN4awkgyhGxTCOXmEEbl
mW4/FUIC5UQIyRapy3FPGMODLoUKX+Gm3fGs75Uv8sBupD+PMXMos412+XH+
yDnSt7mj32xe94oJtOsuuDezA9ykLvJtU7JP18FX+TSXwbLuN96VfzLPXaIz
nou/TfeOAnbMN6DGb3Azug/MYkXfZeeKm3Ne44tyV7/p+Vp/LGuoetee/sRz
yUza3g1/6jyon9d9YiF+r9lu/pav54bx6PzFbfuvb3nvfMcPcYvOP1jClvtW
7f8D7RtETQ==
       "]], Line3DBox[CompressedData["
1:eJwVz7lKg2EQRuGxNDFmMYWV+xXoTSiIir2NlRuJhaBG4gJuAS3sxSZgJ5i4
b7hfgKBCGm9FH4vhzJx55+P/uyeL44WmiJhQB20Rj9mInlzEaTqinImo4RO3
nI9o1j/r67hqd4ZLbubkh3ER1/i66pf/4RIyn3hiPrI/N1cxibVExLrshb6X
e/F2i/5XflC+Ay/NGzJXOC+Twmm7Pa7dfh9HcIYbxZLM5v+3qS3VxbWmlLtX
7/fZX+u37W5w1l0a3+xucYcf4L7cvXMZ7ls/xe3a3ZkXvDHGlbGQ9E98RZW4
Ti4rk5cfUivcvfnD/gFzqsEf8sfqDyfxNUM=
       "]], 
      Line3DBox[{5027, 4751, 4750, 4742, 3892, 4926, 5196, 5126, 4041, 4790, 
       4791, 4789, 5044}], Line3DBox[{5028, 4043, 4743, 4927, 5003, 5034}], 
      Line3DBox[{5036, 4781, 3877, 4782, 4903, 5230, 5132, 4242, 4738, 4946, 
       4737, 3878, 5051}], 
      Line3DBox[{5037, 4785, 4784, 3881, 4783, 5297, 5133, 4306, 4911, 4910, 
       5041}], Line3DBox[{5040, 4907, 4950, 4908, 4286, 5056}], 
      Line3DBox[{5043, 5013, 3890, 4658, 4657, 4039, 5127, 5298, 4788, 4749, 
       4741, 3889, 5054}]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0EsrhGEYxvHbQhmnKM2GcljgA1DyBYSNHHJcjUhibDQxWKFsJYcllqSw
YTE1lhY2lCk7JbGXWVj5zeLqfz3/+37et57W1MpwuiwiFiWXiMjWRPRXRizh
AG7gbUPEk15XHTGCBRmVNr6ee9OTOIWfMsRP47c08ins5Yo4K03cH7bjoyzr
5VURacz5X4XexT+7M1gbsca/OK/jK3ZL0s64+YhekG2zD9zBZt8Y1c/NL+19
6S1ch/6jd+Jviebf2OO8iUU5dj/snmDe/F3f4vvszOin/Ji+b3ZWegPuwPyK
q9AncM5sHiclwS3gjd1VvMUL+xn9Gg/t3nG7zvd4w+2V3oI/cjfPZfABjzHr
Pf4BOBg62Q==
       "]], Line3DBox[CompressedData["
1:eJwVzj8oxHEYx/GH8uf+MEgZTJcJK+rUTTK5SflXJ6UbRO6yya1uoUwGRgbD
bWIxMlksFjewMFBcbhHJ4HXDu8/z/byf3/f7y6yWZ0ttEVFEMhkx2RuRxXZP
xI3zkTzvj2g3p9MRKeynIq6cL81rfFImUNFv2L3gvhIR3bourOsP9TX9iXOT
65QdmNIX+FNu0V3D3l6QL5jHM465Pbsz5hX7P/a/8as74BpyC9P8Mt/kPpw/
5bus2lmSZ1zOzpv+FXfmHe5aTuCWH/L+uHkMaTtVXdnOqO/r/vtJ94g/3S5X
lBnunhs0Z3UNWcCAfsQ9dfsV/UPrW/0c+riMt/Kt++2UsIk8l9NX8A+Qrjdl

       "]], Line3DBox[CompressedData["
1:eJwV0L9KwmEYxfGnNdPJrZaIhCDpBqKg5gjcwkgw0IZI+jMWNJVBQ1GDodBQ
s7UYdRHVHUR3UG4ZGH3e4fB9zjnP+/7+TFYbpZ2RiChRMxcxlY9YxONsxMZo
xBdVaFrex678gXp8jX8x1/EZ/3B2LOJEt2t+N+9hEXOZiGU80x3KxvmjtOPc
G03wZX1b/4mn6Zysid98Qb6Oc7J97NOFbp6/xCE/Y+cAF2Rr7vygtm6F76R3
05/rV/kW3skydu7Ts3Q3sq5uM307DrCCv/hD2+Ytez37r+YnXPKvrnTX9Ki7
5f8BtU4wCw==
       "]], Line3DBox[CompressedData["
1:eJwVzr8rxHEcx/E3Bvk5yCCbsDhcLs4xshil25iuTEQpM/tNyiqlK+x0g78A
35KZ7sItYrofwxXlYXj2+r5+vL99xgr7G3sdEZFHcTAii2Q4YpHe90RcD0R8
9Ebc9UWM0CfZjWxIX+PLtrd8CtOYwWR/xKx8V//gu+K2ihe3c3xad6h7tM0h
wRKWUdKt2zzj2Gbc3Rfe+G+6pV+xK/DvKNosyJuo82f6lu8J71uze8WpTZX+
yI/0v/TTW07+97pu3bm8k+/ClNtN2aXuSp7nG/wobdK624x8238OkLNry1b1
8/IdeoE/WL4y4Q==
       "]], Line3DBox[CompressedData["
1:eJwVzr0ug3EYxuGnxpZaLJWKWLpyBh1I6UK1o0Sbdm4lBp1MZo1YmWjZOAER
qc/uRGImehTqeodf7o/n/r95l5p71U4qImroZSP2cTkT8TkXcUHX5D4d4D4T
caSfn47IIa97pE/Y1k/SES/8M6Zsl+kKim6z8pv9K0Yo6dfxoC/TDSzyO7a7
fD15K3/YbvqHd3rn9pVkFHRbtGjTtT3AifuqfMz3UOF/bFr6qv03X6O/dIyG
+6nbue0ZmnKfDlDSt+Vr/goj/s+bCcpuh/Kt/ib5V9/MYwFdDPEPRuowLQ==

       "]], Line3DBox[CompressedData["
1:eJwVzj0vw1EYhvG7Nq9T6UTSsUYjCZuYhCYk6MDfICQqsdRMgtHoA0iED2Ax
ihCVJph0M/oAiM3PcOU6z30/J+dUi716s5RkHmdDyUV/sl9Oun3JU2/yyZey
Vd0aVjCLdWygbvdKP+zcQBk3g8kIP+gqfK1/HkhG5W3uYBKn+imu6Gd4GmN2
3rmLmvzV/IJbu+PmbfkO7pyb3JLv8i8OcYQ53QkXumOuul9CD+51i/60gA/z
F76xZfdRtyxfwo+s9f+evM0HmJAXeJNtckd2zn8qdyyH
       "]], Line3DBox[CompressedData["
1:eJwVzz1LgmEUBuAjTX3YYEJTkBiFEEQ51JZNbgW+0N6Xk9iaEOGcU0O/wKXG
GvoDBpGDNLiIEBRCS0sUOLR0Ndyc572v8zzw5g5PK/VURCRyNRvRnI6opiNq
2YgTczwZsTkVcezcZbczEQ12Y36xIjtgR6yjbzlfyidbY1veLOkTnugr8sFW
2YX+V/8oDe+dyYgV2Dn71hdlx52ylOSNP7NlOy++tyVnZ8/dXWmxVzt5PtJn
/t+ws6/fMAdska07T7AldxKWN/tsgQ31P+aD/t7enfTYvG7A3s2s/Tl50md8
t+2u2Gvza//8BwYSLac=
       "]], Line3DBox[CompressedData["
1:eJwVzy1IA2AUheG7YPBnSyIiFq2Kbsg0DAwLJpmwIgz8QTAJKlbbBIuCwaZg
F7UtyNIwa5DlGTRpmGxBcE7Ys/By7jnnfhe+qZ2D4n4iItZxmYpIjUQkcT4c
UR2KyI5GdAcjcuZnWYUuyB7s/MgX+T35rezOvJ2MmHFni7axiRYKdgZoCQlv
y/aDrsqvvOuaz/pe35Hd6P/4X3MOF3a++SOs9O/q2/Im36KzOLXzxmd0Jbps
70veMH/SCRzbSevzsiX9h+wdT+ZD3aOuak5j2j/m6Rz+dfe6XXrC1/190tzE
Bsbde5Gt2RnjG3hFTX7tTg9b8DO4
       "]], Line3DBox[CompressedData["
1:eJwV0DFLQgEUhuHT0qCZCm3hUGOD0F5QoGOBjoFCDZGLDtoWNdeYENQUhk5K
Dq2hPyEIayyX5vAHZI/Dx/ue75zL5d6Nk0a5vhQRh3K3GtFcixgmI9Z5VRr8
QupSS0U849NKxCARkTY/uu/zju7YrsdPdRXe5Q/6Ep/jj/ux3b55me/hn76P
57hl1/bMrvkWP90cyLb51e6df8iNXV53jRXPHdnlzEV+pfvCS3zDe7sCZuzz
2NKneBMDN3U1PuI7bs/40DtmOMApvuh/8Vuy/klGeu4ni2/n/7RrLLs=
       "]], Line3DBox[CompressedData["
1:eJwNzc8rA3AYx/FHdjHmtAMXtSK1DMscVpxnOzio1Vq5iAMWN+WgHEj+Av8J
OflxtNROWlmR2mUipSRKXod3n+f5vJ++38za7spOX0TUcDYccTkYsZyOSCcj
mgMRPfmKEtfSL8lRe4tbN2/g136Riiibx8wP3JW96v5aJr35jPuhiAzf4RfM
NX5RjnBdtM3j/BP/aN7jO/KGe8Mk98Jt6yb81ZBF/Re+zQfus266bo7sVX8f
ywr/h0M+x/f4fm4VCdS5D3nL5/l3fsr708jhTr/ppsB9cjO6PLb0s3KfK3I/
3Jy9qZ+XBZxyJ/Ic/0LXMvo=
       "]], 
      Line3DBox[{3741, 3714, 3715, 3592, 5317, 3593, 2958, 3591, 3590, 3745}],
       Line3DBox[{3747, 3484, 3485, 3002, 3495, 5237, 3494, 3717, 3713, 
       3760}], Line3DBox[CompressedData["
1:eJwV0D0vQ2EYBuCnFlFHLYy+FvwCNBKLVHSwiI/GRkJNTFYfk0ksLE20BrG0
E/NpwmZqIhJ+AbEwiiBxdbhyv73vtycnZ2Rjd3EnExFrXOUiSmTo4Lg74jaJ
uOGvJ+KHX/b0830RDX2dRFeTl5RtBVvV+YKs7Uye86hftX/qPig6H+rX9Udy
zu8DuWTbl1+c2spym3v7ltzknZP28+QrJUbtK3LW/5dlxf4sp3giT787k3KC
LufU3SadzjPuj+vHeGCIYb6zEdO2QecBUnfv2u9DS/9mb3hGnV7fLdUv6Jvy
xVbTV8nZrvkHRzQy/g==
       "]], Line3DBox[CompressedData["
1:eJwVzr8rxHEcx/H3FQP3I4qB5aLUHWVQSsdwZEGW267bLDbfUyy3nQnFyMog
XcrmD7BbLBRdkboBsdgMPG549n5/Xs/X5/P9jm0kla1URNTQykXc9kWcZSPO
8dwf8ZCOaAxFDNvvuIK8iE/nOfkTP2q/55ryPVzJ6+Y28twjV8xETCKt/4px
eVtellX1F80ReQfr/mOCf+EvuHnvLGMBU/wX3vULOpf8m17ivMLXzRK/am93
+zodfr/b9+6Bucb/oenuNP/Bn8hPUZMvyXvsM9w3d+SdY1zLd8xdzHI/XNae
Q8O9TbMk/5UP2BP9QfOQ6/XtMpfCjf0f3vswLw==
       "]], 
      Line3DBox[{3759, 3710, 5290, 3709, 2803, 2666, 5181, 2817, 3461, 3460, 
       3442, 3525, 5306, 3526, 2833, 3524, 3660, 3523, 3530, 3146, 5258, 3147,
        2846, 3149, 3148, 2848, 3168, 5262, 3169, 2866, 3545, 3663, 3544, 
       5310, 3547, 3408, 3623, 3409, 2882, 3463, 5216, 3462, 3443, 3464, 3465,
        2898, 3216, 5220, 3215, 3677, 3608, 3609, 3014, 3562, 5240, 3561, 
       3471, 3472, 3473, 5191, 2928, 2734, 2929, 3711, 5337, 3712, 3724}], 
      Line3DBox[{3762, 3699, 5334, 2552, 1772, 1973, 4984, 1468, 1877, 1467, 
       3015, 5267, 1087, 2541, 2608, 5185, 2900, 1066, 2536, 849, 4616, 1274, 
       1037, 1419, 4698, 837, 2868, 1401, 1859, 4934, 1400, 2850, 971, 4675, 
       1384, 813, 1170, 1156, 5272, 2522, 803, 2820, 5204, 2667, 2517, 798, 
       1149, 4567, 898, 1356, 1355, 4913, 1813, 1808, 2504, 2579, 3772}], 
      Line3DBox[CompressedData["
1:eJwVzy1LQwEYhuHXYvCrbP6AwcRgU9DqYCu2LQxt7iNvQVDQ5AdYjmWgSVyd
A1FxRRTB5A8Y4h+YlmlTNHotPNzvcz/nwDmZarPUGIuIsvRmIo4mI27lUK7T
Ea3piBx/MxGxNXJ4xSf8Kn+p1/k813FX+bI+xC955tv8p/sCW1MRBfseLtjO
uLx+it/crqzodZy3n/DLeoLvXE3m9HNbyT2QA1uW28eEL3JpfQn7ssOn9G08
ti9y4/oL/nFr/uMX720p94Nv7djvsML/yKYUbF3uwz3r3aznN9yPnl3HN8mM
vgtfpShP3vkHASMxuA==
       "]]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
OGsN6U+R80SGCvhT/YvOnnC+IJt6RzLk/QDWiV++AucLAsLOJUNuQ2Xui27O
HMReGrbGkNswyLttrGAexzTfzx5+fL3o0beVqamtMUQzt5Y65An3RLuzVxjG
oquRv/7mCUeDev/mAxUjVhJFWUGY6dHvv/nAWzeJLMgH3vs5/rDjLEWSTb9k
IR9o/vbUFc5rGJl84NYYG0VjZzd9gvMa/zUvahW2V4Qc5mfaWsGdBu3I1cZ/
BnKY//p7/l+Pq5/KFQ1qJtfrKvUeJ5vPuHdrx5PCYxlE9zul1hqxARQe2R6h
3jCCPQ8m7VxVfADd86jfFBA7jh7nOp0z3t6D6UyWDrMiQujln9yTUNdkvz7r
IusaVpjjTIW6plFhqwx1bYNyQjJZ17CrUrAW1LUZBcO267N0rGPMYmXzzivf
Yzlkw23DtyjMIjnvyOYetDf3oP/Ol+OI5XffkZDFBBSs9SIbxsXknt4hx3H6
50eSMC54ZEEOfI1RruFn0tdgbve74uBr7g5MDJezNCM+n2MJcW1UFPlp5gXk
CYy/UlMgT2BxyII8AYV70ZoLCjVRWUQkL+QwjYk59IsKdBxQkmwEOcyrMYcv
kL95m7A9idDrwZNyPtshf+N0EH3qYTyKJrr60/Jv9eOz9P0lfh0PCP5gmY8u
gWPo3c3UmWv9vfjnO99rzwKe/q997rqZQre903twnBT7OlP1cZSbPNUwzXGf
aJsxTdB7PIAtT17yW+8zguL3jCicKn5C2B2KUVyh0YJ+GBp9vxVBxf5Zk8Ti
wzfEjhVfN+6NbUWCOSvuyOhQ8ZO8vAQ9//cE8UciYve2QVyy+Mf/FtsIHvVX
4nXuzSZ4qyiM1RvpOKd5nYyPUzVq12LlqO1I/8//V2BwAxvot1NO5g6pX8y7
IjoJ9Fs+LRO2RbgPO6951ZhrMIb47nBeqdmZSpzz/+asv3kYV3qdIwx2DSGG
0LtKFrzZxKKk1L6AjzXIW8PzUX4/Dd2Szrugb5VGLHMIZNA0W5CmXUzhYDgV
vePjjhC3/Ux0Ftao2AtQ0ehV3XV1/m3o53W/VA3eT0SUUpXfVuMBrF62iXiQ
MoJIU3ohx7yVsFxdnHN0aAyP38iNPni2F/1K2uGYqjdIKHI8U/n1vhf5c3QG
hZD1+WDufnpX6xwh92bVw9WNAyg/bn3bOdURPCtUpfeCOk1kDLXRKqqHEGtk
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
7eZ/1z4CfdOcPn8QH4D3NpmIhzkXEetqJmhrOanweSvzLtdrtaBLh4m1oTOd
UGzU5+RiGoBDxiN7FqdGQHBW3U90vrgvvfjoLf5xmFoj47yKtheM7BRqPLKj
l2hcyrs0cG4SMpVJCq3R+gjOaZtptHwZIOwu+Wwa1c4DHlEX0TlioNynOIbO
EQ9JBXMGWr0HNO4Mb0xEqeD7Z/tUIaZ+IuHGsL/piXagFmTh1rRpEnRtP/BR
+cRnItM/7ZJ8cClgNF6iWoRQ4eYek1uU7HqiMHTvLTSPyKYzK8zPZwi21HiU
oXlE31g07FH9NNjlEZvQ4fdwgZt7hVHYJCFUp0Zr+7AcuN08InL+DhXwdIfk
oPPa2zB3xVwUcyk8n8EAz2cww/MZvlGqunaeogDn8F0fraWboHX1qFSDuCDQ
CzynjM7XTx4sS974aRx6lCz2oPP1mbE8BwddKSCUznifiOYHuF82TnjdKwmw
wG7WkppGBcPPfR5nlhaDhaVD7wLLpUHAa2lOB6khMHjnwVF95mHgJ2scgeYv
LX7SOJzwngIuDnSGPh+shB18H8PlRSqBv4Ct4cld9aDi3Hof128UGD9ecHpF
0XnAmZNzKr67F37cuq823XsM0lWKv3qTpAbaj64Kujn8CW4WLBX1LhgHWcnH
pqmJ34lnLGt80bypiNcjvXpf2+AGGtEXaN6UjkTsHXS9x4pjkuT10FZfewxd
TyQuQDQXcTFB8tB1lrOFr2ekKJdolEAVzhu/wHljbZw3NtrwYr4/lQJY6vQZ
VAobQL1x0+WXRilAK5znbcM3KmCSk7/NstGucGq9xZ5nBUlgSGoj5zeUxzuh
ZXS043Kh4dvv3psfXwYGirsEBD8PQn3tO6uHNIfhca238vSic0QbM4sqWmdb
qpc5uc4gNsCPD60z68PENuTnBNyw72jjiwS1LPoNyM/pOkTVQetpnvj5Grme
4HmMciRazw1WtjpoPV8IMfuS6wm2XDl+FK3n45VdR9B68qweayHXE5Re0IhF
68l124X55K0J0H1VJ+f5pi5Iz/aw7bIFP2A8cDZZ/ccgsLhTPaqkMgyzqg7V
ERU/iCm1X9wd8xjMQ2maHc0XJ8EJlW+yR/VaIJOFJjxycZgQ1bww9DC+D7Dc
0KjoWz4Gx/uFjgXJ9BLLfDoM0byyV0FSpfKOk2D+6c2ln+5thI1/vxHaL5ec
kz+T+wWw+AtZoP3ihfN+mTjv9w3n/cJXDr1EfjvHJ7dG0m8HNSKe3MhvP+Y7
lI3kv3TB4Qop/7Dl1VZ2JP96mL/DHGLugOchHMTzEErwPISHOO9ajs+hBOK8
a8Abxwm0j94tr3Um9xE4bfBUAe2j94l8AOmZ18b9T0k9A+UVxEuQnrnuQVfX
09kAFYYaQq7lUqCapxGzqa0wGOO8uBPFXyXjrMZk/AV8X5axo/jrgJvfPjRP
hmWgwMundBTu85yZmWVaJAw2HzRDeqZUvcWH1DPQs2IdRHpm+rrbYACpl6TP
N+SRegnaf0j2R3qJ9XzUKoHZUTjIx8QUkd4HBP35dpZlvyF48PmIh/h8hBA+
HxGH811pON9lgvNdD6OKJVH9vdQ+QyA1oR+qy8V+M2iNJRxAvx2a43fRjpL1
TnYcmmjmzh9nCiTWSpWfRHo+Ra/KktTz0DmXIxnpebHj5XRInzcW7mdoEh8A
YOdFfqTPp8pW0v2lz22ruUh9Dme2H2FD+vxaqPin3lWDIIhKJ3dccATezmTs
SnZ8/bft1PD2ObGgqEmwdzZt55JiG9TmDXprNXmfcKlVnO9+PgndTohs91/W
BvmjPRIzabwIdbq6ejQfwGbCgPq09wNcXr8vDM0H+Ae3xJwO8zVdE1YmoVT4
dfDJyNCtUrh8W9NE6MQksdzVedviO9JPlntbvsWoAG5wvElH4/aVYN43fSdc
8QH4/FPgpACph+TnLq3RfZJOfA05cw+d4+MF79E5Ppgq+9wFneNTi5y7in6f
jqq7ffhWKdBZ+XYE/X5WcgB76SIFhou18AT21YG0He2s9wRHiCgpIQH0vApf
HluRzwu027qz0fP+aX34Z+g/o3UY4fE0J9cBRI+JR6N1+NP1513GVhUITAAV
f92TJaHdEGSLbrGTdSF6DUOaZtsogJfmhbDpygZoZbZF+u7Q//33cNV5Kted
lc2DF7yP6caQ9nqL17WD7iCK6HTjPY/m4128eAgKen+EB+8JzqP5eDTDObxo
3a4wb8wJ6KuDglCdA60bw+3xlW5x+ZBO/O6NhzVUIK58wmdtZxkRs51iX9eY
DUJX9epe66RCbhEmTUpnGuEYT1nmEFoPeHNu/2AdocBDb6rZORhfEhxK4n/V
446f+qseB/0KlA6iehzN92fVqB7nmPcU1eOgZXFzPKrHhbY08KL6bAS9CKrP
QtbVQnaoPisdp8aD6rPBuqcMHkyNQE9F4wOoPise3mWI5kYK81rmaIlMgh9s
vmxobuTJM33WqP/wyTDjt1UtI4A+2f0y6j90TZyIRn0ye48r75KJoMKcezLP
UZ9Mq0v+QzRPsrIjJO2dRyakLXQ6juZJqlzn2ILkdpqLarHVqADQ6uuuQHLr
qt51Acmt+c11SG5B+q7FFUhu+Zw5zNH63LDi0CPXB9zP1QRoffjsTizYk+tz
klNxjlwfYKqzgg6tz/EngnpoDsMypZknIpnj0M3EhA/NYThxYfkPU/I90mu0
oPcItTRGN6D3eO43ro75n+Shk+NMDZJDxuebT5ByCFiafMSRHH4pm/yeT8pt
5qe3j0i5BeHjfSJIbv8xD2QIzwNJ+A/PAxEd2n6lJaoXCJtE6/dkkX4425HY
r5k3iYUI60PzNINALZih+6ToCHhj89Y994ErcfXIhMwUez/YriZn9+LVKPSr
13qsHh9OWGK+FfPHmM+aPnqJ5h+2CL47asA6BrevfvQAzT/Uc6m+v6egHw41
09qWbiWvD3vqODkbTQh+yPdsZugGmo/MQ+OUJ0C8qnb3+6MPCE7MD2EejPmw
EPMNlPfW37AN+KgNAZPga1oo703BXBtzG8wTa65LF4dOgKrU9c8eF3WCmUMP
1hLz/sRSSr4xvfAomMudbCca+oFdb8WaEI0/6yWaaiurzVtegawnAoz3Jqng
Ft2uuylCsUQl7vsqxH1fl3Hf14Xa9aaVH4dBXFcajafBIAw41vqJly6XuIh5
NOYJmBexLfxE9uWe9QUe0r6Q/un0ArIvm/DcBgs8tyESz23w/flca++1NnCi
rmTgceAk2BrIoxxWX0KwuNxQRXUTDRhSHM3SD362fhLJdS8kGmtPNKF5nsph
qgl5qxqgRWOlB5rnyZ+n95OftMsveny5SbsMv6YvSiO7XILPQdDhcxA++ByE
cVLR0xN6TVApun2i35ACAPdyrZt+RcRcu/U2t4O98OuxWUb+yTHgv9th32f2
OmLvoexnJjqtIHxQPEXw/SS8fPht//xqGvD7fAZFPJ/hPe6P8sT9Ubtxf5QI
ntc3g+f1KeN5fQohkut6Dn0Cr4ZP7OodGQejyhKu1jbfiHZ8/7T4/p/g+x8X
/jiC/J9n29YEkv4P4D30aCPyf6bl9G5Ghw8ATcuqyupbI+BtUXNOQq04WMBc
DfNkzN/8Nhe3D8/FDfit/3k37n/eguMgfRwHXcZxkHuK2FAr9zC4rqS+jSI+
BBq45EsUmGiBojwDd1fTMNytvzdo5fFBOBfayRg48Z7YfMyG9wDnJ5i7Sf/b
nh/jcL1S49b8vhLiBE9eD4NlOjxdrMedP0aFL0XajcJ4M4nmtTEc9LL18FGY
/ujeaQq8w8iRUr87n+jVtBy6WVoPL0fY67f3UqCIIrfTp4MfiArMLTDnwnxa
nFX1dHIPvLvzTLz74XFow33at2eik7A1Mlk5sjgOh78YUi1oP8E3X6YdTGwa
CB3B7xwfPBrB2vEmDuVYCnwUf/mlAR07iHxmPvng+hDw29mVfqxmCJ5bgGJt
y9aDMLEVX0P9qMCjyO3zi/VlYHyh1rVa4TDww30s6XhegTDuY+mIvFTr7z0E
mZtzr4VlDsHV7QFC9jTrwf4LVyRQXPN6ixANGdeAT5xu6iiuaaqa/6t/47Di
2msfxYJgvHrfX/0bnV9WbUX9G88eOD3nvl0MyqYL/+rfeLa4lxvFIz7X1QPJ
eAQEsc/1o3jE5WJjBoo7cmKy+8m4Azit7WhBccdFzOswv4j5E+eRK8rb+sFo
nldi7aNRsKF7K/+6EE7wlIXBFHHLk2lpJIfz246yIK52qcQFxS90S5ksZPwC
+BWPl6L4pVOufwLFL9ma8W/J+AUMHaw7ieKXoO/5aK4+cNzv7srhf6wwxS15
2eozNOCn8sxf/HNeE+/xZ4aFv/4dJtgVNKrR+jcRDk3k+oOrrbyr0fo7WCdP
o7iyqJtVlowrIdfkZhMUV0rlHc9G61zF8NiLXGfw0ngLC1rntknmFej9arXu
5SbfLwj9ORjx1/sdyY7XDB+Ca4/w+lOeDcEGeeJ42sBusNO1ywPpAYHk4Nek
HgAqTB41SA/cEAygoPc+ONRi/HJ9GaQbNXNC790Ax0eVOD4qw/GRyJaQu6hv
TZ2T9aufTi9wMwryRX1rsphvwzwM80ett21RPUh4KD9Hf3YCeEf7y6B60HL9
2I9Izke8dxwl5Rwce2ZsieR8VO8Xn8D8IOZV9JR6tL/09tmj/QWW7x/SQPvr
i58pLdpfmQ7Xx8n9BRJnagLQ/pLGcU0QjmvkcVyjiOfmSeC5eQSemydm8XJY
WfITVCgzURL8Og7vG93Nktv9jRA4XmmB9M8NP8MPpP6BY7SGSUj/bMDcGvMm
zOd/yw8z4vywzERYBdIz5o5COqSegQxs9M+RnmFys/j8idSfSfdHVEn9CU9U
7TmP9Oedte6RaM7SQxV4N3/bBMy0j/qhV/aOuCMl6oL0/4fNC19I/Q+zdD5J
I/3fuctyy/51LWDHNSH/S6so4LLjWfO9q38QUkeuhn4t/gAO9p2U7bKkADea
ZZ2deyeIazaT80m0DcCVb+P5HR8pwDO+nbOMu4EQ+u18dBw+H52Ez5t/xOfN
A/F581rx3RuQHSTc70+SdhC2uKYLIjvYxgO0kJ1lub2Jj7SzwEf8ewWys52Y
M2Ieg3nemdeamo5DYIa5ZcWr8iFw7pHIDd/2V0SPTUoH6q++k6lwUN67DrpZ
5uii/upOzPMxt8H8T/7DW/kQAeQvtQ16epL+Eii7N3kH+UulmDdj3oz53/Xr
GNieWCP/ymR0ypP0r8D+xil95F9p58nqI39vW4XVOdLfgwe4Ht5E/p4OyyNZ
5O+9ozs7Tfp78Iuw2lXk77WnMrMjf6naaQNnTFEnVAh3Ykb+Uqxnx17kLy2G
1NGAhn5Yo5j5Nfjf+Uv/Id7Ss2c968Y+IFpsQV9yfAy2TaT1XKgKJBaSPc6i
9zWfoDeZVj4Ez1xg9ULvy5DracV7/QYgL2/2ZOQ9BezuUMlcrveIEEwkUioj
msD3/NCIFk0KuJPiPhsc/5goenuS/WtqG2zi1l2+zGMSsOtaz68fKCEyLO04
9pH7cVmXlBy5HwFTKrUR7UevDb6HkJyL5O7wIuUcvnn0yQfJ+XZJjkwk5wlx
57aQcg7LT5vRd5Fyvjl+LXQ0bgVr0wrCRKsnYZZa9ixd1kpQtyKeLehDO1i7
tHwgYvUk5J+7ft49nQtUR8WvQHZfVy0hgbT7QJ72y3QAafeTZ2a+q5F2f1lM
zCJp9wH1ND8/svsRHRd6v5D3T3v7ATN5/1CYQ7UJ3b/qfs+XaB1SHssnkusA
05fmvNA6+MP7hsivThuXjyf9ahiaGp2M/Oq7mKdjfhfz/9R7DPyidKVxOxl/
Mqy6aHy/Blq307Dsyg8lHNeEpzxL+wBOdny8lGRDAdGsabVuocMEtWCvH21u
G/hycKlz0G0SuF18rnu/cyPQPZX2EeV7ZzTLlDNLi2Fzt0wNyvdavuwo77Ye
gLtkJsZ3cPfCjHu2zFk5vWAO5wlv4TxhAs4Tns5X8SJmhwGd/o2cA7KDsNwP
mEY/6Ce8O+5WSQaWAvmhA+9sQ6iQScekP0vNAqRaHL2A7sdpm98geT+QQ995
C7ofH6qnHsrbH2Kn9V6j9RHqvVbahfL237Rs/dFz9ai8sSSfC357/v45eq7f
v+fChOfw/z5fIgvPl2ClPaaWc7QJrix5NaZH+tvbBcdkjTOm/tccfjU8h5/n
tzkJpnhOwm373ozysVqYTZdEWK+mggCbwg1S42XEuRveK107q8BV1q1LIRpU
cDdC2JUS9/J/zdvXxfP2NX+bA3AJzwHwVsx9++hbJTTiGV1fY0racwMgPMDz
hFhS0endaVENtI1z1FOUqWCAY+nGRFUQ8fCLg/AW3bfgTdjRqIQXVKDv6HX9
+qdwImqH9Ut0vsPE9gE63wGy9yrWovMd7NJKSzc8J+DpkK6bAoudoOFHWQWa
G8+GuSnm1Zj/XfkUwXPpbfFc+tr/l7n0Or/leTbjPI/db/mNQpzfMMR5huU4
z+CJ8wz6v+UTdHA+odLuDQNaH6atEtHk+sAM2x5dtD4GoqsqCgr7wJq6Ygkj
6ihwLBtiFx4LJjgTbgmYsqaCveavPEY/U4FfzAauKud3xA+qK9cL0s7m0Eab
kHYWrldZvhXZ2SO/zSf8gecTJq29P4DkxH0qbg8pJ9C/c+9+JCd3N2teQHJY
xWY4SMoh/GKUcxjJYTGe19eM5/XN4Dl+k8vmcpAfyPi135H0A0H2E9lryA88
zFI7VMTVD+/cuvg1OHUUbpluX7A2qSDiVf0n0L5zXhqoIPcdyJCYZs0m950N
9qsrsF9tif3q0qbxALR/E7fWpZL7FzywuWSO9m/t2ZVRSN96911+TOpbcO17
QCvStz23hkYCSX0rLL91ktS3YFmY0X6kbyWw3wiw3+iF/cZIWwU5FO/sWGJM
JuMdILNizBrFO9+LHPhRnBvxlYOPjHNho3gtP4pz+9e+zHkg3AD4JzLmdzRT
wOEFpa1NNs2EmylP+HRTI7iR+2qbQQgZb/K9OnDUufePctUTE0aP7J1q4Dk+
0t4BX0npCmTv4qcbnS9crAdXx73OcJB+0Ypg8+NpAjWER3p9o6JiLZDdu9N3
HS8Vnl3e91RT7y2xIq2qIMCmDoQYKGmPraBClkXrS984ygmOx9+WVTc1gUDh
LWJjyhS4eLZzHlCnCP7IHbPDZBwXMDAgaEn7CeQeirJGcZxEfqgfsptyPO8f
k3YTmu93eYfsJr8qbQKSQ8ewaGVSDuFcFhtFiJTDNf63P6B1OOE6N0OuA3xI
S6eL1mG/C2M2WodQWy4pch0gu8TTs2gduDRnvFjEqkDtlIiLoh4V8H0cpLcx
TSQWWVusmdwqgcfZ1Ptnzalg5NGCbrZu7P/6Ds4x/B0cht/yCdtwPuHv6oH/
FN/XXl2F9N4Wz28apN6D1lGvzZDe+2/dz594xWFupzsVrWCbcNCgb+YkmBmM
rY585kE4SG+LRd8/UrE3F9ifSoWb5ps10PeP/lN/t6ZPwwj9Xf5NnyfIvwuD
TVYnor/7d39HMiMsD33PsUMi5P1phR7w6BRzAvqeoyvnsefou1QKpoXLtTR7
YPfyQg7Vf/NdqnY7YfqRWyOAp/XLt1vhA/DLlM90KBFPnBl6nLz28iTw/Boz
zrn1I5Tdx6JbNxJDLG8e5UTX7w2Dg+T1wJj7Is1D8vpWT9MMdP3huKx68nqw
O+OmAbqex/gYW8pJMh4XbU7IN34HGGW/yuRsCyU+fhKiQ/x44AbrAuN3sPB1
wWbEL31NgOulKSCAe/ojk1Yz1JAxj3Q++mf5mVrIbkLXr6fxMyWvBwaRn5//
u+s1frPjp7AdZ1K1ZVS5Xw37dX/kbleiApl14g3o+61/9738eMr4DWZUg4rQ
sOY2RSp4FWDCn5YQRERecLv5PZQCRm9HBhyvagTf04pkRJ7++bu6t+sGzcTk
WsBZXo0322kpYEqeTcNE+M/zf9RaLr7VcqkA9O5azq+uU6GLB3eUjEAY0R57
+MCLwy3wqcm9TTxLk7B7a7dhgPSff+fJqUW94y9H4FwLm5XfmQE4k7R9S/LO
P6/Dxr3q59Hvc96a3kD+PkipiLNBv9/gsN3iDSwAWmHE4J1KKtz7eI8N7Qs/
IntXQ9sT2QrIVcsCNe2p8KvEcxhzMIzwEOR7hO7/oP8GV/L+QZBl0HV0/393
/d+OaBmj+2fOuGJO3j9oGQiS/Xf3P2N3VDs2gwpkZV99Hbcsht7pQ+kjEX/+
Dt38H77z+6fro9Xje3y4esA3b1/vpefj8PxzIYPTR+wJjZflXUhORB2bWkg5
gZdVgxmRnJyu2/IDXb+4R/02eT04fV3IEV3vorOP6yFDH6B3TS0KtRgDD+nj
1acE/vwd1ZPm66TR9S3fzdLI66HEhdAz/+76P3Gzkv6pnpV9cDDoQLGg9Rh0
uvoigk3u7//O8y884UgeNsxFDZDyAAROHY1B8vB3f+elZZQV2kfaTMFt5D6C
Ly55i6N9xFd/Qx+9x/zl6qLkewSbL+Rk/7v3eNjka/xQVAF8NRVFLJHyeV2i
Z52p/5/v5/BRL33pfSPgtZLtdo/uAZhIY0r7MCCI8I6rrXq41AvnuxRCOe3G
QLDPRi6F1YHEbKp12FveClgwwrbhngMVFAZQjAK9/nvfN9zg9LEZPe/0935F
8nmBtNi4zr973nwhl2PoeWsTP0qRzwu6I4Lp0PP+p+5nh8ZmJaTf4qXiikj9
BjcqF4j8O/32J17ud/ip//Zx+GX1fRvG7h4Qde9My/fEB4Sw6asisdERKFB5
7jMr9wBcmvQ+fRoUEoe2UozkwSRkMVjBZTP7EbByZpgqTNUQt2afu3MKNkGG
y7skSs6QejrtXLDUnnridL129HTXe/CzReN29zoqUIzul6PXayNmOcH8248U
kHe2Ov7Zz3qgrZXU4SwzToxXrWHKXvYRlFuv76+4PgmjS5+wP2YbItiwn2b0
m5926XLTjaY5KjQRFWL8tjUOlLet5l4onSBO2r94ncXaBEfzl9aJnKWA1etV
hsz924kdBxV2vRSrA4m9qkQGAxV8qBFtF0qvJ8zZGEeVNowDI67exZjvPcAr
zMch++l7opW33ezT5zGQGXD7VpxqL4wbozuot6yYkOqIuSJ5rA0wOgTEy4VN
Qvv2XUxaoi+JxQPXiK1GWdB3+rT7mx4yPnqhFxd1tIYQWDu+lvFYH9R659Bn
smsMGjMnNa1a7CO2r5nj5zhLhemOU+N01EpwYvHQwceHFgivuMVgtcs1UPac
V8Z9WSqI/rgpuZppGTi/4uKT+Ok+oLRuzSXdilEgaUMRtg9YA4wVnR8J7+wF
8h+YjMTmxuCe4useNry8oD6q+v7nwI9wd87CeW+DSVhzq8/E0ogbhEiwzCpe
H4ZOC9e4ZkoHgcFj0VOddzlBr0d1TZhKEeBZl/opvIAK1j4stkisWwYuFLT0
j/tNgi2+6zdpObeB5vbGg2uElwj6y5Lt60n5Vn15+6nbvhFIc0WlxVF6iBj9
2eMwcL8YSB6NYstPp8La9abPZl3qiC/8gS3NN2rg1R4v50YZKlzxYrfhaXlI
xDaZxa2Z7YXs2lJSbo5j0E9EjPP623RCbvZQtO79cUBYSXbs1e6BAT8LUmtu
UAiO9T8fKu34ACKPl3cf86DAIHeuPkr3LNE6ajvLFF0LnwvqqG5np0JFJVV3
u1FOoJT36Mzd71Q48laSQftxIgxkDl/ZILMXvM5JlxZICoEOlHPskktU0Gre
G9EvdwB4xvDffftpDEx3J5ZvOd0LawLvPubTMAWvs4y4nskMwEdfcwdnG0Zg
UMxJ7hs5p8Hn1ONyR/WL4RLPuZTA11RwRZJXMVdQAyis+zgaSPpJmXr7P6SV
VABtb2BWt0sZDJ9oV4mwbQbxGR8SSzdSYCS375OvEnzg5p6s2oGyWnjq6pRB
HisVBsLlfGlF84Q0o0yBD9sYdD6REXzDvw+y3/Ubetb1maAJcpUwXqTCD0Vd
0Jk+AhTO83EMNnUQ7BtL1yZMjUIaxlb3B3l9YGdIe94n8RIifxXDu/YVNaCk
65Kq3m4quPOd60Xj6a/EHqu/6j5wBQ1N1U1zw8KhD0ZDN82HiUeW57Rz2fvA
4kKw4DHzMZAdkH9k5RsucKKYxVNmjgoCNi58m1GJhwffnZJxe6sMaj7QqH7a
0A4KHG2H8ndMwjhtA6HCEVOQdOGadh/bJDSxKg1mKWyHHCNbeDe/DQJdys6a
fquHgMunlufqPwdBZE6PruTR90Dt1r63j29R4SGfH9Gdk8WAQ/gMqNmfDxJ1
RdxtZKjg3IEYu3mpGvCcRuXilfkYYNavbqv2oRFyqb/o8CXjRKNjm16IHzMH
qlI/v2ZbU+GR5exrI4sqoEtaSQmXrRqIMib0J9r7Ydliys6zvKOAp8l9p9FP
fmDXzXOFu7EOsud6rPuwRAHLz0nfe93xnRgweJ3JK5AAJY6svXRilgp6zDev
X3m3g1ietkN5n0EO6KJX/DbSTgW7ElwyGm6XEv1ToW6BIWFg/88PHvHk+/G/
0mFEw95GhGQ277/zuR748n2809ZBAQQz5U3eYj4hvJurEunbhnsKw6S+BUfZ
75ojfbu/U1AF6VvDc6U3SX0L24OEtZC+VUnoWET6U2Kg2Z/UnzDg1UwX0p9S
908PZpH681Xw+nFSfwLKW5OpaFJ/Rmw0tEd6MjxCWfTr1jh485rbX3ryWH92
A9J7NClbRGK/90DuM2vOIL0Xumh2Hek9ngvD5qTeAyvvfz2C9F7382QzpPem
1oQ+IfUeEP95ZyXSe09Z3rbxO6aBvcvPPaGlUsFLB2/nub2RxNoXTBGZ2ydg
4NZjn233d0ORLBvGxqUkQuO4mnz+sZfA+kqluSX6vk9K5CftxHSir7Kamh/Y
Byqpyh4UljF4wXX6pbVsESEhzlGyrZwC6jSYKnS8G8CzUvvbew2qCfctvE+a
az8AgcKHCmVXKUBW/IpI/0wJkeCcfoYTTsAY7vkCGsFOEF320ftUbxWxY9pr
YYvGIOw2D1d4PzAMLx9LmsqvKiY0plZWyDXnw8iqewo91VT4KkyYc9XTDMKk
IKzvnOUY4DrI9t2cvg+Wrcy/+Dr6BaFpdfYrYyQFKA0GbRJ/3gikROQTvALj
/mh/vUWaQ5O8O+AehePcl/om4LlJ+4euBv7EmU9LTza/SoLfbF9t7/xGhfYs
mZ7PrwQScazZb0JONwPvixtskiUoUGpzS4T680fEhSNHdb9ajAOd9y5xNxx6
4O7LFonMmYnEKU2tBpsNY8A98+qtvTf6AHvtzm83J14SubJpenGn68FGqBd9
ikoBilGlK6n1T4lgnHc9hvOu4zjvKi+3NVcwfRjaGG8V9nEZBMbJwed6W18Q
Y2lTPlvPTcKktj5no8Mfod2mIzXmd5KI0Op1Vlr8H6HRj+TNvpaTMFDY3c3w
bhThLV27bOaOI1iV+lOgidQrt3alRhnyBhGbvFRyxOXbwDPBXtEf0ZOwSeW2
9sUr/sSdh6Y1sZGjQM3DMkJ8az+8t0uXEsDx9/3bv8sFUitK12RRgTlt/C2T
TcWw2x1s6/AJIjbqTVTzNw2ChfhV98UvDAPL1vO67pZ/P4+hkSfGsUA+v1Lm
BvdVGafB1e+ba7XYg/8/l8/5Exdh3md7e5ICTjDN0tdfrQeNkW+EWJ4FEg1q
3Ev5E8Ogyzv8yz6lQcixL3XfSe4/xzVmsi3rZ7PIeFVUWSJtdTE0yD+VvHPZ
//06lJftiueRIe33WaHZnIUxYHJZ6svm1bFEynzEyNqwTHiaXSX/fR8ViFbk
mz9aHkLoC+spXDVqBJ9P+2tyJVIAYAs+8SHT/4/3ubgp/i+7SUtDc3lq+EQh
rVVPuuZ+WlC81ewH4qtoaAiFVKNC0+KEjC0+oqDUr3V0ieSMNDReZ1ZcLLyf
9KMgJFkHfCymz6AuUSEzjfOAQaJtYedZKQdlZ39gr9uTnnJhHCyjUbKV89Qh
qKE91nKePaAgPz2Ie/UoXE5D07N5VIXQf+a1Rmq0H1wweye4drCIXI9toXo5
loXmyV0P9XKoYI19FIsW6d+w0Din5o3bFNJH5m2s6wkG/aHEXvJ+ABMNjc+1
gEuFrPUDWhLKBoDTd/d31AdCT/5+Qd/5wu7cwl0baCWAie+dv/pD6GhoLhUk
HS1srzb0KkiiA0/ffPuLk/6DR0mncSGjg0JcSecYkRWw9A9+wUFEr7C6++wd
B5EPxOtrZdljzp9AeOD+xnft43C5btKqU9NswHH7dnH4jAJyrnTffHG8EV7i
fDW6Tm8PSD/fMLpRuh8ssO+mWxc9CvL3fE9zfnEG9H/wamevGoWPniRs1/vc
B0Iv9+/paX8AqKmx71gL2oBHW0fhsvOTcPebzHB3gUyQvib8uOBgETxhtGOD
Krkunn2HFesVLUG3rXL50V4q1NxNc8dbOAt89l/dY6SkBQ7XPpv3dOyHRr1u
FrfPkuutVWWnFCUItB7k2dweqod+Or6x8l0UWJTosqf44g/C8s5XI+GhNLih
/HjTegoV7vNevKXL3U2EJNaENrKkg7qrLdxh41T4Bm4RalhXTrAaxJ74lpEN
0wzFz9R1UkFyDPtqWfHS/1ycGF2WyThEheoWNOysJ19DTbcU5/lNT4m7+Du/
9fg7v7H4O7/Hs7OrbyR0wVWbL+3/cHwChnJcpheVKCU+p7y5emWYCunerr0c
V58BOETfq3WYviPe9834SLh2QJGXOi+TByaA12yFNXdPLvH4gGKbWSYF6BiW
0Nn+bAB3axjfsQT++fy77NrYL+l8vfBg6qrbcszj0Em8xNV0ewaxF/P9mHti
Hqo5bhVjT4VmnlUvbKUqYPg62xP7WSuIcMy3Yh6DeQj9v35n6gv+ztSiUM1m
6+g+IHk690cg3RgIiPqyImyql2AU/sWFMQ/DfHN1io2A0hiwm+lynNPqg/7S
koo3fMeJDZjfxdwP8xtHrya9iR6C8Wemf7jGDcHoTcreAsvHCFfMwzGPw7z4
Cug6RDsEP2WpN5buHgYbMgeCL20aIF5jPoY5P+Y2/sapE2vDYIh05s3cRSoI
Tha2iGn6QNzy+1fuh/nv3y+Wx/2QbnIrhUQXqCB+t6fS/quPofYbkYk9jO8I
V8zv7fnF1TGX0e4OOlJeBQYfAfXyg6TfAjIIT5t4gh/zYcytMV88aHcuvqgI
aD+7wX7/DRVevmQqYpJcTJzvTva2900EhbWBGkFkfCZBH/uwrryUEG4wtDef
eg9f3V5hnrGWCve6TcgwyH4guNacVGPTbYe97VtEJDZPwlPHN5cFvmsnOn0N
iko8R6GYLRPfwMF+OBC3JDS4d5JI8te2GeCsB1XnXPQlf1CAT1xUrVMFHdD6
/IN9kpYKhkDpqIRrHbjHs639Exc/uMYWUqEQQwGrNwLNMN9GKC72mEdXYC2Q
eVbXHMU3Dn/efTB4cUUvjNTfw8i6SwDoMybnnSP91xCT3fOF517CHXvu3+sy
EQBqd87pPjBphfa8IseL300CXY9kgbFHDODxxT1VPbYlkNHufl9pDBVc0DrH
cURkJQjnuC7Und0O5p1ady9wTAJu2djtRwuWiHVF+Y33xCfAXOzJNHC5Gxbs
1miv5Zsi7knUdZy61wgyttrtXhlLgVX6urN0Wc1EZSih8j75CtTQXSOG5mD1
B8bcBO/LiQXPatn0j1mw1J6dVfsTFTK8in/fRpQQWpdHIwYGmuEa39js/DUU
GNF0ysjSJocQ1lXgvxfXDumboXcP7yQMC1zkeRGXScRPWppo9pP+PQO7z72L
mSC460RPxe1O4mfCbVqdq4NA7BS35ZXSYSB5z7J9ndYkEW0jYL2vsxxsubAr
5+AtKvBNSjiQV7ZESOG5Rj54rlE+nmsUfX7Z+kKBdpAtG/fSSH4SXDKIC+2q
OgIqbrcU7SGo8Eru4InHL6tBp+LAyiJxQ/BNgGqeyF4A+no+b6Eh/fYkM54L
hLgiuPuOq2dbJQXITCoNKN1uAH1mS2IrAmXAdly33Y7rtvdx3fZAZJbHurNU
uIWXl2EHpRJGtUnq7wBNRGjV2CEkt0dTpTlIuQVmvFIsSG5dNTnNkXxWUJaQ
fAK7KWkJJJ++L89VIzkE380ZSTkEvdzjkkgOb/32Hdsh/B1bQZ4rXEgOpaKI
ElIOYVIPdyeSQw0Gy3Ikb9qRTEukvIFzGxgWWUh50zvWpYTkijUi6BQpV1B1
jQktkit9/L3aXfh7tWH4e7Xidu6mNaQ8vBJgR/IA0hLkzZA85KnbfUZ61c/u
ghOpV8FjS31npFcLMPfFPA7zHp5oe6RXX0m7rSD1KuiX4DNFerUP8wjMRzBf
a5SVKZFFxtfUUCXtHaNQ7afo9YmIWoIH8yrM92Oe8tv3Wfzx91ksf+OBmNd/
rz2D9G2Fq0swqW8B4wkzSaRvqzCvx3wF5v3WrEFI39qfOLzGLW4I5IOzVkjf
jmFujXkx5sqc+i1I33oEtLaR+hY6xz14gPTtHsy9MXfA3GnAIQDp287aXKRv
odP5BwZI3/7o/1d+C3OLEA5hpFf3Pqj9qnT1MVh9fuYvvXoV8+V+vzgD5g8J
3YiYmT4w6mT4o6NsFLwV1n5SeCeTCMF8HPNCzAcaJu8hPcx8uhnpYXBFongn
0sOdv/GLmFf1Kb9BfkKbR9Dr1Sdfg7Vfvd2Qn6C0JWIMhFDh9w8h/m/CSuH4
JeZu1dhnxHC+3/M51yH4uqDAVaBwCPoOFfuILiQR19k8tFuovXCaOfscj/MY
rFhOd2OE/gUx+izUuGuyBaQNNl6W65mEzd1WTprFOYTH0R5J/0EKYEu03sXy
vB7u355OI7Svknj201JAJ3kYFDO0dLR4DIKLC7X6mp0VRPUA23RMRC8oEdhY
spgzBojTd7u3c5QRfDcELJF/Ij72ujO2PgOyLMUeQP4JCN797r3LJIzXXj1O
U9oGT7VwChGbK4gfoam2yG/h1+94Rfot8EIMOI78Fv8iuUPvLpYCllvhNuIP
qbD9yIpbO9+mECurfKuQPyN4XfIc6c/A+Pkjhcif2dWkEyE+SgU2DtddfvBn
kOvXVMjQm/D/m/ju73J6QdesV0GTQNJ4epjFog1eDRUKaeT5cxxXNKHZv6Z7
HDYZdH/Usv0Ea0SEm71f/rkOYqFMXxn2sg/Ucc9XX1kYBWZ370Q7379OvJS4
UBrtPQB/blOt9b43AmiF1bMHKvwIPZq4UiSH3J1TZqQcgrF6q2Qkh/OdfFUo
f2KlvccyWYICKgTH01H+ZIMB01/5E6YXSyh/ArbmnH+O8icmW/bZ7fDrA/Za
BYI2a8aAJ6/Vl5gdccT981LDKK8yN3Dj5N4bfVDMh47p1sRLIpRf5OipOSq4
W3bmhMJ8HOy/obaBZXcKEZOz2HSEvQSw8t9bePCECnuaRdR4kp8Sh41pZZA8
nz67rISUZ/jel/4ykufv200bUL5l8tljOh+XQWgU0OKE8i13vIa4v3h1wi+P
nW5sezIBtcJFqs+UPSOWNQ7+lYdxWuBzMTr8EZhr2b1HeZgn0UU/w0n7BZbe
J5sNVMKvX7VXTgWnEBZD8h4oP2PzYkbM13ISuO0ofozyM/yRcwUP6gcgW9A1
ZclDI8CUx7Hv8qt4ove37+2W4+/t9rLdkgyt6AOOnHW7v4yMgo3ZKs+y5v6c
nzntZJ+E8n6DC2IZtvu7gRV3Oi/K+6Uy8IKWR9XwjmK402ZABUJN0q9NBpMJ
MaFNfiJ3BqBOuI3CXOAIyAtlATXRL4kw7M9rYX8+Gvvz1y60vUd2RGNZjjRp
R4CQUVQ4siNXMT+E+XrMcy58+YHyiolvV96hsIyBLxS1bJRXdHLRf8H7pBFs
1uJaXx9JARMnzFoeemYTwWXi1SjfSOUweqDj3QClZIXcUL5xj8VNr4y5CZCp
OneqV7QDVKQ8Oqm4vYKgxfGCGI4XQnC8IKeuvmxKORcsfJKxq26iQgOFBd31
ncVEmNi4xCumWrg+1ZWyToAKH7pf5o058pYwo523QHnLXYUBbjSCnRDQJz1E
eUvHQYZ2zYBeODdsp7kejkHV3V9nk+6VE7dxHPEYxxGxOI5oMBNYuVVjEL5Q
npV5PzAMZunN51Ce831PbHxXDwV+7s5shNWkX2yv23t/rpLIw/HFII4vhHB8
oR3bMIzyoiPNa1BeFPiujJRGedHSYYNb56KbwP5FRofdmhTwumar6/zNl4Sh
Y0XeK9U88E6MYc35BirQnfJ8+DQ4jeC8wDY4e7YPBPNuTl2xbQzwBA+kK3e9
/J+4o1ThX+MOJ97+SGTX3vJcnyHtGjR9tuMZsmt2mFdiboT5n+RQBMcjQzge
uY7jEf02c5VDO3LAlcjdBgc7qFB55wuXky9KCNUF62NFyh+gB/CqOeNOgV/0
H8b5cbcQnp+l6walJmBIa+L2E4bdMHZXdrHqvSliebvXzRVNPdDk0p7kMvlx
oKTP3Dh/cIlYGRUwL2nyFNQM0Xe2z1LhmaGdYKy/n7gT+a/8NOZ7PzMuLJBx
Wu61N2m7XoVCv2VisyN714GA64wNjw9S4JjyNr7x2CZ4X9LOx8plHdDUkdqw
zqcOwgAbQpP0Hzv3m/A3r6EHDOl97qKbKSBeXC3xkGEzpH8yUKdk9o3QEeX3
ciBaAdN1vrSo+kmopkFnsk3sI7GRkpHrPfYc1n3anHJnmrzPptiO3Q5lxOfK
tqaMo1Tg82BEyqj/HdxtuTDgWttPLJXf10P1i5qXM7fbOihQ7cGr96h+QVM+
2zYX8RpIS6k9vTxIhQIhxg6DNatA7tjPbw4PB+HujwJsG6OHoWnAkzbHTjHw
4956QlyuF64SYbttPj8GPveEO29K3w22vjty1za5FKxY+07YLJgKc0yqaS99
ZQeRE1sslKiJsI5hNuQAGSdqJMBHZW/YQbNGSwDTigHgdIp+OmZmBLTscPKj
S9EHakWq1TJF6YBm1HJ+cZQKMzTpGIuLD4Ps5WKcYr5jMGa91TL7zl6Qwnna
is/RCCjRdMz07G0D9/IOHH0fNQkep3nQvtmnAB6o2NZ23BkF76+aDhsY9MM7
zMSm9yrSIPXZrFnGZye4TVRDspSMs3Z/PVXxdAcTmLM5HFPD+gk6SKj+P+y9
eTiVb/c+vCUUzRIqQiUpDUoJ3RdR0UQapMjQoEIpaS5Kc4ZKNAulEIUQyb7M
QwoZijLP86YiyfDeq1bP8Ty+b897fH7H9/ff++86uPe9r72uNZxrrXMtO9bd
RDfMHCs2v+4LY85rW5n8upWKlIxNaXz7ng6bmtSzhallFleoa5WyemZzxDj7
EZNH7Cpaw1y+5TArmovE9y59TU64nfCqfscjxyfy3TJtrWb28X/Q2reQ/R2/
uL3sed9Cxl9XeHXFnp9MP7D9uf+ZejL4Tlvtk+vVRMz4fZhrvAJp+NRuk9ZV
T9wF8z7dHVRNuUaCUTWlG0iG23YZnz1JNEkvMknCl83TJ00bdMfjILFXzzh1
cm4ZNTa7+Sigvok4V8VYcqP8ic/aCwJDYs7RewvUJZJYvyfLyTayO+5LVky9
p/VmZAFxsjmwynNBK01SWGm1ePdVYrHQVe/x8UY6NPuhpHlnBX3h7Wi4Q8eY
mDipypkYNNID9/jkbqhUEvs4tbrG87MJf7jBtK9pRVTFRciUp9dCsncy39OP
C5GxsVEqAdIJdHii1KcdUTwi4v0z97B2PVPFKSTDJ/mQUSv1Fdp+snF0poRB
m10O08rU/MJjBTmcnSVDzLjX5mqEeIR+YzaN6X0A9bhLl7OgHkca950xgXqc
iPz1Pvj7IRyOcnGoCTe4J7H8uozov3DaoRzOdcBpXRCnzRUO/oS47kzV9Zbc
d4xy7wo71X/xTg/jcDKBd9oQeae5iNPycTgyM/8Np/0ytOKo++4cKsLhlA5v
3cvwi0xqH97aSkqC8hQj0xooa7wmBu/T4MrWL9oq1VFJIsjc+Cq7j/C98uNS
Tbk2+ifa4lLZ37/zuob0TR4R4ziJPlM4xp3s5b0lZE/yv3Bd9v09Adcdgrju
/olXzzX1Aw7MqcqXt+a+drmrXyV54F+8zezfiwFvszLyNtOQjl7EgeW2XzPh
btireD/q0zjy89vnX7iuAIcz6in/Ju4R0Xylp/xdTItczx/5ET0vI27F9LbY
YfZljK/tjM9Qdw503Km9bhFrh0eUhkLd+bjKkEmg53MEt4Ge06E7nT1Az1+N
XK0Ldec+vtFym3Y10senFVZB3fnK4/drQf9t3Q9EsPpPN9unJoH+e+e5nYd6
tMewdRld2g9JmNzSOVCPvtbWFQr34nvoiBr2XtDhWxa9gHuxZ83JrXAvRKaW
NLP3gsQG/giFe7F/zgM1uBcOR14ksveC/NiyUQzuhZGEsjnci51j5oew94Ju
Pnl6NdwLatdfWfwwgWo7J/k3XuCRVYPLDM7ExZB249WD4L7cv7cM7gtdbqyi
DfelIdHLAO6LwZdCPfa+kDXCgYZwX2YEfeJBnVqI897+XnwasXudlgh16upj
oQTukc3sWQrsPSJHmHV6cI8Cjs0yh/q186DFStskGujKQ8FaUL+eIsSbBfdr
qpvfSPZ+UeXLG77D/ZKI27kX6toHcsyhrk393tacg7p2ouyKWKhrXzgoAXVt
Or+QSEFde0/r5sVw76wSPhex945aC1wugHsn3rouF/yCw7VwU9YvkCn9i375
BS1F5fPQj3FAw6Ni0/lWYig+NBP6MR7PXj58mHcWNasT0p47hkfuNz1ygn4M
dSGBCPAXkQH+4C9I44VBduAvJB5dt4A+jXhp//SVDwLI6Ar34dCncb2urBv8
iEnFa2HWj5CNnzaWgh/h3XrTOz7Ik24eZgv9G1Q/d9oh6N+o6FriAP0blV2K
ZbPMWDvvefcm9G+cUh3rCv5iXnlhF+svaEHml4vgLwa1BXOgr6NqjFtn1/t6
kld0+MehaDOyuc14G/ij8T9myrH+iAR3/6jazfojiaAtctDvEevM9/x6BI9O
XLV9EvR7TNGdMxr8i9SlDwKsf6FT0kV2gX+RzVCrgj6Q0/6WZmFJafR4h601
9IGceGG5EvpAdF1OPEme2kq+l+r/6gNZKXyqveTlJ2Kgt1OnR7SFSjqu7N0Q
18c8lUoMhf6QDvW3RrEjeeQY6e99Hv+TCYqwjA5j/dHuQH3wR0RpKH80+KNi
tcmzHC3qqFTp8DLxohoibS6aEyHbxOSeUleEvpEjzm3KJ4fcodui5cWhb+Tb
Wx9t8FMvxZ36WD9FAi4KdoGfkvn5ZRb0k8zVDbB2i62k+08uz4B+kibLtBOA
H16Lk4p7PbqVmOU+UwP8cN7cqwugD8pL9BD0QRHjS95XoA9KPitdFvqgzuuN
KbNQbSQiPo6/+qA+n25YB3HXvbVa79i4i0iludyBuKsC8SV/xJdqEF+SeHdU
FPqmjnEFnIV46fTA4VPLoG/qnotMIcRpF+1tRrFxGrnGHZ4Bcdp4xJ3SEHfS
Q9xplwpjC31WS/zfRV6ax6MxP7s8oc/q6l9wJ4UZNXeg/6rXe9R+Q9ZOr1s6
Yhz0X8W2zZKF+P/ZEkM+D8FGuvT7y+6bbPwfj/IglOuhXGiU90+I9zaLR45T
D/Mi7XxuPyDey0L86i3iVyKIX/F97tkGfVzWjNreKxtayK3kUE3o4zqTsbgN
+rgMFMukvifXUIGJozdAH5d4xLB0iBtPHe9dzcaNpLTm9DmIG+sQ73IYgHdp
c33Doe/r5b1z5bfjeLRuaN066PtyDtnBB3HmSYGLmmycSYt9RvXls3EmgzjY
JcTBTiIO1i9p9x76xBYsa3Na5VRIlXLl1KBPbNFf8DF3r8oy6B97p3bdx3lJ
PZFtsi2C/rEwnNvNH7A/+mxl7GHoK7NYFwp9ZWTmjyMe0Fd2oL3NDeLbKj6F
52x8S+IUdLdCfPsHZ/NDnG0Y4mkqzdVuEPeu2KkPcS95qZKfCnGvF+JpjYin
JSCe1m7IvQT9aeOz6jWcjzUSSa/mbvvEcCZNck2h4Q8ezeckLQ0NekRFk6of
5lU8ZsIOye+FfHaHRvcGNp+l2RniYyCfLb7yRALy37rAaCc2/6Uvp/Zcgvx3
S8feS5BXXko6uI3NK2nddpMtkFdmPjDy+HmimkxuP38o9UY9qTm47vHxsDTm
3rvKj5BHKCfJQB5Btu8aLA15xKq/yKWaNfygrsdN0TLI29JMdE/XNE2enszw
Ekqu8odW0+tuazdW7a4nC6Oubh4UlcrscInwhzzx5N7DSWyeSFsnDauEPPFr
IJdZ2/WB+ge8PKJcCrxECsnLjGIY/4eeVyHvc110H/I+Km299xTkffrW6jYf
dlaTbB/JLMUn9bS7S+VC2bynjKjwhg2AnxxVuvRS/acfub5q6y/8pHmFyZdj
V8vJwrMTl421aCI7J+49++NZAPMuMu+k6dbXpMn9bcoVNh7e7F1wz/NIEvOz
aJFk4iFfWrveJ0ydjQPFskTlOS8SmFe7tbsBD7Hd5zpxV3U6+bBMng/wkB1n
gyIA9ziw1FZPcU095fNu+Ai4R7pQ8SXog/1Z+sZbuLSc7j7+Mxr6YP+KU6W/
DgQcrK/y3dSRewvJJMFsl/+Gg/3/8t/yJNeVFPqgTAMih+2pbCZiz+49hz6o
aYvvJZd/ekfLBezeDZfmkd7AKTkr31xlTtWF7YP+JfmhD+5s5bWy/zd2BvQv
uUd1Dj3O6klZcf5CVk9oXrvkE9CTS4GjV8fnppGtk60+F9vxSEjFtzo+sWvM
lYzM6O07C+nSpM13lnm2kDliETVafU+ZRYO3HrgSl0y3+9cZcz14RPzUrZMN
o0IZl3frFaWS80hqaKWR875WmmfeYj3vQyKzYmrC0rW3eaRBaKYBb14yyQ7x
iKufE8AcQ1wiGXEJU8QlplTI8RscqyC6TvvSZ2Q1Untu7prROu2MxK2Efogb
Tb9pPGLjRupo9+goxI2DRbIeFq3g0fEczpjbEpe468t3utclvyHT5z2dDvnR
mM4zJmx+RDl+or/yo6BY1VLIT2Nqb+ay+SmZrPtMFfLT8LYwPcgrXbeG3Gbz
Shrs/Soa8so49EfB6I900R8FXDNzA9zA8duDA2uMCkjvMrEiwA2eox3+gHbY
G+2wlLjUWjg364lLt7DnRl2vq2yHc7NyUE8CnMovZP9mWdpIDCU3FwNOtUBO
JgPwn7BPGYmD5zRS7YCc84D/7BasfAK4rljQ1NorF+vpiBoLF8B157jd9gB9
eGpunsPqAx039VYE6IOq3ZHm9svFVOLdqDNzHjWT4WYjAwAXfVPpMh1+d1Uq
VsL+7jRYNzgLfvdLXsZjALccqbN65Zf6BupwJuzUf8Mt/7fk3TfHBQCOPTWR
V2nT00D7DfYeBxz7//bnZvgmy+TzZ9DdO6y0hS15tERV/OIQS39GSnFTPfTX
Lc+Z4DBtdhXp07k08rqoOxN2zuIT+C//IK+RIUGPiJy8wy//tRD7LnSx7+IM
9l18ujPcAPo2E+3CoW+TJN5o6oS+zciaxCDwU/HNfNtYP0XHXXCJBz8lj30R
jtgXcQ37Iuzj235AX+WTzI95u4ZUkqxtGY7QV/ln/9FgDmcj7D96g/uP9lXa
yE9S4dF3zbvjWye+JbyVbwOZZ3fIrb4kAv3D+lq+Ubr9NdRhr8cy6B/eu/Sj
J/SN3xxxpEFjdTk5dKP0MfSNMwaCZ6FPfsl0wV3y3Y1kH+O+A/rkMz4qRUJf
+hPLA2dylXlkWq6fCvSlH8vvWgz33XhJ65i2ecl09NyDr+C+S0WavYe6hucm
c8nVDmXkSX5sOtQ18pcXfoN62eRYPc/oW8lE//mRGqiX+TmE74P614dRqVbz
y1vIjx3JN6D+ZXN+qe0J7XLyUFlrzjj3JnL9tl1KTvxrxn52ggLUxVxSZumO
CMwhKh4VfdJL0plHGr6tk0p5ZOyJwyeStV7Syxp8en3tGcyYLr8n4Mej+QW1
WT9OlSxn2oMfj7+lfB78r3zMvWjW/5IZzI9A8L8t9i9yt4nUs3YlZZebVA1J
2Zc8TO9AEPNvOMYbwDG2II7Bj3ZJljNkHNglC7RL/YhjCHE4NYBj8A3AMfg4
nOKn+zS4cohjhCCOMYjDaQEcwxZxjIH4g9L/xB+mAP5g+D/xhzGAPzgMwB9Y
/TkA+EMx4g/nzg5b418UT4KrXipERvPoRWOZXcsE6piyuZ637r77SOpkpV+v
j2ihNzYuqQ5PEyCNuJfWFPfSiuNe2uFdEXOyLtSTC/G96066VJOS16flIsSM
yfMTRS2HsnKp4Ty+KVJerWSyjoKR1MKTRFNWhuwd9ZaO4DW5S8/i0Z7uB6Ym
QYFkzI/eT24apXSiTce73t4motojoCx0PZa8wb20J3AvbR7upQ1N8lkzZV4D
vf7h06Hm6CpKloned3dSJNySHb7jfD7QOO+ZMfy8FqqecmnoxcBBxHP1+Nmf
nsfRV90lWrHpPGqsO33r2v4qpj5sy3CZXc2kPSHk6KLDJcROnLTPEaxh6lDe
hXIHlNdKznLtEPpMlo7ZU3GQr4XYFSxu3en6jSlG+XKUO6B8x6lMw3O3X9Cj
Sybe/lbHI4XX3R4k06HkPMqPoLwc5cd9R56V3NdEDafmNC88Wk6kCu/t31at
RBxRvgrlSijXTL+9Ygh7P1NHVqhcOveWTjLzV/PS2Uh0UH4K5TNQrs8oFUq9
zKLNRFPr0SgeifiZY1qw34CcQnkDymNQvmpoztYF94qpqL9ZQ/mDZvrVYpad
xFNdooZyCZRXozz2aMHcdL5yMrai39Y+sonoxowqOmc9ibxEuTjK1VHe61qg
Kb6QS69s+rkvLpVHJHrupD/bxUek3X7LL6NcFOUL++Mt0o6x+adG65TTvamk
YHGf9tBXZYwqys+iPBvlN7SNfE8Na6a6lqril7JKaecYx1dVPumMB8pXorwN
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
9KE37bjtsv731CtbInhvZCt9ndwVkStym2lH+U2UR6HcZl4tzycpkg56Om6b
USWPSinOM2fsbjC3BshlUf63z52bbXsY+DnDZR90Zdvm0HPeorLAz6l099Cv
ezFZ63FJzR4DujHn4q97Md/nvDTwcAotSLkSOjyBXHj59CnwcN4xiR0G92VR
uKQse1/oEG7qHLgvVeNnvIH7cvxbuT17X6h94+3/o/viZ7XNrTmCR+aENthI
r0igOWwGLtzswXj5zJ+c8aaGrp+5/W7B3jpqlRu++sPha0zBlJvK+eMaqdOk
L2cfXqikAuHD6/fwrjPWeuphJ8rr6Gm/xcUCa2qojG/swa9y/3yfwv+W3AF5
74WR974Ree/1sa+P8/F3X98i7OvjrvMZOZ71Oz8/HqSs36HZGs7Lwe+sF3jr
9UOzjtpcGtQV9rOGFvPpz/BclcYYnHRKAv+i/D3iNetfyJCgunXgX7Twvj/B
+56D910W+f26kN9PFfn99mC/30bs97uA/X5+7zwKNpVV0w10rsQRrXrqHfI2
x5c/mlnQXxU2NaWZnjI79F5OoJgKnjFqSOMlMiuxj1FyAP//GTyHIXgO9XgO
bku7I133l1C+ktGbbu1uJsJzpnmeWZbNKE9aelak9ykxfj1aI56NJ4drnLbu
6xQlTk4RQ3dqltEUmwpDXnMTdWupeG2vUMf0qeomly2qoq82CmV73Wggx6+1
W3ScHk2yrc/77fcqJGuDpnENr7B+f8Fr/668bOZ8m2PW59lviOyI6ydfGfLI
kY9rVbMFOORZjL16FIf9/tH02eioJjLS4V4v16v3X313D7HvTgb77lzKxtz3
tmuh8gr8y/TEiohCdpDTrt6fzJZUp+X+E/KoQ4HWDNPLrYTHf9TSI7WPmbzo
Zmsot4jOdNY427WyhSze2+4U2t/LXBrm/jnfq4lEXEvz2rCgnGQe5HR9Wz2O
1GD/WzT2v6Vj/9uCTc29gwxy6FMvOY+97a2EiX9N3a3UyRqUP0G5KspTL9+I
2GqfS510f56c86iVvjtc6W28cizJzEk3enc/mU4s0akX9uTRyGNVU15+GkME
hz103dpbQr9f5E9s12kmWtbuB6S/DSOPD+b0P9uaR+ZqJd9869hK5pK85SLp
fcycWxrqS7JrSey09Y9v72fzoS8uWcG9PcxI7Cszxr6yH9hXloH7o+/j/ug9
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
0C5B523zoPO29gTmbQGYTSK9
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["z", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["t", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      TemplateBox[{0}, "Spacer1"], HoldForm], TraditionalForm]},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{408.25487829918785`, 261.06297030762255`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-8, 8}, {-8, 8}, {-2.2910164414633336`*^6, 
    3.049946749047856*^6}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.1773615792464773`, -2.264496479893509, 1.2574387642232083`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.8474742793272543`*^9, 3.847474316203412*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"ec80c167-569f-4d6a-a2a5-5f24655b1d8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{"%107", ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.84747400430963*^9, 3.8474740079208174`*^9}, {
  3.847474174135808*^9, 3.847474187341855*^9}},
 NumberMarks->False,
 CellLabel->
  "In[111]:=",ExpressionUUID->"c2b45e6e-a8ad-481f-b4cc-99e29167d9b1"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = -8., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], -8, 8}}, Typeset`size$$ = {450., {136., 143.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`t$74282$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = -8}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$74282$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[1 + Rational[3, 2] $CellContext`t$$^2 + 
        Rational[9, 8] $CellContext`t$$^4 + 
        Rational[21, 80] $CellContext`t$$^6 + 
        Rational[-3303, 4480] $CellContext`t$$^8 + $CellContext`z + 
        Rational[3, 2] $CellContext`t$$^2 $CellContext`z + 
        Rational[33, 8] $CellContext`t$$^4 $CellContext`z + 
        Rational[549, 80] $CellContext`t$$^6 $CellContext`z + 
        Rational[-1, 2] $CellContext`z^2 + 
        Rational[-9, 4] $CellContext`t$$^2 $CellContext`z^2 + 
        Rational[-21, 16] $CellContext`t$$^4 $CellContext`z^2 + 
        Rational[1101, 160] $CellContext`t$$^6 $CellContext`z^2 + 
        Rational[-1, 6] $CellContext`z^3 + 
        Rational[-11, 4] $CellContext`t$$^2 $CellContext`z^3 + 
        Rational[-183, 16] $CellContext`t$$^4 $CellContext`z^3 + 
        Rational[1, 8] $CellContext`z^4 + 
        Rational[7, 16] $CellContext`t$$^2 $CellContext`z^4 + 
        Rational[-367, 64] $CellContext`t$$^4 $CellContext`z^4 + 
        Rational[11, 120] $CellContext`z^5 + 
        Rational[183, 80] $CellContext`t$$^2 $CellContext`z^5 + 
        Rational[-7, 720] $CellContext`z^6 + 
        Rational[367, 480] $CellContext`t$$^2 $CellContext`z^6 + 
        Rational[-61, 1680] $CellContext`z^7 + 
        Rational[-367, 40320] $CellContext`z^8, {$CellContext`z, -8, 8}], 
      "Specifications" :> {{$CellContext`t$$, -8, 8}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{511., {207., 214.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.8474739852693443`*^9, 3.8474740124179554`*^9}, {
  3.847474175108631*^9, 3.8474741930330777`*^9}},
 CellLabel->
  "Out[111]=",ExpressionUUID->"0c4b6d8b-1c19-4bbe-918d-1b6d68398b09"]
}, Open  ]],

Cell["No solution present => power series method not applicable", "Text",
 CellChangeTimes->{{3.8460007971366615`*^9, 
  3.846000835124305*^9}},ExpressionUUID->"2d15531d-cafa-4f18-935b-\
3d55c08a0c2b"]
}, Open  ]]
},
WindowSize->{1280, 637},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.25 Inherited,
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 797, 22, 39, "Input",ExpressionUUID->"95d984f9-0dda-4720-9dae-c7cf8695aad6"],
Cell[1380, 46, 655, 19, 44, "Output",ExpressionUUID->"e58f35f3-eaa1-4a2d-a10a-45bdd5a95b17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2072, 70, 693, 20, 39, "Input",ExpressionUUID->"b49c15a8-2100-47a7-9ce7-35131234f9c5"],
Cell[2768, 92, 629, 19, 44, "Output",ExpressionUUID->"1a8e305f-b773-44d9-aabd-1cee592137ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3434, 116, 141, 3, 83, "Section",ExpressionUUID->"ec05e4a8-dbf5-4d63-96c3-6f76c41c8ade"],
Cell[CellGroupData[{
Cell[3600, 123, 497, 12, 35, "Input",ExpressionUUID->"ade036d4-f74e-4abd-b1bd-518e796987b2"],
Cell[4100, 137, 343, 7, 40, "Output",ExpressionUUID->"4713df2b-c3d2-4e04-9fc9-ef41ff0daef5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4480, 149, 458, 11, 35, "Input",ExpressionUUID->"42d20e93-6361-42b1-a0db-d0c9557a4b9e"],
Cell[4941, 162, 345, 7, 40, "Output",ExpressionUUID->"1fea7a75-ac6c-4e2f-9573-fbe4c32c7dd6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5323, 174, 175, 2, 35, "Input",ExpressionUUID->"d067fce1-c0d5-4ce9-baf0-e1af2ec28600"],
Cell[5501, 178, 1465, 40, 69, "Output",ExpressionUUID->"6fdc57e1-895d-4f26-baff-51aedaa175e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7003, 223, 1652, 44, 67, "Input",ExpressionUUID->"f2b98706-463e-4a6f-8029-5d751adc59e6"],
Cell[8658, 269, 5172, 129, 137, "Output",ExpressionUUID->"76334ea6-9aa1-4a53-89fe-b56c89561828"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13867, 403, 1084, 28, 39, "Input",ExpressionUUID->"b8f6a77b-f222-473e-803c-9e5bf4d72ad0"],
Cell[14954, 433, 4588, 125, 128, "Output",ExpressionUUID->"e2ce3317-b8a0-47b5-aa2b-c5c6e741e8bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19579, 563, 175, 2, 35, "Input",ExpressionUUID->"1017ceb3-e77b-4813-8206-4d4b27691701"],
Cell[19757, 567, 1467, 40, 69, "Output",ExpressionUUID->"da73116e-7c75-47da-b85b-71e90a83bab9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21261, 612, 1649, 44, 67, "Input",ExpressionUUID->"9ec617f4-959f-4ea5-bb70-287108cb95a2"],
Cell[22913, 658, 5169, 129, 137, "Output",ExpressionUUID->"5ab55a5e-22ff-4921-88d7-2d1e0c503de5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28119, 792, 1055, 27, 39, "Input",ExpressionUUID->"0013b9bf-6e5c-4c0b-936c-11d51f03520f"],
Cell[29177, 821, 4589, 125, 128, "Output",ExpressionUUID->"42075a6e-4a44-4273-8b2a-ce4b8e69d1d1"]
}, Open  ]],
Cell[33781, 949, 152, 3, 35, "Input",ExpressionUUID->"2fc9fb69-46bb-43b6-a11f-410e2fc290c0"],
Cell[CellGroupData[{
Cell[33958, 956, 8365, 208, 212, "Input",ExpressionUUID->"ec3f2250-60e6-4130-b80a-18adcefd242b"],
Cell[42326, 1166, 607, 13, 29, "Message",ExpressionUUID->"569808e5-58df-48ab-a515-4271d6c6dd53"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42982, 1185, 132, 3, 83, "Section",ExpressionUUID->"8f921653-f8ca-4d0c-905e-cda0437f2ebc"],
Cell[CellGroupData[{
Cell[43139, 1192, 576, 10, 35, "Input",ExpressionUUID->"b00a09fd-53fe-4996-bf6d-37880b5c1e80"],
Cell[43718, 1204, 295, 5, 40, "Output",ExpressionUUID->"a14828e8-304a-4f0a-9103-1239e7037308"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44050, 1214, 466, 10, 35, "Input",ExpressionUUID->"620de2c9-bc01-48d4-b661-201d1d1f32cd"],
Cell[44519, 1226, 375, 8, 40, "Output",ExpressionUUID->"3114bde7-2020-4a0d-a1f5-bc8acc4a8aab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44931, 1239, 1162, 35, 39, "Input",ExpressionUUID->"3ea4b716-6ebf-4503-a213-3fcdcac07276"],
Cell[46096, 1276, 857, 25, 46, "Output",ExpressionUUID->"f2afa0ba-e197-477b-8849-68d89b045cf2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46990, 1306, 232, 4, 35, "Input",ExpressionUUID->"abb6bc3a-69a0-4ebd-8521-2f78077fe342"],
Cell[47225, 1312, 1831, 45, 65, "Output",ExpressionUUID->"c5369862-a59a-40b8-908c-dbf658972556"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49093, 1362, 668, 16, 39, "Input",ExpressionUUID->"b93cee57-a1e5-40a9-ae9c-10c2d2a6626c"],
Cell[49764, 1380, 1947, 55, 72, "Output",ExpressionUUID->"d4f01591-4f73-4e2f-9f4e-d06d3ce2fea0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51748, 1440, 1164, 35, 39, "Input",ExpressionUUID->"fe5d4a53-075c-4aeb-88a4-03027647fd64"],
Cell[52915, 1477, 1173, 36, 44, "Output",ExpressionUUID->"06739559-9d78-4184-9eaf-d53c40572521"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54125, 1518, 287, 5, 35, "Input",ExpressionUUID->"9bdc1c6d-233d-48f1-8601-4f5b5e629df6"],
Cell[54415, 1525, 2304, 58, 65, "Output",ExpressionUUID->"36cb24ee-87f1-4802-b540-de743beeb5ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56756, 1588, 593, 15, 39, "Input",ExpressionUUID->"8dfa1a02-d3d9-4bea-909b-26bf6a60cd37"],
Cell[57352, 1605, 2354, 65, 72, "Output",ExpressionUUID->"a87599f1-d53e-497e-86de-c5407d23953e"]
}, Open  ]],
Cell[59721, 1673, 308, 7, 35, "Input",ExpressionUUID->"334f97d4-25ac-4307-a39e-fd14a29fe2a9"],
Cell[CellGroupData[{
Cell[60054, 1684, 4144, 109, 120, "Input",ExpressionUUID->"946053bc-dbf7-4566-8c59-6ffa026bfde3"],
Cell[64201, 1795, 355, 9, 29, "Message",ExpressionUUID->"8a90bb8e-b041-418c-a93d-2cbdc813d762"],
Cell[64559, 1806, 13052, 344, 464, "Output",ExpressionUUID->"76ce18fe-f031-4e83-ba1e-15997c2dee5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77648, 2155, 2755, 75, 95, "Input",ExpressionUUID->"2b616d00-2539-4515-b7eb-a076ccaed566"],
Cell[80406, 2232, 405, 10, 29, "Message",ExpressionUUID->"ca023133-f823-41d1-8bdc-80daa3cbe488"],
Cell[80814, 2244, 16294, 423, 894, "Output",ExpressionUUID->"738c3f67-81ab-41c7-aeef-7b692d6eff4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97145, 2672, 12317, 313, 332, "Input",ExpressionUUID->"12fe50e9-2bad-44fc-a5b6-52671b213bc8"],
Cell[109465, 2987, 352, 9, 29, "Message",ExpressionUUID->"9a085204-894c-495b-bd63-c73e39ec708d"],
Cell[109820, 2998, 892, 22, 40, "Output",ExpressionUUID->"780c93c3-4cd5-4a2f-a954-952e42b2893f"]
}, Open  ]],
Cell[110727, 3023, 787, 21, 35, "Input",ExpressionUUID->"ee16ba00-86db-451f-8efe-480ac7d771b3"],
Cell[CellGroupData[{
Cell[111539, 3048, 16748, 440, 404, "Input",ExpressionUUID->"944232c0-af6e-41fa-ad08-4c42d1ee4aa0"],
Cell[128290, 3490, 377, 9, 29, "Message",ExpressionUUID->"a46a5a92-7545-40ff-b817-d649f6c44930"],
Cell[128670, 3501, 931, 23, 40, "Output",ExpressionUUID->"2df614a2-69fd-4489-82d2-22d071798005"]
}, Open  ]],
Cell[129616, 3527, 502, 15, 35, "Input",ExpressionUUID->"770434b4-31fc-47a4-a2b4-ca4890d63129"],
Cell[CellGroupData[{
Cell[130143, 3546, 342, 8, 35, "Input",ExpressionUUID->"735f7787-8510-46d1-886a-5c348ecbbc79"],
Cell[130488, 3556, 352, 9, 29, "Message",ExpressionUUID->"7ad1a072-e8ae-441d-a677-23e717b081a6"],
Cell[130843, 3567, 13511, 358, 473, "Output",ExpressionUUID->"70d6083e-f5e7-4ee4-8614-371c3b05a864"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[144403, 3931, 162, 3, 83, "Section",ExpressionUUID->"3b86efe4-139d-4dc2-9499-f3b1af340f43"],
Cell[CellGroupData[{
Cell[144590, 3938, 1088, 31, 64, "Input",ExpressionUUID->"b296da28-1634-4c3b-a866-4df983f80848"],
Cell[145681, 3971, 858, 26, 46, "Output",ExpressionUUID->"7c112290-d49b-444a-8c3e-45ca9d780b32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146576, 4002, 868, 27, 41, "Input",ExpressionUUID->"22c45d8b-5bc1-40fe-8c93-2af0a95d97b7"],
Cell[147447, 4031, 1302, 32, 40, "Output",ExpressionUUID->"12000e82-8340-4095-9e43-309aac6bf1d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148786, 4068, 678, 15, 39, "Input",ExpressionUUID->"ccf5f47d-8846-4b58-8915-6c5d100ac605"],
Cell[149467, 4085, 1418, 42, 44, "Output",ExpressionUUID->"9c96a0b5-2693-4a86-9b00-cec1bbdbbc09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150922, 4132, 528, 15, 39, "Input",ExpressionUUID->"caa3d045-d239-454a-9a68-181c72bbf5f0"],
Cell[151453, 4149, 858, 26, 46, "Output",ExpressionUUID->"3663ec1d-fea9-4a12-9de9-74ce44205142"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152348, 4180, 868, 27, 41, "Input",ExpressionUUID->"2a7b69d9-aede-4107-ac3e-1c60521a31a5"],
Cell[153219, 4209, 1300, 32, 40, "Output",ExpressionUUID->"1b845ba9-10e7-42a8-8c70-bac379a87af7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154556, 4246, 440, 10, 39, "Input",ExpressionUUID->"ba62eec9-5651-4f7a-9066-c9220637bd98"],
Cell[154999, 4258, 1363, 40, 44, "Output",ExpressionUUID->"f3db4768-58a5-4807-a140-cf5c7275c7f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156399, 4303, 2503, 70, 92, "Input",ExpressionUUID->"744a2732-3603-4613-aaaa-9dd27d0e18c8"],
Cell[158905, 4375, 352, 9, 29, "Message",ExpressionUUID->"1d9b8dae-22ca-40aa-b5c2-9bb820bfb449"],
Cell[159260, 4386, 1768, 47, 89, "Output",ExpressionUUID->"63a1995c-3a33-469d-ad25-19c782757e51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161065, 4438, 780, 21, 39, "Input",ExpressionUUID->"f5437fdc-2ef0-486e-b947-dcd623d662a9"],
Cell[161848, 4461, 354, 9, 29, "Message",ExpressionUUID->"f4aa77a6-0587-4d42-b595-7ac3e3c06c13"],
Cell[162205, 4472, 1080, 32, 40, "Output",ExpressionUUID->"12e9a32b-1345-4fd1-8cf5-6158b653b3e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163322, 4509, 2130, 56, 67, "Input",ExpressionUUID->"182c40cc-2c01-41ab-8f8b-4262070e7a39"],
Cell[165455, 4567, 5602, 171, 339, "Output",ExpressionUUID->"e402d28a-3aa4-455f-825e-298cd61e017d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[171106, 4744, 140, 3, 83, "Section",ExpressionUUID->"83082550-4883-4f17-9da3-e8ad1c2e0964"],
Cell[171249, 4749, 420, 8, 35, "Input",ExpressionUUID->"777e9066-45bb-4ddb-a2e5-b0a46ac819cc"],
Cell[CellGroupData[{
Cell[171694, 4761, 950, 23, 35, "Input",ExpressionUUID->"4a85d865-9cd8-45ed-a494-377d13211f8a"],
Cell[172647, 4786, 1653, 49, 40, "Output",ExpressionUUID->"229d6019-d32f-4bc6-a52f-aa85528bfb16"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174337, 4840, 905, 22, 35, "Input",ExpressionUUID->"40d9ad23-2639-46f7-8287-064ced18d01b"],
Cell[175245, 4864, 1619, 48, 40, "Output",ExpressionUUID->"af5cf957-6300-428d-8e7f-261e811e497b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176901, 4917, 1051, 25, 64, "Input",ExpressionUUID->"b56d53c1-002f-4104-a17f-df6504635f3f"],
Cell[177955, 4944, 15214, 444, 355, "Output",ExpressionUUID->"8e63166c-f681-4be1-9419-1a24c7e56319"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193206, 5393, 973, 24, 64, "Input",ExpressionUUID->"59bbce87-45aa-4e12-b5f0-3c670cd9eca1"],
Cell[194182, 5419, 10813, 314, 296, "Output",ExpressionUUID->"b5c44bff-76db-4cf8-ac4e-4658fae7210b"]
}, Open  ]],
Cell[205010, 5736, 27297, 755, 751, "Input",ExpressionUUID->"b47b600d-73db-4be1-9367-6ca81a08b204"],
Cell[CellGroupData[{
Cell[232332, 6495, 1107, 25, 35, "Input",ExpressionUUID->"136415e9-a927-4d1d-bb0a-60ff7dd4fbd1"],
Cell[233442, 6522, 34618, 909, 1055, "Output",ExpressionUUID->"de451fef-1171-4491-ad6a-c25fa1f2496a"]
}, Open  ]],
Cell[268075, 7434, 206, 3, 43, "Text",ExpressionUUID->"79c0ada9-62fe-4ab1-b3ed-4b28f0e75ddb"],
Cell[268284, 7439, 242, 5, 35, "Input",ExpressionUUID->"1562c2a1-3c03-4be5-b775-f32d6ee81f29"],
Cell[CellGroupData[{
Cell[268551, 7448, 1048, 23, 35, "Input",ExpressionUUID->"2af39df2-fa62-4db0-a92d-2c973fa37ff0"],
Cell[269602, 7473, 13247, 384, 485, "Output",ExpressionUUID->"83e805fd-9f8e-4ec4-9dec-4936a2b905dd"]
}, Open  ]],
Cell[282864, 7860, 174, 3, 43, "Text",ExpressionUUID->"da4dabf4-2c82-4243-a2ec-739f5dbbb37d"],
Cell[CellGroupData[{
Cell[283063, 7867, 1542, 43, 72, "Input",ExpressionUUID->"ac781d3f-e637-493c-829c-728e5bf8744a"],
Cell[284608, 7912, 1321, 38, 98, "Output",ExpressionUUID->"42ec19a2-a0f4-4117-9aa4-0b16ffeb65b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285966, 7955, 366, 8, 35, "Input",ExpressionUUID->"5c2fe9fd-16e3-4e50-a10a-89b4e1498fce"],
Cell[286335, 7965, 3595, 113, 150, "Output",ExpressionUUID->"550b8977-1e64-4ec2-a9a9-9329c56c4d7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289967, 8083, 366, 8, 35, "Input",ExpressionUUID->"57554cdf-30f5-43b4-8290-ebaddef0f8b7"],
Cell[290336, 8093, 6562, 204, 247, "Output",ExpressionUUID->"1a11f72e-68b2-4e81-88f7-7fc690ba92b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296935, 8302, 883, 22, 47, "Input",ExpressionUUID->"a83695c5-1d20-4ece-b8d6-393c05f05ecf"],
Cell[297821, 8326, 1243, 35, 66, "Output",ExpressionUUID->"6d63b141-9cb1-4ca1-ae59-51542bef3a69"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299101, 8366, 608, 16, 47, "Input",ExpressionUUID->"eca6ef02-2bf1-4b88-932a-ba1cab9d5d7d"],
Cell[299712, 8384, 1657, 57, 125, "Output",ExpressionUUID->"ee1d3174-ea1f-4290-8878-33037d1988b1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301406, 8446, 1770, 60, 147, "Input",ExpressionUUID->"2a430bc7-1503-42d8-bcd5-5b8f96c6f588"],
Cell[303179, 8508, 1610, 56, 125, "Output",ExpressionUUID->"2bc8bec7-ea82-4cdb-b59f-6c15dfe06009"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304826, 8569, 494, 14, 35, "Input",ExpressionUUID->"a91aeaf0-e980-4ce9-b343-299db3a674e7"],
Cell[305323, 8585, 2743, 58, 467, "Output",ExpressionUUID->"54c5d501-35e3-4854-96ae-1d7ea0c5880d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308103, 8648, 739, 17, 35, "Input",ExpressionUUID->"e46ea8ff-02f6-4e9f-b66a-1c50c0b2134d"],
Cell[308845, 8667, 360858, 5969, 351, 305810, 5066, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"09acc4fb-172f-4230-802e-3e626e4db09e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[669740, 14641, 558, 15, 35, "Input",ExpressionUUID->"1950c05a-99b0-472e-81a4-f0cb5c54718f"],
Cell[670301, 14658, 2744, 58, 434, "Output",ExpressionUUID->"6477b9c7-871b-40ac-948a-884382556260"]
}, Open  ]],
Cell[673060, 14719, 154, 3, 35, "Input",ExpressionUUID->"b3eaca0d-88d8-4e31-8901-29cb67671083"],
Cell[CellGroupData[{
Cell[673239, 14726, 515, 11, 35, "Input",ExpressionUUID->"6043b570-0be7-482b-b88a-f20a1c3ea1d1"],
Cell[673757, 14739, 2466, 80, 108, "Output",ExpressionUUID->"8d3dd3f0-7311-4c5e-81fe-291966a14f70"]
}, Open  ]],
Cell[CellGroupData[{
Cell[676260, 14824, 286, 7, 35, "Input",ExpressionUUID->"6b3027a9-a1c9-4ad8-aa49-046b6ad2ebfa"],
Cell[676549, 14833, 520, 13, 61, "Output",ExpressionUUID->"5618d195-d877-454f-af8e-3b0a98669318"]
}, Open  ]],
Cell[CellGroupData[{
Cell[677106, 14851, 688, 19, 63, "Input",ExpressionUUID->"49c50c72-e069-4412-bb2a-aca504cd97df"],
Cell[677797, 14872, 22624, 390, 300, "Output",ExpressionUUID->"a87b99d8-e6e2-47a9-9eaf-fb32d7d38155"]
}, Open  ]],
Cell[CellGroupData[{
Cell[700458, 15267, 562, 15, 35, "Input",ExpressionUUID->"ad0dcc92-c24f-48e2-8173-deafe3e25e84"],
Cell[701023, 15284, 269537, 4461, 347, "Output",ExpressionUUID->"ec80c167-569f-4d6a-a2a5-5f24655b1d8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[970597, 19750, 532, 15, 35, "Input",ExpressionUUID->"c2b45e6e-a8ad-481f-b4cc-99e29167d9b1"],
Cell[971132, 19767, 3020, 58, 444, "Output",ExpressionUUID->"0c4b6d8b-1c19-4bbe-918d-1b6d68398b09"]
}, Open  ]],
Cell[974167, 19828, 201, 3, 43, "Text",ExpressionUUID->"2d15531d-cafa-4f18-935b-3d55c08a0c2b"]
}, Open  ]]
}
]
*)

